{
	"id": 2809,
	"name": "React Router API Reference",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 2810,
			"name": "create-react-router",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"readme": [
				{
					"kind": "text",
					"text": "Create a new React Router app.\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpm create react-router\n```"
				}
			]
		},
		{
			"id": 2811,
			"name": "react-router",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2812,
					"name": "NavigationType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Actions represent the type of change to a location value."
							}
						]
					},
					"children": [
						{
							"id": 2813,
							"name": "Pop",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A POP indicates a change to an arbitrary index in the history stack, such\nas a back or forward navigation. It does not describe the direction of the\nnavigation, only that the current index changed.\n\nNote: This is the default action for newly created history objects."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L16"
								}
							],
							"type": {
								"type": "literal",
								"value": "POP"
							}
						},
						{
							"id": 2814,
							"name": "Push",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A PUSH indicates a new entry being added to the history stack, such as when\na link is clicked and a new page loads. When this happens, all subsequent\nentries in the stack are lost."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L23"
								}
							],
							"type": {
								"type": "literal",
								"value": "PUSH"
							}
						},
						{
							"id": 2815,
							"name": "Replace",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A REPLACE indicates the entry at the current index in the history stack\nbeing replaced by a new one."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L29"
								}
							],
							"type": {
								"type": "literal",
								"value": "REPLACE"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2813,
								2814,
								2815
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 8,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L8"
						}
					]
				},
				{
					"id": 2816,
					"name": "UNSAFE_ServerMode",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The mode to use when running the server."
							}
						]
					},
					"children": [
						{
							"id": 2817,
							"name": "Development",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/mode.ts",
									"line": 5,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/mode.ts#L5"
								}
							],
							"type": {
								"type": "literal",
								"value": "development"
							}
						},
						{
							"id": 2818,
							"name": "Production",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/mode.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/mode.ts#L6"
								}
							],
							"type": {
								"type": "literal",
								"value": "production"
							}
						},
						{
							"id": 2819,
							"name": "Test",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/mode.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/mode.ts#L7"
								}
							],
							"type": {
								"type": "literal",
								"value": "test"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								2817,
								2818,
								2819
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/mode.ts",
							"line": 4,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/mode.ts#L4"
						}
					]
				},
				{
					"id": 2820,
					"name": "UNSAFE_DataWithResponseInit",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 2821,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1340,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1340"
								}
							],
							"signatures": [
								{
									"id": 2822,
									"name": "new UNSAFE_DataWithResponseInit",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 1340,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1340"
										}
									],
									"typeParameters": [
										{
											"id": 2823,
											"name": "D",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2824,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2823,
												"name": "D",
												"package": "react-router",
												"qualifiedName": "DataWithResponseInit.D",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 2825,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "ResponseInit"
												},
												"name": "ResponseInit",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2820,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2823,
												"name": "D",
												"package": "react-router",
												"qualifiedName": "DataWithResponseInit.D",
												"refersToTypeParameter": true
											}
										],
										"name": "DataWithResponseInit",
										"package": "react-router"
									}
								}
							]
						},
						{
							"id": 2826,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1337,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1337"
								}
							],
							"type": {
								"type": "reference",
								"target": 2823,
								"name": "D",
								"package": "react-router",
								"qualifiedName": "DataWithResponseInit.D",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 2827,
							"name": "init",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1338,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1338"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ResponseInit"
										},
										"name": "ResponseInit",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 2828,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1336,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1336"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"DataWithResponseInit\""
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2821
							]
						},
						{
							"title": "Properties",
							"children": [
								2826,
								2827,
								2828
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1335,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1335"
						}
					],
					"typeParameters": [
						{
							"id": 2829,
							"name": "D",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 2830,
					"name": "UNSAFE_RemixErrorBoundary",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 2831,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
									"line": 22,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L22"
								}
							],
							"signatures": [
								{
									"id": 2832,
									"name": "new UNSAFE_RemixErrorBoundary",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"line": 22,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L22"
										}
									],
									"parameters": [
										{
											"id": 2833,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
													"qualifiedName": "RemixErrorBoundaryProps"
												},
												"name": "RemixErrorBoundaryProps",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2830,
										"name": "RemixErrorBoundary",
										"package": "react-router"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "React.Component<\n  RemixErrorBoundaryProps,\n  RemixErrorBoundaryState\n>.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "React.Component<\n  RemixErrorBoundaryProps,\n  RemixErrorBoundaryState\n>.constructor"
							}
						},
						{
							"id": 2834,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If using the new style context, re-declare this in your class to be the\n"
									},
									{
										"kind": "code",
										"text": "`React.ContextType`"
									},
									{
										"kind": "text",
										"text": " of your "
									},
									{
										"kind": "code",
										"text": "`static contextType`"
									},
									{
										"kind": "text",
										"text": ".\nShould be used with type annotation or static contextType.\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://react.dev/reference/react/Component#context"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 512,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.context"
							}
						},
						{
							"id": 2835,
							"name": "props",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 532,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Readonly"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"qualifiedName": "RemixErrorBoundaryProps"
										},
										"name": "RemixErrorBoundaryProps",
										"package": "react-router"
									}
								],
								"name": "Readonly",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.props"
							}
						},
						{
							"id": 2836,
							"name": "refs",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "https://legacy.reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 538,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2837,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 538,
											"character": 14
										}
									],
									"indexSignatures": [
										{
											"id": 2838,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"line": 539,
													"character": 12
												}
											],
											"parameters": [
												{
													"id": 2839,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ReactInstance"
												},
												"name": "ReactInstance",
												"package": "@types/react",
												"qualifiedName": "React.ReactInstance"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.refs"
							}
						},
						{
							"id": 2840,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 533,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Readonly"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"qualifiedName": "RemixErrorBoundaryState"
										},
										"name": "RemixErrorBoundaryState",
										"package": "react-router"
									}
								],
								"name": "Readonly",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.state"
							}
						},
						{
							"id": 2841,
							"name": "contextType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If set, "
									},
									{
										"kind": "code",
										"text": "`this.context`"
									},
									{
										"kind": "text",
										"text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://react.dev/reference/react/Component#static-contexttype"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 495,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.Context"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Context",
								"package": "@types/react",
								"qualifiedName": "React.Context"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.contextType"
							}
						},
						{
							"id": 2842,
							"name": "componentDidCatch",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 658,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2843,
									"name": "componentDidCatch",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 658,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2844,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										},
										{
											"id": 2845,
											"name": "errorInfo",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ErrorInfo"
												},
												"name": "ErrorInfo",
												"package": "@types/react",
												"qualifiedName": "React.ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentDidCatch"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentDidCatch"
							}
						},
						{
							"id": 2846,
							"name": "componentDidMount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 637,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2847,
									"name": "componentDidMount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 637,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentDidMount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentDidMount"
							}
						},
						{
							"id": 2848,
							"name": "componentDidUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 700,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2849,
									"name": "componentDidUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 700,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2850,
											"name": "prevProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2851,
											"name": "prevState",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2852,
											"name": "snapshot",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentDidUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentDidUpdate"
							}
						},
						{
							"id": 2853,
							"name": "componentWillMount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 715,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2854,
									"name": "componentWillMount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately before mounting occurs, and before "
											},
											{
												"kind": "code",
												"text": "`Component#render`"
											},
											{
												"kind": "text",
												"text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 715,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentWillMount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentWillMount"
							}
						},
						{
							"id": 2855,
							"name": "componentWillReceiveProps",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 744,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2856,
									"name": "componentWillReceiveProps",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
											},
											{
												"kind": "code",
												"text": "`Component#setState`"
											},
											{
												"kind": "text",
												"text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 744,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2857,
											"name": "nextProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2858,
											"name": "nextContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentWillReceiveProps"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentWillReceiveProps"
							}
						},
						{
							"id": 2859,
							"name": "componentWillUnmount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 653,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2860,
									"name": "componentWillUnmount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
											},
											{
												"kind": "code",
												"text": "`componentDidMount`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 653,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentWillUnmount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentWillUnmount"
							}
						},
						{
							"id": 2861,
							"name": "componentWillUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 774,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2862,
									"name": "componentWillUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
											},
											{
												"kind": "code",
												"text": "`Component#setState`"
											},
											{
												"kind": "text",
												"text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 774,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2863,
											"name": "nextProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2864,
											"name": "nextState",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2865,
											"name": "nextContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentWillUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentWillUpdate"
							}
						},
						{
							"id": 2866,
							"name": "forceUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 529,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2867,
									"name": "forceUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 529,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2868,
											"name": "callback",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2869,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"line": 529,
															"character": 31
														}
													],
													"signatures": [
														{
															"id": 2870,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																	"line": 529,
																	"character": 31
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.forceUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.forceUpdate"
							}
						},
						{
							"id": 2871,
							"name": "getSnapshotBeforeUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 694,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2872,
									"name": "getSnapshotBeforeUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Runs before React applies the result of "
											},
											{
												"kind": "code",
												"text": "`render`"
											},
											{
												"kind": "text",
												"text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
											},
											{
												"kind": "code",
												"text": "`render`"
											},
											{
												"kind": "text",
												"text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 694,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2873,
											"name": "prevProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2874,
											"name": "prevState",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.getSnapshotBeforeUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2875,
							"name": "render",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
									"line": 55,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L55"
								}
							],
							"signatures": [
								{
									"id": 2876,
									"name": "render",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"line": 55,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L55"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.iterable.d.ts",
													"qualifiedName": "Iterable"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												],
												"name": "Iterable",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSX.Element"
												},
												"name": "Element",
												"package": "@types/react",
												"qualifiedName": "React.JSX.Element"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.render"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.render"
							}
						},
						{
							"id": 2877,
							"name": "setState",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 524,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2878,
									"name": "setState",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 524,
											"character": 8
										}
									],
									"typeParameters": [
										{
											"id": 2879,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"target": {
														"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
														"qualifiedName": "RemixErrorBoundaryState"
													},
													"name": "RemixErrorBoundaryState",
													"package": "react-router"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2880,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2881,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																	"line": 525,
																	"character": 20
																}
															],
															"signatures": [
																{
																	"id": 2882,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																			"line": 525,
																			"character": 20
																		}
																	],
																	"parameters": [
																		{
																			"id": 2883,
																			"name": "prevState",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Readonly"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
																							"qualifiedName": "RemixErrorBoundaryState"
																						},
																						"name": "RemixErrorBoundaryState",
																						"package": "react-router"
																					}
																				],
																				"name": "Readonly",
																				"package": "typescript"
																			}
																		},
																		{
																			"id": 2884,
																			"name": "props",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Readonly"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
																							"qualifiedName": "RemixErrorBoundaryProps"
																						},
																						"name": "RemixErrorBoundaryProps",
																						"package": "react-router"
																					}
																				],
																				"name": "Readonly",
																				"package": "typescript"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
																					"qualifiedName": "RemixErrorBoundaryState"
																				},
																				"name": "RemixErrorBoundaryState",
																				"package": "react-router"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Pick"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
																							"qualifiedName": "RemixErrorBoundaryState"
																						},
																						"name": "RemixErrorBoundaryState",
																						"package": "react-router"
																					},
																					{
																						"type": "reference",
																						"target": 2879,
																						"name": "K",
																						"package": "@types/react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Pick",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Pick"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
																	"qualifiedName": "RemixErrorBoundaryState"
																},
																"name": "RemixErrorBoundaryState",
																"package": "react-router"
															},
															{
																"type": "reference",
																"target": 2879,
																"name": "K",
																"package": "@types/react",
																"refersToTypeParameter": true
															}
														],
														"name": "Pick",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 2885,
											"name": "callback",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2886,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"line": 526,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 2887,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																	"line": 526,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.setState"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.setState"
							}
						},
						{
							"id": 2888,
							"name": "shouldComponentUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 648,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2889,
									"name": "shouldComponentUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
											},
											{
												"kind": "code",
												"text": "`Component`"
											},
											{
												"kind": "text",
												"text": " always returns true.\n"
											},
											{
												"kind": "code",
												"text": "`PureComponent`"
											},
											{
												"kind": "text",
												"text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
											},
											{
												"kind": "code",
												"text": "`Component#render`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`componentWillUpdate`"
											},
											{
												"kind": "text",
												"text": "\nand "
											},
											{
												"kind": "code",
												"text": "`componentDidUpdate`"
											},
											{
												"kind": "text",
												"text": " will not be called."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 648,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2890,
											"name": "nextProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2891,
											"name": "nextState",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2892,
											"name": "nextContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.shouldComponentUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.shouldComponentUpdate"
							}
						},
						{
							"id": 2893,
							"name": "UNSAFE_componentWillMount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 729,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2894,
									"name": "UNSAFE_componentWillMount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately before mounting occurs, and before "
											},
											{
												"kind": "code",
												"text": "`Component#render`"
											},
											{
												"kind": "text",
												"text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use componentDidMount or the constructor instead"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 729,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.UNSAFE_componentWillMount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2895,
							"name": "UNSAFE_componentWillReceiveProps",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 761,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2896,
									"name": "UNSAFE_componentWillReceiveProps",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
											},
											{
												"kind": "code",
												"text": "`Component#setState`"
											},
											{
												"kind": "text",
												"text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use static getDerivedStateFromProps instead"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 761,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2897,
											"name": "nextProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2898,
											"name": "nextContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2899,
							"name": "UNSAFE_componentWillUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 789,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2900,
									"name": "UNSAFE_componentWillUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
											},
											{
												"kind": "code",
												"text": "`Component#setState`"
											},
											{
												"kind": "text",
												"text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 789,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 2901,
											"name": "nextProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2902,
											"name": "nextState",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 2903,
											"name": "nextContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.UNSAFE_componentWillUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2904,
							"name": "getDerivedStateFromError",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
									"line": 27,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L27"
								}
							],
							"signatures": [
								{
									"id": 2905,
									"name": "getDerivedStateFromError",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"line": 27,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L27"
										}
									],
									"parameters": [
										{
											"id": 2906,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2907,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2908,
													"name": "error",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"line": 28,
															"character": 13,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L28"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2908
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
													"line": 28,
													"character": 11,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L28"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 2909,
							"name": "getDerivedStateFromProps",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
									"line": 31,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L31"
								}
							],
							"signatures": [
								{
									"id": 2910,
									"name": "getDerivedStateFromProps",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"line": 31,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L31"
										}
									],
									"parameters": [
										{
											"id": 2911,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
													"qualifiedName": "RemixErrorBoundaryProps"
												},
												"name": "RemixErrorBoundaryProps",
												"package": "react-router"
											}
										},
										{
											"id": 2912,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
													"qualifiedName": "RemixErrorBoundaryState"
												},
												"name": "RemixErrorBoundaryState",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2913,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2914,
													"name": "error",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"line": 45,
															"character": 15,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L45"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														]
													},
													"defaultValue": "..."
												},
												{
													"id": 2915,
													"name": "location",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"line": 45,
															"character": 43,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L45"
														}
													],
													"type": {
														"type": "reference",
														"target": 3994,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Location",
														"package": "react-router"
													},
													"defaultValue": "props.location"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2914,
														2915
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
													"line": 45,
													"character": 13,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L45"
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2831
							]
						},
						{
							"title": "Properties",
							"children": [
								2834,
								2835,
								2836,
								2840,
								2841
							]
						},
						{
							"title": "Methods",
							"children": [
								2842,
								2846,
								2848,
								2853,
								2855,
								2859,
								2861,
								2866,
								2871,
								2875,
								2877,
								2888,
								2893,
								2895,
								2899,
								2904,
								2909
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
							"line": 18,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L18"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
								"qualifiedName": "React.Component"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
										"qualifiedName": "RemixErrorBoundaryProps"
									},
									"name": "RemixErrorBoundaryProps",
									"package": "react-router"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
										"qualifiedName": "RemixErrorBoundaryState"
									},
									"name": "RemixErrorBoundaryState",
									"package": "react-router"
								}
							],
							"name": "Component",
							"package": "@types/react",
							"qualifiedName": "React.Component"
						}
					]
				},
				{
					"id": 2916,
					"name": "ActionFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Route action function signature"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 158,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L158"
						}
					],
					"typeParameters": [
						{
							"id": 2917,
							"name": "Context",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"signatures": [
						{
							"id": 2918,
							"name": "ActionFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L159"
								}
							],
							"parameters": [
								{
									"id": 2919,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2921,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2917,
												"name": "Context",
												"package": "react-router",
												"qualifiedName": "ActionFunction.Context",
												"refersToTypeParameter": true
											}
										],
										"name": "ActionFunctionArgs",
										"package": "react-router"
									}
								},
								{
									"id": 2920,
									"name": "handlerCtx",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "DataFunctionReturnValue"
								},
								"name": "DataFunctionReturnValue",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2921,
					"name": "ActionFunctionArgs",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Arguments passed to action functions"
							}
						]
					},
					"children": [
						{
							"id": 2922,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L121"
								}
							],
							"type": {
								"type": "reference",
								"target": 2925,
								"name": "Context",
								"package": "react-router",
								"qualifiedName": "ActionFunctionArgs.Context",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.context"
							}
						},
						{
							"id": 2923,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 120,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L120"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.params"
							}
						},
						{
							"id": 2924,
							"name": "request",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L119"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Request"
								},
								"name": "Request",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.request"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2922,
								2923,
								2924
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 133,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L133"
						}
					],
					"typeParameters": [
						{
							"id": 2925,
							"name": "Context",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "DataFunctionArgs"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 2925,
									"name": "Context",
									"package": "react-router",
									"qualifiedName": "ActionFunctionArgs.Context",
									"refersToTypeParameter": true
								}
							],
							"name": "DataFunctionArgs",
							"package": "react-router"
						}
					]
				},
				{
					"id": 2926,
					"name": "AppLoadContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of unknown type for route loaders and actions provided by the\nserver's "
							},
							{
								"kind": "code",
								"text": "`getLoadContext()`"
							},
							{
								"kind": "text",
								"text": " function.  This is defined as an empty interface\nspecifically so apps can leverage declaration merging to augment this type\nglobally: https://www.typescriptlang.org/docs/handbook/declaration-merging.html"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/data.ts",
							"line": 15,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/data.ts#L15"
						}
					],
					"indexSignatures": [
						{
							"id": 2927,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/data.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/data.ts#L16"
								}
							],
							"parameters": [
								{
									"id": 2928,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 2929,
					"name": "AwaitProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2930,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When using a function, the resolved value is provided as the parameter.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx [2]\n<Await resolve={reviewsPromise}>\n  {(resolvedReviews) => <Reviews items={resolvedReviews} />}\n</Await>\n```"
									},
									{
										"kind": "text",
										"text": "\n\nWhen using React elements, "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useAsyncValue",
										"target": 5172
									},
									{
										"kind": "text",
										"text": " will provide the\nresolved value:\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx [2]\n<Await resolve={reviewsPromise}>\n  <Reviews />\n</Await>\n\nfunction Reviews() {\n  const resolvedReviews = useAsyncValue()\n  return <div>...</div>\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 851,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L851"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/components.tsx",
											"qualifiedName": "AwaitResolveRenderFunction"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2933,
												"name": "Resolve",
												"package": "react-router",
												"qualifiedName": "AwaitProps.Resolve",
												"refersToTypeParameter": true
											}
										],
										"name": "AwaitResolveRenderFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 2931,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The error element renders instead of the children when the promise rejects.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Await\n  errorElement={<div>Oops</div>}\n  resolve={reviewsPromise}\n>\n  <Reviews />\n</Await>\n```"
									},
									{
										"kind": "text",
										"text": "\n\nTo provide a more contextual error, you can use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useAsyncError",
										"target": 5170
									},
									{
										"kind": "text",
										"text": " in a\nchild component\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Await\n  errorElement={<ReviewsError />}\n  resolve={reviewsPromise}\n>\n  <Reviews />\n</Await>\n\nfunction ReviewsError() {\n  const error = useAsyncError()\n  return <div>Error loading reviews: {error.message}</div>\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf you do not provide an errorElement, the rejected value will bubble up to\nthe nearest route-level "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ErrorBoundary",
										"target": 4363,
										"tsLinkText": "ErrorBoundary"
									},
									{
										"kind": "text",
										"text": " and be accessible\nvia "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useRouteError",
										"target": 5264
									},
									{
										"kind": "text",
										"text": " hook."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 886,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L886"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 2932,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Takes a promise returned from a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "loader",
										"target": 4758
									},
									{
										"kind": "text",
										"text": " value to be resolved and rendered.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { useLoaderData, Await } from \"react-router\"\n\nexport async function loader() {\n  let reviews = getReviews() // not awaited\n  let book = await getBook()\n  return {\n    book,\n    reviews, // this is a promise\n  }\n}\n\nexport default function Book() {\n  const {\n    book,\n    reviews, // this is the same promise\n  } = useLoaderData()\n\n  return (\n    <div>\n      <h1>{book.title}</h1>\n      <p>{book.description}</p>\n      <React.Suspense fallback={<ReviewsSkeleton />}>\n        <Await\n          // and is the promise we pass to Await\n          resolve={reviews}\n        >\n          <Reviews />\n        </Await>\n      </React.Suspense>\n    </div>\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 926,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L926"
								}
							],
							"type": {
								"type": "reference",
								"target": 2933,
								"name": "Resolve",
								"package": "react-router",
								"qualifiedName": "AwaitProps.Resolve",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2930,
								2931,
								2932
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 827,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L827"
						}
					],
					"typeParameters": [
						{
							"id": 2933,
							"name": "Resolve",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 2934,
					"name": "BrowserRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2935,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 246,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L246"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2936,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 247,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L247"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 2937,
							"name": "window",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 248,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L248"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Window"
								},
								"name": "Window",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2935,
								2936,
								2937
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 245,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L245"
						}
					]
				},
				{
					"id": 2938,
					"name": "Cookie",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A HTTP cookie.\n\nA Cookie is a logical container for metadata about a HTTP cookie; its name\nand options. But it doesn't contain a value. Instead, it has "
							},
							{
								"kind": "code",
								"text": "`parse()`"
							},
							{
								"kind": "text",
								"text": " and\n"
							},
							{
								"kind": "code",
								"text": "`serialize()`"
							},
							{
								"kind": "text",
								"text": " methods that allow a single instance to be reused for\nparsing/encoding multiple different values."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://remix.run/utils/cookies#cookie-api"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2939,
							"name": "expires",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Date this cookie expires.\n\nNote: This is calculated at access time using "
									},
									{
										"kind": "code",
										"text": "`maxAge`"
									},
									{
										"kind": "text",
										"text": " when no "
									},
									{
										"kind": "code",
										"text": "`expires`"
									},
									{
										"kind": "text",
										"text": "\noption is provided to "
									},
									{
										"kind": "code",
										"text": "`createCookie()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 55,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L55"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2940,
							"name": "isSigned",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "True if this cookie uses one or more secrets for verification."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 47,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2941,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the cookie, used in the "
									},
									{
										"kind": "code",
										"text": "`Cookie`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " headers."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 42,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L42"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2942,
							"name": "parse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L61"
								}
							],
							"signatures": [
								{
									"id": 2943,
									"name": "parse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Parses a raw "
											},
											{
												"kind": "code",
												"text": "`Cookie`"
											},
											{
												"kind": "text",
												"text": " header and returns the value of this cookie or\n"
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if it's not present."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
											"line": 61,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L61"
										}
									],
									"parameters": [
										{
											"id": 2944,
											"name": "cookieHeader",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 2945,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2950,
												"name": "ParseOptions",
												"package": "cookie"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2946,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 67,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L67"
								}
							],
							"signatures": [
								{
									"id": 2947,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Serializes the given value to a string and returns the "
											},
											{
												"kind": "code",
												"text": "`Set-Cookie`"
											},
											{
												"kind": "text",
												"text": "\nheader."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
											"line": 67,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L67"
										}
									],
									"parameters": [
										{
											"id": 2948,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2949,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2955,
												"name": "SerializeOptions",
												"package": "cookie"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2939,
								2940,
								2941
							]
						},
						{
							"title": "Methods",
							"children": [
								2942,
								2946
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 38,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L38"
						}
					]
				},
				{
					"id": 2950,
					"name": "CookieParseOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parse options."
							}
						]
					},
					"children": [
						{
							"id": 2951,
							"name": "decode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies a function that will be used to decode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\nSince the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode\na previously-encoded cookie value into a JavaScript string.\n\nThe default function is the global "
									},
									{
										"kind": "code",
										"text": "`decodeURIComponent`"
									},
									{
										"kind": "text",
										"text": ", wrapped in a "
									},
									{
										"kind": "code",
										"text": "`try..catch`"
									},
									{
										"kind": "text",
										"text": ". If an error\nis thrown it will return the cookie's original value. If you provide your own encode/decode\nscheme you must ensure errors are appropriately handled."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ndecode\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2952,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
											"line": 16,
											"character": 13
										}
									],
									"signatures": [
										{
											"id": 2953,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
													"line": 16,
													"character": 13
												}
											],
											"parameters": [
												{
													"id": 2954,
													"name": "str",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2951
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
							"line": 4,
							"character": 17
						}
					]
				},
				{
					"id": 2955,
					"name": "CookieSerializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Serialize options."
							}
						]
					},
					"children": [
						{
							"id": 2956,
							"name": "domain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the value for the ["
									},
									{
										"kind": "code",
										"text": "`Domain`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3).\nWhen no domain is set clients consider the cookie to apply to the current domain only."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2957,
							"name": "encode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies a function that will be used to encode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\nSince value of a cookie has a limited character set (and must be a simple string), this function can be used to encode\na value into a string suited for a cookie's value, and should mirror "
									},
									{
										"kind": "code",
										"text": "`decode`"
									},
									{
										"kind": "text",
										"text": " when parsing."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nencodeURIComponent\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2958,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
											"line": 36,
											"character": 13
										}
									],
									"signatures": [
										{
											"id": 2959,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
													"line": 36,
													"character": 13
												}
											],
											"parameters": [
												{
													"id": 2960,
													"name": "str",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2961,
							"name": "expires",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the "
									},
									{
										"kind": "code",
										"text": "`Date`"
									},
									{
										"kind": "text",
										"text": " object to be the value for the ["
									},
									{
										"kind": "code",
										"text": "`Expires`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1).\nWhen no expiration is set clients consider this a \"non-persistent cookie\" and delete it the current session is over.\n\nThe [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both "
									},
									{
										"kind": "code",
										"text": "`expires`"
									},
									{
										"kind": "text",
										"text": " and\n"
									},
									{
										"kind": "code",
										"text": "`maxAge`"
									},
									{
										"kind": "text",
										"text": " are set, then "
									},
									{
										"kind": "code",
										"text": "`maxAge`"
									},
									{
										"kind": "text",
										"text": " takes precedence, but it is possible not all clients by obey this,\nso if both are set, they should point to the same date and time."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2962,
							"name": "httpOnly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables the ["
									},
									{
										"kind": "code",
										"text": "`HttpOnly`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6).\nWhen enabled, clients will not allow client-side JavaScript to see the cookie in "
									},
									{
										"kind": "code",
										"text": "`document.cookie`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2963,
							"name": "maxAge",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the "
									},
									{
										"kind": "code",
										"text": "`number`"
									},
									{
										"kind": "text",
										"text": " (in seconds) to be the value for the ["
									},
									{
										"kind": "code",
										"text": "`Max-Age`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2).\n\nThe [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both "
									},
									{
										"kind": "code",
										"text": "`expires`"
									},
									{
										"kind": "text",
										"text": " and\n"
									},
									{
										"kind": "code",
										"text": "`maxAge`"
									},
									{
										"kind": "text",
										"text": " are set, then "
									},
									{
										"kind": "code",
										"text": "`maxAge`"
									},
									{
										"kind": "text",
										"text": " takes precedence, but it is possible not all clients by obey this,\nso if both are set, they should point to the same date and time."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 44,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2964,
							"name": "partitioned",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables the ["
									},
									{
										"kind": "code",
										"text": "`Partitioned`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute](https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/).\nWhen enabled, clients will only send the cookie back when the current domain _and_ top-level domain matches.\n\nThis is an attribute that has not yet been fully standardized, and may change in the future.\nThis also means clients may ignore this attribute until they understand it. More information\nabout can be found in [the proposal](https://github.com/privacycg/CHIPS)."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 82,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2965,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the value for the ["
									},
									{
										"kind": "code",
										"text": "`Path`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4).\nWhen no path is set, the path is considered the [\"default path\"](https://tools.ietf.org/html/rfc6265#section-5.1.4)."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2966,
							"name": "priority",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the value for the ["
									},
									{
										"kind": "code",
										"text": "`Priority`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n\n- "
									},
									{
										"kind": "code",
										"text": "`'low'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`Priority`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`Low`"
									},
									{
										"kind": "text",
										"text": ".\n- "
									},
									{
										"kind": "code",
										"text": "`'medium'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`Priority`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`Medium`"
									},
									{
										"kind": "text",
										"text": ", the default priority when not set.\n- "
									},
									{
										"kind": "code",
										"text": "`'high'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`Priority`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`High`"
									},
									{
										"kind": "text",
										"text": ".\n\nMore information about priority levels can be found in [the specification](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1)."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 92,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "high"
									},
									{
										"type": "literal",
										"value": "low"
									},
									{
										"type": "literal",
										"value": "medium"
									}
								]
							}
						},
						{
							"id": 2967,
							"name": "sameSite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the value for the ["
									},
									{
										"kind": "code",
										"text": "`SameSite`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n\n- "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`SameSite`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`Strict`"
									},
									{
										"kind": "text",
										"text": " for strict same site enforcement.\n- "
									},
									{
										"kind": "code",
										"text": "`'lax'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`SameSite`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`Lax`"
									},
									{
										"kind": "text",
										"text": " for lax same site enforcement.\n- "
									},
									{
										"kind": "code",
										"text": "`'none'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`SameSite`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`None`"
									},
									{
										"kind": "text",
										"text": " for an explicit cross-site cookie.\n- "
									},
									{
										"kind": "code",
										"text": "`'strict'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`SameSite`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`Strict`"
									},
									{
										"kind": "text",
										"text": " for strict same site enforcement.\n\nMore information about enforcement levels can be found in [the specification](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7)."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 103,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "strict"
									},
									{
										"type": "literal",
										"value": "lax"
									}
								]
							}
						},
						{
							"id": 2968,
							"name": "secure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables the ["
									},
									{
										"kind": "code",
										"text": "`Secure`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5).\nWhen enabled, clients will only send the cookie back if the browser has a HTTPS connection."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2956,
								2957,
								2961,
								2962,
								2963,
								2964,
								2965,
								2966,
								2967,
								2968
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
							"line": 28,
							"character": 17
						}
					]
				},
				{
					"id": 2969,
					"name": "CookieSignatureOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2970,
							"name": "secrets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of secrets that may be used to sign/unsign the value of a cookie.\n\nThe array makes it easy to rotate secrets. New secrets should be added to\nthe beginning of the array. "
									},
									{
										"kind": "code",
										"text": "`cookie.serialize()`"
									},
									{
										"kind": "text",
										"text": " will always use the first\nvalue in the array, but "
									},
									{
										"kind": "code",
										"text": "`cookie.parse()`"
									},
									{
										"kind": "text",
										"text": " may use any of them so that\ncookies that were signed with older secrets still work."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L21"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2970
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 12,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L12"
						}
					]
				},
				{
					"id": 2971,
					"name": "DataRouteMatch",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2972,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names and values of dynamic parameters in the URL."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 425,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L425"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4424,
								"name": "RouteMatch.params"
							}
						},
						{
							"id": 2973,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 429,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L429"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4425,
								"name": "RouteMatch.pathname"
							}
						},
						{
							"id": 2974,
							"name": "pathnameBase",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched before child routes."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 433,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L433"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4426,
								"name": "RouteMatch.pathnameBase"
							}
						},
						{
							"id": 2975,
							"name": "route",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The route object that was used to match."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 437,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L437"
								}
							],
							"type": {
								"type": "reference",
								"target": 4709,
								"name": "DataRouteObject",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4427,
								"name": "RouteMatch.route"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2972,
								2973,
								2974,
								2975
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 77,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L77"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 4423,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": 4709,
									"name": "DataRouteObject",
									"package": "react-router"
								}
							],
							"name": "RouteMatch",
							"package": "react-router"
						}
					]
				},
				{
					"id": 2976,
					"name": "DataRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A Router instance manages all navigation and data loading/mutations"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 59,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L59"
						}
					]
				},
				{
					"id": 2977,
					"name": "DataStrategyFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 219,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L219"
						}
					],
					"signatures": [
						{
							"id": 2978,
							"name": "DataStrategyFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 220,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L220"
								}
							],
							"parameters": [
								{
									"id": 2979,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "DataStrategyFunctionArgs",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 3003,
												"name": "DataStrategyResult",
												"package": "react-router"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2980,
					"name": "DataStrategyFunctionArgs",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2981,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L121"
								}
							],
							"type": {
								"type": "reference",
								"target": 2986,
								"name": "Context",
								"package": "react-router",
								"qualifiedName": "DataStrategyFunctionArgs.Context",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.context"
							}
						},
						{
							"id": 2982,
							"name": "fetcherKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 208,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L208"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 2983,
							"name": "matches",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 207,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L207"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2987,
									"name": "DataStrategyMatch",
									"package": "react-router"
								}
							}
						},
						{
							"id": 2984,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 120,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L120"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.params"
							}
						},
						{
							"id": 2985,
							"name": "request",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L119"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Request"
								},
								"name": "Request",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.request"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2981,
								2982,
								2983,
								2984,
								2985
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 205,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L205"
						}
					],
					"typeParameters": [
						{
							"id": 2986,
							"name": "Context",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "DataFunctionArgs"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 2986,
									"name": "Context",
									"package": "react-router",
									"qualifiedName": "DataStrategyFunctionArgs.Context",
									"refersToTypeParameter": true
								}
							],
							"name": "DataFunctionArgs",
							"package": "react-router"
						}
					]
				},
				{
					"id": 2987,
					"name": "DataStrategyMatch",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 2988,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names and values of dynamic parameters in the URL."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 425,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L425"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.params"
							}
						},
						{
							"id": 2989,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 429,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L429"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.pathname"
							}
						},
						{
							"id": 2990,
							"name": "pathnameBase",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched before child routes."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 433,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L433"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.pathnameBase"
							}
						},
						{
							"id": 2991,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 198,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L198"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2992,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 198,
											"character": 11,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L198"
										}
									],
									"signatures": [
										{
											"id": 2993,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/utils.ts",
													"line": 198,
													"character": 11,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L198"
												}
											],
											"parameters": [
												{
													"id": 2994,
													"name": "handlerOverride",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2995,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/utils.ts",
																	"line": 199,
																	"character": 22,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L199"
																}
															],
															"signatures": [
																{
																	"id": 2996,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react-router/lib/router/utils.ts",
																			"line": 199,
																			"character": 22,
																			"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L199"
																		}
																	],
																	"parameters": [
																		{
																			"id": 2997,
																			"name": "handler",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 2998,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react-router/lib/router/utils.ts",
																							"line": 200,
																							"character": 15,
																							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L200"
																						}
																					],
																					"signatures": [
																						{
																							"id": 2999,
																							"name": "__type",
																							"variant": "signature",
																							"kind": 4096,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "packages/react-router/lib/router/utils.ts",
																									"line": 200,
																									"character": 15,
																									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L200"
																								}
																							],
																							"parameters": [
																								{
																									"id": 3000,
																									"name": "ctx",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "unknown"
																									}
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "packages/react-router/lib/router/utils.ts",
																									"qualifiedName": "DataFunctionReturnValue"
																								},
																								"name": "DataFunctionReturnValue",
																								"package": "react-router"
																							}
																						}
																					]
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router/lib/router/utils.ts",
																			"qualifiedName": "DataFunctionReturnValue"
																		},
																		"name": "DataFunctionReturnValue",
																		"package": "react-router"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3003,
														"name": "DataStrategyResult",
														"package": "react-router"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 3001,
							"name": "route",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The route object that was used to match."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 437,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L437"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "AgnosticDataRouteObject"
								},
								"name": "AgnosticDataRouteObject",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.route"
							}
						},
						{
							"id": 3002,
							"name": "shouldLoad",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 197,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L197"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2988,
								2989,
								2990,
								2991,
								3001,
								3002
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 195,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L195"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "AgnosticRouteMatch"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/utils.ts",
										"qualifiedName": "AgnosticDataRouteObject"
									},
									"name": "AgnosticDataRouteObject",
									"package": "react-router"
								}
							],
							"name": "AgnosticRouteMatch",
							"package": "react-router"
						}
					]
				},
				{
					"id": 3003,
					"name": "DataStrategyResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Result from a loader or action called via dataStrategy"
							}
						]
					},
					"children": [
						{
							"id": 3004,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 216,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L216"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 3005,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 215,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L215"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "data"
									},
									{
										"type": "literal",
										"value": "error"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3004,
								3005
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 214,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L214"
						}
					]
				},
				{
					"id": 3006,
					"name": "EntryContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3007,
							"name": "criticalCss",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.criticalCss"
							}
						},
						{
							"id": 3008,
							"name": "future",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L18"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"qualifiedName": "FutureConfig"
								},
								"name": "FutureConfig",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.future"
							}
						},
						{
							"id": 3009,
							"name": "isSpaMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.isSpaMode"
							}
						},
						{
							"id": 3010,
							"name": "manifest",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L14"
								}
							],
							"type": {
								"type": "reference",
								"target": 4655,
								"name": "AssetsManifest",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.manifest"
							}
						},
						{
							"id": 3011,
							"name": "renderMeta",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L21"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3012,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3013,
											"name": "didRenderScripts",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 22,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L22"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3014,
											"name": "streamCache",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 23,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L23"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3015,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 3016,
																			"name": "error",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																					"line": 30,
																					"character": 8,
																					"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L30"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		},
																		{
																			"id": 3017,
																			"name": "result",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																					"line": 26,
																					"character": 8,
																					"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L26"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 3018,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 3019,
																							"name": "done",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																									"line": 27,
																									"character": 10,
																									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L27"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "boolean"
																							}
																						},
																						{
																							"id": 3020,
																							"name": "value",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																									"line": 28,
																									"character": 10,
																									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L28"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								3019,
																								3020
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																							"line": 26,
																							"character": 17,
																							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L26"
																						}
																					]
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				3016,
																				3017
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																			"line": 25,
																			"character": 22,
																			"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L25"
																		}
																	]
																}
															}
														]
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3013,
												3014
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"line": 21,
											"character": 15,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L21"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.renderMeta"
							}
						},
						{
							"id": 3021,
							"name": "routeModules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L15"
								}
							],
							"type": {
								"type": "reference",
								"target": 4667,
								"name": "RouteModules",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.routeModules"
							}
						},
						{
							"id": 3022,
							"name": "serverHandoffStream",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L40"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "ReadableStream"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								],
								"name": "ReadableStream",
								"package": "typescript"
							}
						},
						{
							"id": 3023,
							"name": "serverHandoffString",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.serverHandoffString"
							}
						},
						{
							"id": 3024,
							"name": "staticHandlerContext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L39"
								}
							],
							"type": {
								"type": "reference",
								"target": 4611,
								"name": "StaticHandlerContext",
								"package": "react-router"
							}
						},
						{
							"id": 3025,
							"name": "serializeError",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L20"
								}
							],
							"signatures": [
								{
									"id": 3026,
									"name": "serializeError",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L20"
										}
									],
									"parameters": [
										{
											"id": 3027,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"qualifiedName": "SerializedError"
										},
										"name": "SerializedError",
										"package": "react-router"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "FrameworkContextObject.serializeError"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.serializeError"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3007,
								3008,
								3009,
								3010,
								3011,
								3021,
								3022,
								3023,
								3024
							]
						},
						{
							"title": "Methods",
							"children": [
								3025
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
							"line": 38,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L38"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
								"qualifiedName": "FrameworkContextObject"
							},
							"name": "FrameworkContextObject",
							"package": "react-router"
						}
					]
				},
				{
					"id": 3028,
					"name": "FetcherFormProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Form props available to fetchers"
							}
						]
					},
					"children": [
						{
							"id": 3029,
							"name": "about",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1953,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.about"
							}
						},
						{
							"id": 3030,
							"name": "acceptCharset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2227,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.acceptCharset"
							}
						},
						{
							"id": 3031,
							"name": "accessKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1927,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.accessKey"
							}
						},
						{
							"id": 3032,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL to submit the form data to.  If "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ", this defaults to the closest route in context."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 942,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L942"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.action"
							}
						},
						{
							"id": 3033,
							"name": "aria-activedescendant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1636,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-activedescendant"
							}
						},
						{
							"id": 3034,
							"name": "aria-atomic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1638,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-atomic"
							}
						},
						{
							"id": 3035,
							"name": "aria-autocomplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1643,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "list"
									},
									{
										"type": "literal",
										"value": "inline"
									},
									{
										"type": "literal",
										"value": "both"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-autocomplete"
							}
						},
						{
							"id": 3036,
							"name": "aria-braillelabel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-label."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1649,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-braillelabel"
							}
						},
						{
							"id": 3037,
							"name": "aria-brailleroledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-roledescription."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1654,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-brailleroledescription"
							}
						},
						{
							"id": 3038,
							"name": "aria-busy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1655,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-busy"
							}
						},
						{
							"id": 3039,
							"name": "aria-checked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1660,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-checked"
							}
						},
						{
							"id": 3040,
							"name": "aria-colcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of columns in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1665,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colcount"
							}
						},
						{
							"id": 3041,
							"name": "aria-colindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1670,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colindex"
							}
						},
						{
							"id": 3042,
							"name": "aria-colindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-colindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1675,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colindextext"
							}
						},
						{
							"id": 3043,
							"name": "aria-colspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1680,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colspan"
							}
						},
						{
							"id": 3044,
							"name": "aria-controls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-owns."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1685,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-controls"
							}
						},
						{
							"id": 3045,
							"name": "aria-current",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the element that represents the current item within a container or set of related elements."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1687,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "time"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "location"
									},
									{
										"type": "literal",
										"value": "page"
									},
									{
										"type": "literal",
										"value": "step"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-current"
							}
						},
						{
							"id": 3046,
							"name": "aria-describedby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that describes the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1692,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-describedby"
							}
						},
						{
							"id": 3047,
							"name": "aria-description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that describes or annotates the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "related aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1697,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-description"
							}
						},
						{
							"id": 3048,
							"name": "aria-details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides a detailed, extended description for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1702,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-details"
							}
						},
						{
							"id": 3049,
							"name": "aria-disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-hidden"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-readonly."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1707,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-disabled"
							}
						},
						{
							"id": 3050,
							"name": "aria-dropeffect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1712,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "link"
									},
									{
										"type": "literal",
										"value": "copy"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "execute"
									},
									{
										"type": "literal",
										"value": "move"
									},
									{
										"type": "literal",
										"value": "popup"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-dropeffect"
							}
						},
						{
							"id": 3051,
							"name": "aria-errormessage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides an error message for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-invalid"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-describedby."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1717,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-errormessage"
							}
						},
						{
							"id": 3052,
							"name": "aria-expanded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1719,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-expanded"
							}
						},
						{
							"id": 3053,
							"name": "aria-flowto",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1724,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-flowto"
							}
						},
						{
							"id": 3054,
							"name": "aria-grabbed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1729,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-grabbed"
							}
						},
						{
							"id": 3055,
							"name": "aria-haspopup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1731,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "dialog"
									},
									{
										"type": "literal",
										"value": "menu"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grid"
									},
									{
										"type": "literal",
										"value": "listbox"
									},
									{
										"type": "literal",
										"value": "tree"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-haspopup"
							}
						},
						{
							"id": 3056,
							"name": "aria-hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element is exposed to an accessibility API."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1736,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-hidden"
							}
						},
						{
							"id": 3057,
							"name": "aria-invalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the entered value does not conform to the format expected by the application."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-errormessage."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1741,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grammar"
									},
									{
										"type": "literal",
										"value": "spelling"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-invalid"
							}
						},
						{
							"id": 3058,
							"name": "aria-keyshortcuts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1743,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-keyshortcuts"
							}
						},
						{
							"id": 3059,
							"name": "aria-label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1748,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-label"
							}
						},
						{
							"id": 3060,
							"name": "aria-labelledby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1753,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-labelledby"
							}
						},
						{
							"id": 3061,
							"name": "aria-level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the hierarchical level of an element within a structure."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1755,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-level"
							}
						},
						{
							"id": 3062,
							"name": "aria-live",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1757,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "off"
									},
									{
										"type": "literal",
										"value": "assertive"
									},
									{
										"type": "literal",
										"value": "polite"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-live"
							}
						},
						{
							"id": 3063,
							"name": "aria-modal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether an element is modal when displayed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1759,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-modal"
							}
						},
						{
							"id": 3064,
							"name": "aria-multiline",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1761,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-multiline"
							}
						},
						{
							"id": 3065,
							"name": "aria-multiselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the user may select more than one item from the current selectable descendants."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1763,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-multiselectable"
							}
						},
						{
							"id": 3066,
							"name": "aria-orientation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1765,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "horizontal"
									},
									{
										"type": "literal",
										"value": "vertical"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-orientation"
							}
						},
						{
							"id": 3067,
							"name": "aria-owns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-controls."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1771,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-owns"
							}
						},
						{
							"id": 3068,
							"name": "aria-placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1776,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-placeholder"
							}
						},
						{
							"id": 3069,
							"name": "aria-posinset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-setsize."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1781,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-posinset"
							}
						},
						{
							"id": 3070,
							"name": "aria-pressed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"pressed\" state of toggle buttons."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1786,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-pressed"
							}
						},
						{
							"id": 3071,
							"name": "aria-readonly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is not editable, but is otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1791,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-readonly"
							}
						},
						{
							"id": 3072,
							"name": "aria-relevant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-atomic."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1796,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "additions"
									},
									{
										"type": "literal",
										"value": "additions removals"
									},
									{
										"type": "literal",
										"value": "additions text"
									},
									{
										"type": "literal",
										"value": "all"
									},
									{
										"type": "literal",
										"value": "removals"
									},
									{
										"type": "literal",
										"value": "removals additions"
									},
									{
										"type": "literal",
										"value": "removals text"
									},
									{
										"type": "literal",
										"value": "text additions"
									},
									{
										"type": "literal",
										"value": "text removals"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-relevant"
							}
						},
						{
							"id": 3073,
							"name": "aria-required",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that user input is required on the element before a form may be submitted."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1798,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-required"
							}
						},
						{
							"id": 3074,
							"name": "aria-roledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized description for the role of an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1800,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-roledescription"
							}
						},
						{
							"id": 3075,
							"name": "aria-rowcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of rows in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1805,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowcount"
							}
						},
						{
							"id": 3076,
							"name": "aria-rowindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1810,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowindex"
							}
						},
						{
							"id": 3077,
							"name": "aria-rowindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-rowindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1815,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowindextext"
							}
						},
						{
							"id": 3078,
							"name": "aria-rowspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1820,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowspan"
							}
						},
						{
							"id": 3079,
							"name": "aria-selected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"selected\" state of various widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1825,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-selected"
							}
						},
						{
							"id": 3080,
							"name": "aria-setsize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-posinset."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1830,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-setsize"
							}
						},
						{
							"id": 3081,
							"name": "aria-sort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1832,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "ascending"
									},
									{
										"type": "literal",
										"value": "descending"
									},
									{
										"type": "literal",
										"value": "other"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-sort"
							}
						},
						{
							"id": 3082,
							"name": "aria-valuemax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the maximum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1834,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuemax"
							}
						},
						{
							"id": 3083,
							"name": "aria-valuemin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the minimum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1836,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuemin"
							}
						},
						{
							"id": 3084,
							"name": "aria-valuenow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the current value for a range widget."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-valuetext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1841,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuenow"
							}
						},
						{
							"id": 3085,
							"name": "aria-valuetext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1843,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuetext"
							}
						},
						{
							"id": 3086,
							"name": "autoCapitalize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1966,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoCapitalize"
							}
						},
						{
							"id": 3087,
							"name": "autoComplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2232,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoComplete"
							}
						},
						{
							"id": 3088,
							"name": "autoCorrect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1967,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoCorrect"
							}
						},
						{
							"id": 3089,
							"name": "autoFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1928,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoFocus"
							}
						},
						{
							"id": 3090,
							"name": "autoSave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1968,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoSave"
							}
						},
						{
							"id": 3091,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1420,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.children"
							}
						},
						{
							"id": 3092,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1929,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.className"
							}
						},
						{
							"id": 3093,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1969,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.color"
							}
						},
						{
							"id": 3094,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1954,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.content"
							}
						},
						{
							"id": 3095,
							"name": "contentEditable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1930,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "Booleanish"
										},
										"name": "Booleanish",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": "inherit"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.contentEditable"
							}
						},
						{
							"id": 3096,
							"name": "contextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1931,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.contextMenu"
							}
						},
						{
							"id": 3097,
							"name": "dangerouslySetInnerHTML",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1421,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3098,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 3099,
											"name": "__html",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"line": 1424,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
															"qualifiedName": "TrustedHTML"
														},
														"name": "TrustedHTML",
														"package": "@types/react"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3099
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 1421,
											"character": 34
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.dangerouslySetInnerHTML"
							}
						},
						{
							"id": 3100,
							"name": "datatype",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1955,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.datatype"
							}
						},
						{
							"id": 3101,
							"name": "defaultChecked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1921,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.defaultChecked"
							}
						},
						{
							"id": 3102,
							"name": "defaultValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1922,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.defaultValue"
							}
						},
						{
							"id": 3103,
							"name": "dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1932,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.dir"
							}
						},
						{
							"id": 3104,
							"name": "draggable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1933,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.draggable"
							}
						},
						{
							"id": 3105,
							"name": "encType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The encoding type to use for the form submission."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 934,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L934"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"type": "literal",
										"value": "multipart/form-data"
									},
									{
										"type": "literal",
										"value": "text/plain"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.encType"
							}
						},
						{
							"id": 3106,
							"name": "hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1934,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.hidden"
							}
						},
						{
							"id": 3107,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1935,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.id"
							}
						},
						{
							"id": 3108,
							"name": "inlist",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1956,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.inlist"
							}
						},
						{
							"id": 3109,
							"name": "inputMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1984,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "search"
									},
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "url"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "tel"
									},
									{
										"type": "literal",
										"value": "email"
									},
									{
										"type": "literal",
										"value": "numeric"
									},
									{
										"type": "literal",
										"value": "decimal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.inputMode"
							}
						},
						{
							"id": 3110,
							"name": "is",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1989,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.is"
							}
						},
						{
							"id": 3111,
							"name": "itemID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemID"
							}
						},
						{
							"id": 3112,
							"name": "itemProp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1970,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemProp"
							}
						},
						{
							"id": 3113,
							"name": "itemRef",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1974,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemRef"
							}
						},
						{
							"id": 3114,
							"name": "itemScope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1971,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemScope"
							}
						},
						{
							"id": 3115,
							"name": "itemType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1972,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemType"
							}
						},
						{
							"id": 3116,
							"name": "lang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1936,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.lang"
							}
						},
						{
							"id": 3117,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HTTP verb to use when the form is submitted. Supports \"get\", \"post\",\n\"put\", \"delete\", and \"patch\".\n\nNative "
									},
									{
										"kind": "code",
										"text": "`<form>`"
									},
									{
										"kind": "text",
										"text": " only supports "
									},
									{
										"kind": "code",
										"text": "`get`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`post`"
									},
									{
										"kind": "text",
										"text": ", avoid the other verbs if\nyou'd like to support progressive enhancement"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 929,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L929"
								}
							],
							"type": {
								"type": "reference",
								"target": 4743,
								"name": "HTMLFormMethod",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.method"
							}
						},
						{
							"id": 3118,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2235,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.name"
							}
						},
						{
							"id": 3119,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1937,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.nonce"
							}
						},
						{
							"id": 3120,
							"name": "noValidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2236,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.noValidate"
							}
						},
						{
							"id": 3121,
							"name": "onAbort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1480,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAbort"
							}
						},
						{
							"id": 3122,
							"name": "onAbortCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1481,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAbortCapture"
							}
						},
						{
							"id": 3123,
							"name": "onAnimationEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1612,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationEnd"
							}
						},
						{
							"id": 3124,
							"name": "onAnimationEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1613,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationEndCapture"
							}
						},
						{
							"id": 3125,
							"name": "onAnimationIteration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1614,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationIteration"
							}
						},
						{
							"id": 3126,
							"name": "onAnimationIterationCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1615,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationIterationCapture"
							}
						},
						{
							"id": 3127,
							"name": "onAnimationStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1610,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationStart"
							}
						},
						{
							"id": 3128,
							"name": "onAnimationStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1611,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationStartCapture"
							}
						},
						{
							"id": 3129,
							"name": "onAuxClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1528,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAuxClick"
							}
						},
						{
							"id": 3130,
							"name": "onAuxClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1529,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAuxClickCapture"
							}
						},
						{
							"id": 3131,
							"name": "onBeforeInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1452,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBeforeInput"
							}
						},
						{
							"id": 3132,
							"name": "onBeforeInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1453,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBeforeInputCapture"
							}
						},
						{
							"id": 3133,
							"name": "onBlur",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1446,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBlur"
							}
						},
						{
							"id": 3134,
							"name": "onBlurCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1447,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBlurCapture"
							}
						},
						{
							"id": 3135,
							"name": "onCanPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1482,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlay"
							}
						},
						{
							"id": 3136,
							"name": "onCanPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1483,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayCapture"
							}
						},
						{
							"id": 3137,
							"name": "onCanPlayThrough",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1484,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayThrough"
							}
						},
						{
							"id": 3138,
							"name": "onCanPlayThroughCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1485,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayThroughCapture"
							}
						},
						{
							"id": 3139,
							"name": "onChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1450,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onChange"
							}
						},
						{
							"id": 3140,
							"name": "onChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1451,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onChangeCapture"
							}
						},
						{
							"id": 3141,
							"name": "onClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1530,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onClick"
							}
						},
						{
							"id": 3142,
							"name": "onClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1531,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onClickCapture"
							}
						},
						{
							"id": 3143,
							"name": "onCompositionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1436,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionEnd"
							}
						},
						{
							"id": 3144,
							"name": "onCompositionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1437,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionEndCapture"
							}
						},
						{
							"id": 3145,
							"name": "onCompositionStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1438,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionStart"
							}
						},
						{
							"id": 3146,
							"name": "onCompositionStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1439,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionStartCapture"
							}
						},
						{
							"id": 3147,
							"name": "onCompositionUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1440,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionUpdate"
							}
						},
						{
							"id": 3148,
							"name": "onCompositionUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1441,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionUpdateCapture"
							}
						},
						{
							"id": 3149,
							"name": "onContextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1532,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onContextMenu"
							}
						},
						{
							"id": 3150,
							"name": "onContextMenuCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1533,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onContextMenuCapture"
							}
						},
						{
							"id": 3151,
							"name": "onCopy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1428,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCopy"
							}
						},
						{
							"id": 3152,
							"name": "onCopyCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1429,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCopyCapture"
							}
						},
						{
							"id": 3153,
							"name": "onCut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1430,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCut"
							}
						},
						{
							"id": 3154,
							"name": "onCutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1431,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCutCapture"
							}
						},
						{
							"id": 3155,
							"name": "onDoubleClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1534,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDoubleClick"
							}
						},
						{
							"id": 3156,
							"name": "onDoubleClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1535,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDoubleClickCapture"
							}
						},
						{
							"id": 3157,
							"name": "onDrag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1536,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDrag"
							}
						},
						{
							"id": 3158,
							"name": "onDragCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1537,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragCapture"
							}
						},
						{
							"id": 3159,
							"name": "onDragEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1538,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnd"
							}
						},
						{
							"id": 3160,
							"name": "onDragEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1539,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEndCapture"
							}
						},
						{
							"id": 3161,
							"name": "onDragEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1540,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnter"
							}
						},
						{
							"id": 3162,
							"name": "onDragEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1541,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnterCapture"
							}
						},
						{
							"id": 3163,
							"name": "onDragExit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1542,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragExit"
							}
						},
						{
							"id": 3164,
							"name": "onDragExitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1543,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragExitCapture"
							}
						},
						{
							"id": 3165,
							"name": "onDragLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1544,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragLeave"
							}
						},
						{
							"id": 3166,
							"name": "onDragLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1545,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragLeaveCapture"
							}
						},
						{
							"id": 3167,
							"name": "onDragOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1546,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragOver"
							}
						},
						{
							"id": 3168,
							"name": "onDragOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1547,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragOverCapture"
							}
						},
						{
							"id": 3169,
							"name": "onDragStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1548,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragStart"
							}
						},
						{
							"id": 3170,
							"name": "onDragStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1549,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragStartCapture"
							}
						},
						{
							"id": 3171,
							"name": "onDrop",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1550,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDrop"
							}
						},
						{
							"id": 3172,
							"name": "onDropCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1551,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDropCapture"
							}
						},
						{
							"id": 3173,
							"name": "onDurationChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1486,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDurationChange"
							}
						},
						{
							"id": 3174,
							"name": "onDurationChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1487,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDurationChangeCapture"
							}
						},
						{
							"id": 3175,
							"name": "onEmptied",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1488,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEmptied"
							}
						},
						{
							"id": 3176,
							"name": "onEmptiedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1489,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEmptiedCapture"
							}
						},
						{
							"id": 3177,
							"name": "onEncrypted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1490,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEncrypted"
							}
						},
						{
							"id": 3178,
							"name": "onEncryptedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1491,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEncryptedCapture"
							}
						},
						{
							"id": 3179,
							"name": "onEnded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1492,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEnded"
							}
						},
						{
							"id": 3180,
							"name": "onEndedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1493,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEndedCapture"
							}
						},
						{
							"id": 3181,
							"name": "onError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1466,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onError"
							}
						},
						{
							"id": 3182,
							"name": "onErrorCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1467,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onErrorCapture"
							}
						},
						{
							"id": 3183,
							"name": "onFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1444,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onFocus"
							}
						},
						{
							"id": 3184,
							"name": "onFocusCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1445,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onFocusCapture"
							}
						},
						{
							"id": 3185,
							"name": "onGotPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1596,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onGotPointerCapture"
							}
						},
						{
							"id": 3186,
							"name": "onGotPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1597,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onGotPointerCaptureCapture"
							}
						},
						{
							"id": 3187,
							"name": "onInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1454,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInput"
							}
						},
						{
							"id": 3188,
							"name": "onInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1455,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInputCapture"
							}
						},
						{
							"id": 3189,
							"name": "onInvalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1460,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInvalid"
							}
						},
						{
							"id": 3190,
							"name": "onInvalidCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1461,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInvalidCapture"
							}
						},
						{
							"id": 3191,
							"name": "onKeyDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1470,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyDown"
							}
						},
						{
							"id": 3192,
							"name": "onKeyDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1471,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyDownCapture"
							}
						},
						{
							"id": 3193,
							"name": "onKeyPress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1473,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyPress"
							}
						},
						{
							"id": 3194,
							"name": "onKeyPressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1475,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyPressCapture"
							}
						},
						{
							"id": 3195,
							"name": "onKeyUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1476,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyUp"
							}
						},
						{
							"id": 3196,
							"name": "onKeyUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1477,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyUpCapture"
							}
						},
						{
							"id": 3197,
							"name": "onLoad",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1464,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoad"
							}
						},
						{
							"id": 3198,
							"name": "onLoadCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1465,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadCapture"
							}
						},
						{
							"id": 3199,
							"name": "onLoadedData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1494,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedData"
							}
						},
						{
							"id": 3200,
							"name": "onLoadedDataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1495,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedDataCapture"
							}
						},
						{
							"id": 3201,
							"name": "onLoadedMetadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1496,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedMetadata"
							}
						},
						{
							"id": 3202,
							"name": "onLoadedMetadataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1497,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedMetadataCapture"
							}
						},
						{
							"id": 3203,
							"name": "onLoadStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1498,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadStart"
							}
						},
						{
							"id": 3204,
							"name": "onLoadStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1499,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadStartCapture"
							}
						},
						{
							"id": 3205,
							"name": "onLostPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1598,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLostPointerCapture"
							}
						},
						{
							"id": 3206,
							"name": "onLostPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1599,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLostPointerCaptureCapture"
							}
						},
						{
							"id": 3207,
							"name": "onMouseDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1552,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseDown"
							}
						},
						{
							"id": 3208,
							"name": "onMouseDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1553,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseDownCapture"
							}
						},
						{
							"id": 3209,
							"name": "onMouseEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1554,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseEnter"
							}
						},
						{
							"id": 3210,
							"name": "onMouseLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1555,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseLeave"
							}
						},
						{
							"id": 3211,
							"name": "onMouseMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1556,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseMove"
							}
						},
						{
							"id": 3212,
							"name": "onMouseMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1557,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseMoveCapture"
							}
						},
						{
							"id": 3213,
							"name": "onMouseOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1558,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOut"
							}
						},
						{
							"id": 3214,
							"name": "onMouseOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1559,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOutCapture"
							}
						},
						{
							"id": 3215,
							"name": "onMouseOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1560,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOver"
							}
						},
						{
							"id": 3216,
							"name": "onMouseOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1561,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOverCapture"
							}
						},
						{
							"id": 3217,
							"name": "onMouseUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1562,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseUp"
							}
						},
						{
							"id": 3218,
							"name": "onMouseUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1563,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseUpCapture"
							}
						},
						{
							"id": 3219,
							"name": "onPaste",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1432,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPaste"
							}
						},
						{
							"id": 3220,
							"name": "onPasteCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1433,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPasteCapture"
							}
						},
						{
							"id": 3221,
							"name": "onPause",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1500,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPause"
							}
						},
						{
							"id": 3222,
							"name": "onPauseCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1501,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPauseCapture"
							}
						},
						{
							"id": 3223,
							"name": "onPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1502,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlay"
							}
						},
						{
							"id": 3224,
							"name": "onPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1503,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlayCapture"
							}
						},
						{
							"id": 3225,
							"name": "onPlaying",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1504,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlaying"
							}
						},
						{
							"id": 3226,
							"name": "onPlayingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1505,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlayingCapture"
							}
						},
						{
							"id": 3227,
							"name": "onPointerCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1586,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerCancel"
							}
						},
						{
							"id": 3228,
							"name": "onPointerCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1587,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerCancelCapture"
							}
						},
						{
							"id": 3229,
							"name": "onPointerDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1580,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerDown"
							}
						},
						{
							"id": 3230,
							"name": "onPointerDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1581,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerDownCapture"
							}
						},
						{
							"id": 3231,
							"name": "onPointerEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1588,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerEnter"
							}
						},
						{
							"id": 3232,
							"name": "onPointerEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1589,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerEnterCapture"
							}
						},
						{
							"id": 3233,
							"name": "onPointerLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1590,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerLeave"
							}
						},
						{
							"id": 3234,
							"name": "onPointerLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1591,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerLeaveCapture"
							}
						},
						{
							"id": 3235,
							"name": "onPointerMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1582,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerMove"
							}
						},
						{
							"id": 3236,
							"name": "onPointerMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1583,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerMoveCapture"
							}
						},
						{
							"id": 3237,
							"name": "onPointerOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1594,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOut"
							}
						},
						{
							"id": 3238,
							"name": "onPointerOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1595,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOutCapture"
							}
						},
						{
							"id": 3239,
							"name": "onPointerOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1592,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOver"
							}
						},
						{
							"id": 3240,
							"name": "onPointerOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1593,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOverCapture"
							}
						},
						{
							"id": 3241,
							"name": "onPointerUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1584,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerUp"
							}
						},
						{
							"id": 3242,
							"name": "onPointerUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1585,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerUpCapture"
							}
						},
						{
							"id": 3243,
							"name": "onProgress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1506,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onProgress"
							}
						},
						{
							"id": 3244,
							"name": "onProgressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1507,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onProgressCapture"
							}
						},
						{
							"id": 3245,
							"name": "onRateChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1508,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onRateChange"
							}
						},
						{
							"id": 3246,
							"name": "onRateChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1509,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onRateChangeCapture"
							}
						},
						{
							"id": 3247,
							"name": "onReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1456,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onReset"
							}
						},
						{
							"id": 3248,
							"name": "onResetCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1457,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResetCapture"
							}
						},
						{
							"id": 3249,
							"name": "onResize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1510,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResize"
							}
						},
						{
							"id": 3250,
							"name": "onResizeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1511,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResizeCapture"
							}
						},
						{
							"id": 3251,
							"name": "onScroll",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1602,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onScroll"
							}
						},
						{
							"id": 3252,
							"name": "onScrollCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1603,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onScrollCapture"
							}
						},
						{
							"id": 3253,
							"name": "onSeeked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1512,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeeked"
							}
						},
						{
							"id": 3254,
							"name": "onSeekedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1513,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeekedCapture"
							}
						},
						{
							"id": 3255,
							"name": "onSeeking",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1514,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeeking"
							}
						},
						{
							"id": 3256,
							"name": "onSeekingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1515,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeekingCapture"
							}
						},
						{
							"id": 3257,
							"name": "onSelect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1566,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSelect"
							}
						},
						{
							"id": 3258,
							"name": "onSelectCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1567,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSelectCapture"
							}
						},
						{
							"id": 3259,
							"name": "onStalled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1516,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onStalled"
							}
						},
						{
							"id": 3260,
							"name": "onStalledCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1517,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onStalledCapture"
							}
						},
						{
							"id": 3261,
							"name": "onSubmit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A function to call when the form is submitted. If you call\n"
									},
									{
										"kind": "code",
										"text": "`event.preventDefault()`"
									},
									{
										"kind": "text",
										"text": " then this form will not do anything."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 961,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L961"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSubmit"
							}
						},
						{
							"id": 3262,
							"name": "onSubmitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1459,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSubmitCapture"
							}
						},
						{
							"id": 3263,
							"name": "onSuspend",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1518,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSuspend"
							}
						},
						{
							"id": 3264,
							"name": "onSuspendCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1519,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSuspendCapture"
							}
						},
						{
							"id": 3265,
							"name": "onTimeUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1520,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTimeUpdate"
							}
						},
						{
							"id": 3266,
							"name": "onTimeUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1521,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTimeUpdateCapture"
							}
						},
						{
							"id": 3267,
							"name": "onTouchCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1570,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchCancel"
							}
						},
						{
							"id": 3268,
							"name": "onTouchCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1571,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchCancelCapture"
							}
						},
						{
							"id": 3269,
							"name": "onTouchEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1572,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchEnd"
							}
						},
						{
							"id": 3270,
							"name": "onTouchEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1573,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchEndCapture"
							}
						},
						{
							"id": 3271,
							"name": "onTouchMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1574,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchMove"
							}
						},
						{
							"id": 3272,
							"name": "onTouchMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1575,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchMoveCapture"
							}
						},
						{
							"id": 3273,
							"name": "onTouchStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1576,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchStart"
							}
						},
						{
							"id": 3274,
							"name": "onTouchStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1577,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchStartCapture"
							}
						},
						{
							"id": 3275,
							"name": "onTransitionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1618,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTransitionEnd"
							}
						},
						{
							"id": 3276,
							"name": "onTransitionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1619,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTransitionEndCapture"
							}
						},
						{
							"id": 3277,
							"name": "onVolumeChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1522,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onVolumeChange"
							}
						},
						{
							"id": 3278,
							"name": "onVolumeChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1523,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onVolumeChangeCapture"
							}
						},
						{
							"id": 3279,
							"name": "onWaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1524,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWaiting"
							}
						},
						{
							"id": 3280,
							"name": "onWaitingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1525,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWaitingCapture"
							}
						},
						{
							"id": 3281,
							"name": "onWheel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1606,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWheel"
							}
						},
						{
							"id": 3282,
							"name": "onWheelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1607,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWheelCapture"
							}
						},
						{
							"id": 3283,
							"name": "placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1938,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.placeholder"
							}
						},
						{
							"id": 3284,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1957,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.prefix"
							}
						},
						{
							"id": 3285,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prevent the scroll position from resetting to the top of the viewport on\ncompletion of the navigation when using the <ScrollRestoration> component"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 955,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L955"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.preventScrollReset"
							}
						},
						{
							"id": 3286,
							"name": "property",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1958,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.property"
							}
						},
						{
							"id": 3287,
							"name": "radioGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1947,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.radioGroup"
							}
						},
						{
							"id": 3288,
							"name": "rel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1959,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.rel"
							}
						},
						{
							"id": 3289,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 949,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L949"
								}
							],
							"type": {
								"type": "reference",
								"target": 4841,
								"name": "RelativeRoutingType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.relative"
							}
						},
						{
							"id": 3290,
							"name": "resource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1960,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.resource"
							}
						},
						{
							"id": 3291,
							"name": "results",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1975,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.results"
							}
						},
						{
							"id": 3292,
							"name": "rev",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1961,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.rev"
							}
						},
						{
							"id": 3293,
							"name": "role",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1950,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AriaRole"
								},
								"name": "AriaRole",
								"package": "@types/react",
								"qualifiedName": "React.AriaRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.role"
							}
						},
						{
							"id": 3294,
							"name": "security",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1976,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.security"
							}
						},
						{
							"id": 3295,
							"name": "slot",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1939,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.slot"
							}
						},
						{
							"id": 3296,
							"name": "spellCheck",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1940,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.spellCheck"
							}
						},
						{
							"id": 3297,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1941,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "CSSProperties",
								"package": "@types/react",
								"qualifiedName": "React.CSSProperties"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.style"
							}
						},
						{
							"id": 3298,
							"name": "suppressContentEditableWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1923,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.suppressContentEditableWarning"
							}
						},
						{
							"id": 3299,
							"name": "suppressHydrationWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1924,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.suppressHydrationWarning"
							}
						},
						{
							"id": 3300,
							"name": "tabIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1942,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.tabIndex"
							}
						},
						{
							"id": 3301,
							"name": "target",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2237,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.target"
							}
						},
						{
							"id": 3302,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1943,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.title"
							}
						},
						{
							"id": 3303,
							"name": "translate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1944,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "yes"
									},
									{
										"type": "literal",
										"value": "no"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.translate"
							}
						},
						{
							"id": 3304,
							"name": "typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1962,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.typeof"
							}
						},
						{
							"id": 3305,
							"name": "unselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1977,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "on"
									},
									{
										"type": "literal",
										"value": "off"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.unselectable"
							}
						},
						{
							"id": 3306,
							"name": "vocab",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1963,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.vocab"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3029,
								3030,
								3031,
								3032,
								3033,
								3034,
								3035,
								3036,
								3037,
								3038,
								3039,
								3040,
								3041,
								3042,
								3043,
								3044,
								3045,
								3046,
								3047,
								3048,
								3049,
								3050,
								3051,
								3052,
								3053,
								3054,
								3055,
								3056,
								3057,
								3058,
								3059,
								3060,
								3061,
								3062,
								3063,
								3064,
								3065,
								3066,
								3067,
								3068,
								3069,
								3070,
								3071,
								3072,
								3073,
								3074,
								3075,
								3076,
								3077,
								3078,
								3079,
								3080,
								3081,
								3082,
								3083,
								3084,
								3085,
								3086,
								3087,
								3088,
								3089,
								3090,
								3091,
								3092,
								3093,
								3094,
								3095,
								3096,
								3097,
								3100,
								3101,
								3102,
								3103,
								3104,
								3105,
								3106,
								3107,
								3108,
								3109,
								3110,
								3111,
								3112,
								3113,
								3114,
								3115,
								3116,
								3117,
								3118,
								3119,
								3120,
								3121,
								3122,
								3123,
								3124,
								3125,
								3126,
								3127,
								3128,
								3129,
								3130,
								3131,
								3132,
								3133,
								3134,
								3135,
								3136,
								3137,
								3138,
								3139,
								3140,
								3141,
								3142,
								3143,
								3144,
								3145,
								3146,
								3147,
								3148,
								3149,
								3150,
								3151,
								3152,
								3153,
								3154,
								3155,
								3156,
								3157,
								3158,
								3159,
								3160,
								3161,
								3162,
								3163,
								3164,
								3165,
								3166,
								3167,
								3168,
								3169,
								3170,
								3171,
								3172,
								3173,
								3174,
								3175,
								3176,
								3177,
								3178,
								3179,
								3180,
								3181,
								3182,
								3183,
								3184,
								3185,
								3186,
								3187,
								3188,
								3189,
								3190,
								3191,
								3192,
								3193,
								3194,
								3195,
								3196,
								3197,
								3198,
								3199,
								3200,
								3201,
								3202,
								3203,
								3204,
								3205,
								3206,
								3207,
								3208,
								3209,
								3210,
								3211,
								3212,
								3213,
								3214,
								3215,
								3216,
								3217,
								3218,
								3219,
								3220,
								3221,
								3222,
								3223,
								3224,
								3225,
								3226,
								3227,
								3228,
								3229,
								3230,
								3231,
								3232,
								3233,
								3234,
								3235,
								3236,
								3237,
								3238,
								3239,
								3240,
								3241,
								3242,
								3243,
								3244,
								3245,
								3246,
								3247,
								3248,
								3249,
								3250,
								3251,
								3252,
								3253,
								3254,
								3255,
								3256,
								3257,
								3258,
								3259,
								3260,
								3261,
								3262,
								3263,
								3264,
								3265,
								3266,
								3267,
								3268,
								3269,
								3270,
								3271,
								3272,
								3273,
								3274,
								3275,
								3276,
								3277,
								3278,
								3279,
								3280,
								3281,
								3282,
								3283,
								3284,
								3285,
								3286,
								3287,
								3288,
								3289,
								3290,
								3291,
								3292,
								3293,
								3294,
								3295,
								3296,
								3297,
								3298,
								3299,
								3300,
								3301,
								3302,
								3303,
								3304,
								3305,
								3306
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 968,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L968"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
								"qualifiedName": "SharedFormProps"
							},
							"name": "SharedFormProps",
							"package": "react-router"
						}
					]
				},
				{
					"id": 3307,
					"name": "FetcherSubmitFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Submits a fetcher "
							},
							{
								"kind": "code",
								"text": "`<form>`"
							},
							{
								"kind": "text",
								"text": " to the server without reloading the page."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1481,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1481"
						}
					],
					"signatures": [
						{
							"id": 3308,
							"name": "FetcherSubmitFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1482,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1482"
								}
							],
							"parameters": [
								{
									"id": 3309,
									"name": "target",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Can be multiple types of elements and objects\n\n**"
											},
											{
												"kind": "code",
												"text": "`HTMLFormElement`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\n<fetcher.Form\n  onSubmit={(event) => {\n    fetcher.submit(event.currentTarget);\n  }}\n/>\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**"
											},
											{
												"kind": "code",
												"text": "`FormData`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nconst formData = new FormData();\nformData.append(\"myKey\", \"myValue\");\nfetcher.submit(formData, { method: \"post\" });\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**Plain object that will be serialized as "
											},
											{
												"kind": "code",
												"text": "`FormData`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nfetcher.submit({ myKey: \"myValue\" }, { method: \"post\" });\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**Plain object that will be serialized as JSON**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nfetcher.submit(\n  { myKey: \"myValue\" },\n  { method: \"post\", encType: \"application/json\" }\n);\n```"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4865,
										"name": "SubmitTarget",
										"package": "react-router"
									}
								},
								{
									"id": 3310,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 3311,
										"name": "FetcherSubmitOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3311,
					"name": "FetcherSubmitOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Submit options available to fetchers"
							}
						]
					},
					"children": [
						{
							"id": 3312,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The action URL path used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form action>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to the path of the current route."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 170,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L170"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.action"
							}
						},
						{
							"id": 3313,
							"name": "encType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The encoding used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form encType>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to \"application/x-www-form-urlencoded\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 176,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L176"
								}
							],
							"type": {
								"type": "reference",
								"target": 4735,
								"name": "FormEncType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.encType"
							}
						},
						{
							"id": 3314,
							"name": "flushSync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable flushSync for this submission's state updates"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 194,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L194"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.flushSync"
							}
						},
						{
							"id": 3315,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HTTP method used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form method>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to \"GET\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 164,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L164"
								}
							],
							"type": {
								"type": "reference",
								"target": 4743,
								"name": "HTMLFormMethod",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.method"
							}
						},
						{
							"id": 3316,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In browser-based environments, prevent resetting scroll after this\nnavigation when using the <ScrollRestoration> component"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 189,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L189"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.preventScrollReset"
							}
						},
						{
							"id": 3317,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 183,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L183"
								}
							],
							"type": {
								"type": "reference",
								"target": 4841,
								"name": "RelativeRoutingType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.relative"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3312,
								3313,
								3314,
								3315,
								3316,
								3317
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 200,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L200"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/dom/dom.ts",
								"qualifiedName": "SharedSubmitOptions"
							},
							"name": "SharedSubmitOptions",
							"package": "react-router"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 4635,
							"name": "SubmitOptions"
						}
					]
				},
				{
					"id": 3318,
					"name": "FormProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Form props available to navigations"
							}
						]
					},
					"children": [
						{
							"id": 3319,
							"name": "about",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1953,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.about"
							}
						},
						{
							"id": 3320,
							"name": "acceptCharset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2227,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.acceptCharset"
							}
						},
						{
							"id": 3321,
							"name": "accessKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1927,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.accessKey"
							}
						},
						{
							"id": 3322,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL to submit the form data to.  If "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ", this defaults to the closest route in context."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 942,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L942"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.action"
							}
						},
						{
							"id": 3323,
							"name": "aria-activedescendant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1636,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-activedescendant"
							}
						},
						{
							"id": 3324,
							"name": "aria-atomic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1638,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-atomic"
							}
						},
						{
							"id": 3325,
							"name": "aria-autocomplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1643,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "list"
									},
									{
										"type": "literal",
										"value": "inline"
									},
									{
										"type": "literal",
										"value": "both"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-autocomplete"
							}
						},
						{
							"id": 3326,
							"name": "aria-braillelabel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-label."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1649,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-braillelabel"
							}
						},
						{
							"id": 3327,
							"name": "aria-brailleroledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-roledescription."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1654,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-brailleroledescription"
							}
						},
						{
							"id": 3328,
							"name": "aria-busy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1655,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-busy"
							}
						},
						{
							"id": 3329,
							"name": "aria-checked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1660,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-checked"
							}
						},
						{
							"id": 3330,
							"name": "aria-colcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of columns in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1665,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colcount"
							}
						},
						{
							"id": 3331,
							"name": "aria-colindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1670,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colindex"
							}
						},
						{
							"id": 3332,
							"name": "aria-colindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-colindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1675,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colindextext"
							}
						},
						{
							"id": 3333,
							"name": "aria-colspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1680,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colspan"
							}
						},
						{
							"id": 3334,
							"name": "aria-controls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-owns."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1685,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-controls"
							}
						},
						{
							"id": 3335,
							"name": "aria-current",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the element that represents the current item within a container or set of related elements."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1687,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "time"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "location"
									},
									{
										"type": "literal",
										"value": "page"
									},
									{
										"type": "literal",
										"value": "step"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-current"
							}
						},
						{
							"id": 3336,
							"name": "aria-describedby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that describes the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1692,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-describedby"
							}
						},
						{
							"id": 3337,
							"name": "aria-description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that describes or annotates the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "related aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1697,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-description"
							}
						},
						{
							"id": 3338,
							"name": "aria-details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides a detailed, extended description for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1702,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-details"
							}
						},
						{
							"id": 3339,
							"name": "aria-disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-hidden"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-readonly."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1707,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-disabled"
							}
						},
						{
							"id": 3340,
							"name": "aria-dropeffect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1712,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "link"
									},
									{
										"type": "literal",
										"value": "copy"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "execute"
									},
									{
										"type": "literal",
										"value": "move"
									},
									{
										"type": "literal",
										"value": "popup"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-dropeffect"
							}
						},
						{
							"id": 3341,
							"name": "aria-errormessage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides an error message for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-invalid"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-describedby."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1717,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-errormessage"
							}
						},
						{
							"id": 3342,
							"name": "aria-expanded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1719,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-expanded"
							}
						},
						{
							"id": 3343,
							"name": "aria-flowto",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1724,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-flowto"
							}
						},
						{
							"id": 3344,
							"name": "aria-grabbed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1729,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-grabbed"
							}
						},
						{
							"id": 3345,
							"name": "aria-haspopup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1731,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "dialog"
									},
									{
										"type": "literal",
										"value": "menu"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grid"
									},
									{
										"type": "literal",
										"value": "listbox"
									},
									{
										"type": "literal",
										"value": "tree"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-haspopup"
							}
						},
						{
							"id": 3346,
							"name": "aria-hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element is exposed to an accessibility API."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1736,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-hidden"
							}
						},
						{
							"id": 3347,
							"name": "aria-invalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the entered value does not conform to the format expected by the application."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-errormessage."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1741,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grammar"
									},
									{
										"type": "literal",
										"value": "spelling"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-invalid"
							}
						},
						{
							"id": 3348,
							"name": "aria-keyshortcuts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1743,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-keyshortcuts"
							}
						},
						{
							"id": 3349,
							"name": "aria-label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1748,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-label"
							}
						},
						{
							"id": 3350,
							"name": "aria-labelledby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1753,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-labelledby"
							}
						},
						{
							"id": 3351,
							"name": "aria-level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the hierarchical level of an element within a structure."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1755,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-level"
							}
						},
						{
							"id": 3352,
							"name": "aria-live",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1757,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "off"
									},
									{
										"type": "literal",
										"value": "assertive"
									},
									{
										"type": "literal",
										"value": "polite"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-live"
							}
						},
						{
							"id": 3353,
							"name": "aria-modal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether an element is modal when displayed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1759,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-modal"
							}
						},
						{
							"id": 3354,
							"name": "aria-multiline",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1761,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-multiline"
							}
						},
						{
							"id": 3355,
							"name": "aria-multiselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the user may select more than one item from the current selectable descendants."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1763,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-multiselectable"
							}
						},
						{
							"id": 3356,
							"name": "aria-orientation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1765,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "horizontal"
									},
									{
										"type": "literal",
										"value": "vertical"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-orientation"
							}
						},
						{
							"id": 3357,
							"name": "aria-owns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-controls."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1771,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-owns"
							}
						},
						{
							"id": 3358,
							"name": "aria-placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1776,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-placeholder"
							}
						},
						{
							"id": 3359,
							"name": "aria-posinset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-setsize."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1781,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-posinset"
							}
						},
						{
							"id": 3360,
							"name": "aria-pressed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"pressed\" state of toggle buttons."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1786,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-pressed"
							}
						},
						{
							"id": 3361,
							"name": "aria-readonly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is not editable, but is otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1791,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-readonly"
							}
						},
						{
							"id": 3362,
							"name": "aria-relevant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-atomic."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1796,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "additions"
									},
									{
										"type": "literal",
										"value": "additions removals"
									},
									{
										"type": "literal",
										"value": "additions text"
									},
									{
										"type": "literal",
										"value": "all"
									},
									{
										"type": "literal",
										"value": "removals"
									},
									{
										"type": "literal",
										"value": "removals additions"
									},
									{
										"type": "literal",
										"value": "removals text"
									},
									{
										"type": "literal",
										"value": "text additions"
									},
									{
										"type": "literal",
										"value": "text removals"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-relevant"
							}
						},
						{
							"id": 3363,
							"name": "aria-required",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that user input is required on the element before a form may be submitted."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1798,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-required"
							}
						},
						{
							"id": 3364,
							"name": "aria-roledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized description for the role of an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1800,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-roledescription"
							}
						},
						{
							"id": 3365,
							"name": "aria-rowcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of rows in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1805,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowcount"
							}
						},
						{
							"id": 3366,
							"name": "aria-rowindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1810,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowindex"
							}
						},
						{
							"id": 3367,
							"name": "aria-rowindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-rowindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1815,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowindextext"
							}
						},
						{
							"id": 3368,
							"name": "aria-rowspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1820,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowspan"
							}
						},
						{
							"id": 3369,
							"name": "aria-selected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"selected\" state of various widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1825,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-selected"
							}
						},
						{
							"id": 3370,
							"name": "aria-setsize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-posinset."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1830,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-setsize"
							}
						},
						{
							"id": 3371,
							"name": "aria-sort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1832,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "ascending"
									},
									{
										"type": "literal",
										"value": "descending"
									},
									{
										"type": "literal",
										"value": "other"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-sort"
							}
						},
						{
							"id": 3372,
							"name": "aria-valuemax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the maximum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1834,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuemax"
							}
						},
						{
							"id": 3373,
							"name": "aria-valuemin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the minimum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1836,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuemin"
							}
						},
						{
							"id": 3374,
							"name": "aria-valuenow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the current value for a range widget."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-valuetext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1841,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuenow"
							}
						},
						{
							"id": 3375,
							"name": "aria-valuetext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1843,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuetext"
							}
						},
						{
							"id": 3376,
							"name": "autoCapitalize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1966,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoCapitalize"
							}
						},
						{
							"id": 3377,
							"name": "autoComplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2232,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoComplete"
							}
						},
						{
							"id": 3378,
							"name": "autoCorrect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1967,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoCorrect"
							}
						},
						{
							"id": 3379,
							"name": "autoFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1928,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoFocus"
							}
						},
						{
							"id": 3380,
							"name": "autoSave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1968,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoSave"
							}
						},
						{
							"id": 3381,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1420,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.children"
							}
						},
						{
							"id": 3382,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1929,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.className"
							}
						},
						{
							"id": 3383,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1969,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.color"
							}
						},
						{
							"id": 3384,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1954,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.content"
							}
						},
						{
							"id": 3385,
							"name": "contentEditable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1930,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "Booleanish"
										},
										"name": "Booleanish",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": "inherit"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.contentEditable"
							}
						},
						{
							"id": 3386,
							"name": "contextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1931,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.contextMenu"
							}
						},
						{
							"id": 3387,
							"name": "dangerouslySetInnerHTML",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1421,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3388,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 3389,
											"name": "__html",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"line": 1424,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
															"qualifiedName": "TrustedHTML"
														},
														"name": "TrustedHTML",
														"package": "@types/react"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3389
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 1421,
											"character": 34
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.dangerouslySetInnerHTML"
							}
						},
						{
							"id": 3390,
							"name": "datatype",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1955,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.datatype"
							}
						},
						{
							"id": 3391,
							"name": "defaultChecked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1921,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.defaultChecked"
							}
						},
						{
							"id": 3392,
							"name": "defaultValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1922,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.defaultValue"
							}
						},
						{
							"id": 3393,
							"name": "dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1932,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.dir"
							}
						},
						{
							"id": 3394,
							"name": "discover",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 975,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L975"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"qualifiedName": "DiscoverBehavior"
								},
								"name": "DiscoverBehavior",
								"package": "react-router"
							}
						},
						{
							"id": 3395,
							"name": "draggable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1933,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.draggable"
							}
						},
						{
							"id": 3396,
							"name": "encType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The encoding type to use for the form submission."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 934,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L934"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"type": "literal",
										"value": "multipart/form-data"
									},
									{
										"type": "literal",
										"value": "text/plain"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.encType"
							}
						},
						{
							"id": 3397,
							"name": "fetcherKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates a specific fetcherKey to use when using "
									},
									{
										"kind": "code",
										"text": "`navigate={false}`"
									},
									{
										"kind": "text",
										"text": " so you\ncan pick up the fetcher's state in a different component in a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useFetcher",
										"target": 5186
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 982,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L982"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3398,
							"name": "hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1934,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.hidden"
							}
						},
						{
							"id": 3399,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1935,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.id"
							}
						},
						{
							"id": 3400,
							"name": "inlist",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1956,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.inlist"
							}
						},
						{
							"id": 3401,
							"name": "inputMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1984,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "search"
									},
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "url"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "tel"
									},
									{
										"type": "literal",
										"value": "email"
									},
									{
										"type": "literal",
										"value": "numeric"
									},
									{
										"type": "literal",
										"value": "decimal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.inputMode"
							}
						},
						{
							"id": 3402,
							"name": "is",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1989,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.is"
							}
						},
						{
							"id": 3403,
							"name": "itemID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemID"
							}
						},
						{
							"id": 3404,
							"name": "itemProp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1970,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemProp"
							}
						},
						{
							"id": 3405,
							"name": "itemRef",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1974,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemRef"
							}
						},
						{
							"id": 3406,
							"name": "itemScope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1971,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemScope"
							}
						},
						{
							"id": 3407,
							"name": "itemType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1972,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemType"
							}
						},
						{
							"id": 3408,
							"name": "lang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1936,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.lang"
							}
						},
						{
							"id": 3409,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HTTP verb to use when the form is submitted. Supports \"get\", \"post\",\n\"put\", \"delete\", and \"patch\".\n\nNative "
									},
									{
										"kind": "code",
										"text": "`<form>`"
									},
									{
										"kind": "text",
										"text": " only supports "
									},
									{
										"kind": "code",
										"text": "`get`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`post`"
									},
									{
										"kind": "text",
										"text": ", avoid the other verbs if\nyou'd like to support progressive enhancement"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 929,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L929"
								}
							],
							"type": {
								"type": "reference",
								"target": 4743,
								"name": "HTMLFormMethod",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.method"
							}
						},
						{
							"id": 3410,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2235,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.name"
							}
						},
						{
							"id": 3411,
							"name": "navigate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Skips the navigation and uses a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "fetcher",
										"target": 5186,
										"tsLinkText": "fetcher"
									},
									{
										"kind": "text",
										"text": " internally\nwhen "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ". This is essentially a shorthand for "
									},
									{
										"kind": "code",
										"text": "`useFetcher()`"
									},
									{
										"kind": "text",
										"text": " +\n"
									},
									{
										"kind": "code",
										"text": "`<fetcher.Form>`"
									},
									{
										"kind": "text",
										"text": " where you don't care about the resulting data in this\ncomponent."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 990,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L990"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3412,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1937,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.nonce"
							}
						},
						{
							"id": 3413,
							"name": "noValidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2236,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.noValidate"
							}
						},
						{
							"id": 3414,
							"name": "onAbort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1480,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAbort"
							}
						},
						{
							"id": 3415,
							"name": "onAbortCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1481,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAbortCapture"
							}
						},
						{
							"id": 3416,
							"name": "onAnimationEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1612,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationEnd"
							}
						},
						{
							"id": 3417,
							"name": "onAnimationEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1613,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationEndCapture"
							}
						},
						{
							"id": 3418,
							"name": "onAnimationIteration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1614,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationIteration"
							}
						},
						{
							"id": 3419,
							"name": "onAnimationIterationCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1615,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationIterationCapture"
							}
						},
						{
							"id": 3420,
							"name": "onAnimationStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1610,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationStart"
							}
						},
						{
							"id": 3421,
							"name": "onAnimationStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1611,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationStartCapture"
							}
						},
						{
							"id": 3422,
							"name": "onAuxClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1528,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAuxClick"
							}
						},
						{
							"id": 3423,
							"name": "onAuxClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1529,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAuxClickCapture"
							}
						},
						{
							"id": 3424,
							"name": "onBeforeInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1452,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBeforeInput"
							}
						},
						{
							"id": 3425,
							"name": "onBeforeInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1453,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBeforeInputCapture"
							}
						},
						{
							"id": 3426,
							"name": "onBlur",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1446,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBlur"
							}
						},
						{
							"id": 3427,
							"name": "onBlurCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1447,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBlurCapture"
							}
						},
						{
							"id": 3428,
							"name": "onCanPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1482,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlay"
							}
						},
						{
							"id": 3429,
							"name": "onCanPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1483,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayCapture"
							}
						},
						{
							"id": 3430,
							"name": "onCanPlayThrough",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1484,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayThrough"
							}
						},
						{
							"id": 3431,
							"name": "onCanPlayThroughCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1485,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayThroughCapture"
							}
						},
						{
							"id": 3432,
							"name": "onChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1450,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onChange"
							}
						},
						{
							"id": 3433,
							"name": "onChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1451,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onChangeCapture"
							}
						},
						{
							"id": 3434,
							"name": "onClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1530,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onClick"
							}
						},
						{
							"id": 3435,
							"name": "onClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1531,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onClickCapture"
							}
						},
						{
							"id": 3436,
							"name": "onCompositionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1436,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionEnd"
							}
						},
						{
							"id": 3437,
							"name": "onCompositionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1437,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionEndCapture"
							}
						},
						{
							"id": 3438,
							"name": "onCompositionStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1438,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionStart"
							}
						},
						{
							"id": 3439,
							"name": "onCompositionStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1439,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionStartCapture"
							}
						},
						{
							"id": 3440,
							"name": "onCompositionUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1440,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionUpdate"
							}
						},
						{
							"id": 3441,
							"name": "onCompositionUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1441,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionUpdateCapture"
							}
						},
						{
							"id": 3442,
							"name": "onContextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1532,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onContextMenu"
							}
						},
						{
							"id": 3443,
							"name": "onContextMenuCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1533,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onContextMenuCapture"
							}
						},
						{
							"id": 3444,
							"name": "onCopy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1428,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCopy"
							}
						},
						{
							"id": 3445,
							"name": "onCopyCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1429,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCopyCapture"
							}
						},
						{
							"id": 3446,
							"name": "onCut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1430,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCut"
							}
						},
						{
							"id": 3447,
							"name": "onCutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1431,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCutCapture"
							}
						},
						{
							"id": 3448,
							"name": "onDoubleClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1534,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDoubleClick"
							}
						},
						{
							"id": 3449,
							"name": "onDoubleClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1535,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDoubleClickCapture"
							}
						},
						{
							"id": 3450,
							"name": "onDrag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1536,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDrag"
							}
						},
						{
							"id": 3451,
							"name": "onDragCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1537,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragCapture"
							}
						},
						{
							"id": 3452,
							"name": "onDragEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1538,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnd"
							}
						},
						{
							"id": 3453,
							"name": "onDragEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1539,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEndCapture"
							}
						},
						{
							"id": 3454,
							"name": "onDragEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1540,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnter"
							}
						},
						{
							"id": 3455,
							"name": "onDragEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1541,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnterCapture"
							}
						},
						{
							"id": 3456,
							"name": "onDragExit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1542,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragExit"
							}
						},
						{
							"id": 3457,
							"name": "onDragExitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1543,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragExitCapture"
							}
						},
						{
							"id": 3458,
							"name": "onDragLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1544,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragLeave"
							}
						},
						{
							"id": 3459,
							"name": "onDragLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1545,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragLeaveCapture"
							}
						},
						{
							"id": 3460,
							"name": "onDragOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1546,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragOver"
							}
						},
						{
							"id": 3461,
							"name": "onDragOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1547,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragOverCapture"
							}
						},
						{
							"id": 3462,
							"name": "onDragStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1548,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragStart"
							}
						},
						{
							"id": 3463,
							"name": "onDragStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1549,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragStartCapture"
							}
						},
						{
							"id": 3464,
							"name": "onDrop",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1550,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDrop"
							}
						},
						{
							"id": 3465,
							"name": "onDropCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1551,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDropCapture"
							}
						},
						{
							"id": 3466,
							"name": "onDurationChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1486,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDurationChange"
							}
						},
						{
							"id": 3467,
							"name": "onDurationChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1487,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDurationChangeCapture"
							}
						},
						{
							"id": 3468,
							"name": "onEmptied",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1488,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEmptied"
							}
						},
						{
							"id": 3469,
							"name": "onEmptiedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1489,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEmptiedCapture"
							}
						},
						{
							"id": 3470,
							"name": "onEncrypted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1490,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEncrypted"
							}
						},
						{
							"id": 3471,
							"name": "onEncryptedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1491,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEncryptedCapture"
							}
						},
						{
							"id": 3472,
							"name": "onEnded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1492,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEnded"
							}
						},
						{
							"id": 3473,
							"name": "onEndedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1493,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEndedCapture"
							}
						},
						{
							"id": 3474,
							"name": "onError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1466,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onError"
							}
						},
						{
							"id": 3475,
							"name": "onErrorCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1467,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onErrorCapture"
							}
						},
						{
							"id": 3476,
							"name": "onFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1444,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onFocus"
							}
						},
						{
							"id": 3477,
							"name": "onFocusCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1445,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onFocusCapture"
							}
						},
						{
							"id": 3478,
							"name": "onGotPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1596,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onGotPointerCapture"
							}
						},
						{
							"id": 3479,
							"name": "onGotPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1597,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onGotPointerCaptureCapture"
							}
						},
						{
							"id": 3480,
							"name": "onInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1454,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInput"
							}
						},
						{
							"id": 3481,
							"name": "onInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1455,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInputCapture"
							}
						},
						{
							"id": 3482,
							"name": "onInvalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1460,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInvalid"
							}
						},
						{
							"id": 3483,
							"name": "onInvalidCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1461,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInvalidCapture"
							}
						},
						{
							"id": 3484,
							"name": "onKeyDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1470,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyDown"
							}
						},
						{
							"id": 3485,
							"name": "onKeyDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1471,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyDownCapture"
							}
						},
						{
							"id": 3486,
							"name": "onKeyPress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1473,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyPress"
							}
						},
						{
							"id": 3487,
							"name": "onKeyPressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1475,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyPressCapture"
							}
						},
						{
							"id": 3488,
							"name": "onKeyUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1476,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyUp"
							}
						},
						{
							"id": 3489,
							"name": "onKeyUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1477,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyUpCapture"
							}
						},
						{
							"id": 3490,
							"name": "onLoad",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1464,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoad"
							}
						},
						{
							"id": 3491,
							"name": "onLoadCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1465,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadCapture"
							}
						},
						{
							"id": 3492,
							"name": "onLoadedData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1494,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedData"
							}
						},
						{
							"id": 3493,
							"name": "onLoadedDataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1495,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedDataCapture"
							}
						},
						{
							"id": 3494,
							"name": "onLoadedMetadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1496,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedMetadata"
							}
						},
						{
							"id": 3495,
							"name": "onLoadedMetadataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1497,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedMetadataCapture"
							}
						},
						{
							"id": 3496,
							"name": "onLoadStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1498,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadStart"
							}
						},
						{
							"id": 3497,
							"name": "onLoadStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1499,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadStartCapture"
							}
						},
						{
							"id": 3498,
							"name": "onLostPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1598,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLostPointerCapture"
							}
						},
						{
							"id": 3499,
							"name": "onLostPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1599,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLostPointerCaptureCapture"
							}
						},
						{
							"id": 3500,
							"name": "onMouseDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1552,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseDown"
							}
						},
						{
							"id": 3501,
							"name": "onMouseDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1553,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseDownCapture"
							}
						},
						{
							"id": 3502,
							"name": "onMouseEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1554,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseEnter"
							}
						},
						{
							"id": 3503,
							"name": "onMouseLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1555,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseLeave"
							}
						},
						{
							"id": 3504,
							"name": "onMouseMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1556,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseMove"
							}
						},
						{
							"id": 3505,
							"name": "onMouseMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1557,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseMoveCapture"
							}
						},
						{
							"id": 3506,
							"name": "onMouseOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1558,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOut"
							}
						},
						{
							"id": 3507,
							"name": "onMouseOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1559,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOutCapture"
							}
						},
						{
							"id": 3508,
							"name": "onMouseOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1560,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOver"
							}
						},
						{
							"id": 3509,
							"name": "onMouseOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1561,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOverCapture"
							}
						},
						{
							"id": 3510,
							"name": "onMouseUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1562,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseUp"
							}
						},
						{
							"id": 3511,
							"name": "onMouseUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1563,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseUpCapture"
							}
						},
						{
							"id": 3512,
							"name": "onPaste",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1432,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPaste"
							}
						},
						{
							"id": 3513,
							"name": "onPasteCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1433,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPasteCapture"
							}
						},
						{
							"id": 3514,
							"name": "onPause",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1500,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPause"
							}
						},
						{
							"id": 3515,
							"name": "onPauseCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1501,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPauseCapture"
							}
						},
						{
							"id": 3516,
							"name": "onPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1502,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlay"
							}
						},
						{
							"id": 3517,
							"name": "onPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1503,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlayCapture"
							}
						},
						{
							"id": 3518,
							"name": "onPlaying",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1504,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlaying"
							}
						},
						{
							"id": 3519,
							"name": "onPlayingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1505,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlayingCapture"
							}
						},
						{
							"id": 3520,
							"name": "onPointerCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1586,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerCancel"
							}
						},
						{
							"id": 3521,
							"name": "onPointerCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1587,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerCancelCapture"
							}
						},
						{
							"id": 3522,
							"name": "onPointerDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1580,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerDown"
							}
						},
						{
							"id": 3523,
							"name": "onPointerDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1581,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerDownCapture"
							}
						},
						{
							"id": 3524,
							"name": "onPointerEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1588,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerEnter"
							}
						},
						{
							"id": 3525,
							"name": "onPointerEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1589,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerEnterCapture"
							}
						},
						{
							"id": 3526,
							"name": "onPointerLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1590,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerLeave"
							}
						},
						{
							"id": 3527,
							"name": "onPointerLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1591,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerLeaveCapture"
							}
						},
						{
							"id": 3528,
							"name": "onPointerMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1582,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerMove"
							}
						},
						{
							"id": 3529,
							"name": "onPointerMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1583,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerMoveCapture"
							}
						},
						{
							"id": 3530,
							"name": "onPointerOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1594,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOut"
							}
						},
						{
							"id": 3531,
							"name": "onPointerOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1595,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOutCapture"
							}
						},
						{
							"id": 3532,
							"name": "onPointerOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1592,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOver"
							}
						},
						{
							"id": 3533,
							"name": "onPointerOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1593,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOverCapture"
							}
						},
						{
							"id": 3534,
							"name": "onPointerUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1584,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerUp"
							}
						},
						{
							"id": 3535,
							"name": "onPointerUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1585,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerUpCapture"
							}
						},
						{
							"id": 3536,
							"name": "onProgress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1506,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onProgress"
							}
						},
						{
							"id": 3537,
							"name": "onProgressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1507,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onProgressCapture"
							}
						},
						{
							"id": 3538,
							"name": "onRateChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1508,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onRateChange"
							}
						},
						{
							"id": 3539,
							"name": "onRateChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1509,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onRateChangeCapture"
							}
						},
						{
							"id": 3540,
							"name": "onReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1456,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onReset"
							}
						},
						{
							"id": 3541,
							"name": "onResetCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1457,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResetCapture"
							}
						},
						{
							"id": 3542,
							"name": "onResize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1510,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResize"
							}
						},
						{
							"id": 3543,
							"name": "onResizeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1511,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResizeCapture"
							}
						},
						{
							"id": 3544,
							"name": "onScroll",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1602,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onScroll"
							}
						},
						{
							"id": 3545,
							"name": "onScrollCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1603,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onScrollCapture"
							}
						},
						{
							"id": 3546,
							"name": "onSeeked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1512,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeeked"
							}
						},
						{
							"id": 3547,
							"name": "onSeekedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1513,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeekedCapture"
							}
						},
						{
							"id": 3548,
							"name": "onSeeking",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1514,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeeking"
							}
						},
						{
							"id": 3549,
							"name": "onSeekingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1515,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeekingCapture"
							}
						},
						{
							"id": 3550,
							"name": "onSelect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1566,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSelect"
							}
						},
						{
							"id": 3551,
							"name": "onSelectCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1567,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSelectCapture"
							}
						},
						{
							"id": 3552,
							"name": "onStalled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1516,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onStalled"
							}
						},
						{
							"id": 3553,
							"name": "onStalledCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1517,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onStalledCapture"
							}
						},
						{
							"id": 3554,
							"name": "onSubmit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A function to call when the form is submitted. If you call\n"
									},
									{
										"kind": "code",
										"text": "`event.preventDefault()`"
									},
									{
										"kind": "text",
										"text": " then this form will not do anything."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 961,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L961"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSubmit"
							}
						},
						{
							"id": 3555,
							"name": "onSubmitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1459,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSubmitCapture"
							}
						},
						{
							"id": 3556,
							"name": "onSuspend",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1518,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSuspend"
							}
						},
						{
							"id": 3557,
							"name": "onSuspendCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1519,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSuspendCapture"
							}
						},
						{
							"id": 3558,
							"name": "onTimeUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1520,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTimeUpdate"
							}
						},
						{
							"id": 3559,
							"name": "onTimeUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1521,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTimeUpdateCapture"
							}
						},
						{
							"id": 3560,
							"name": "onTouchCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1570,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchCancel"
							}
						},
						{
							"id": 3561,
							"name": "onTouchCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1571,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchCancelCapture"
							}
						},
						{
							"id": 3562,
							"name": "onTouchEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1572,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchEnd"
							}
						},
						{
							"id": 3563,
							"name": "onTouchEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1573,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchEndCapture"
							}
						},
						{
							"id": 3564,
							"name": "onTouchMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1574,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchMove"
							}
						},
						{
							"id": 3565,
							"name": "onTouchMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1575,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchMoveCapture"
							}
						},
						{
							"id": 3566,
							"name": "onTouchStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1576,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchStart"
							}
						},
						{
							"id": 3567,
							"name": "onTouchStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1577,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchStartCapture"
							}
						},
						{
							"id": 3568,
							"name": "onTransitionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1618,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTransitionEnd"
							}
						},
						{
							"id": 3569,
							"name": "onTransitionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1619,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTransitionEndCapture"
							}
						},
						{
							"id": 3570,
							"name": "onVolumeChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1522,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onVolumeChange"
							}
						},
						{
							"id": 3571,
							"name": "onVolumeChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1523,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onVolumeChangeCapture"
							}
						},
						{
							"id": 3572,
							"name": "onWaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1524,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWaiting"
							}
						},
						{
							"id": 3573,
							"name": "onWaitingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1525,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWaitingCapture"
							}
						},
						{
							"id": 3574,
							"name": "onWheel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1606,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWheel"
							}
						},
						{
							"id": 3575,
							"name": "onWheelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1607,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWheelCapture"
							}
						},
						{
							"id": 3576,
							"name": "placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1938,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.placeholder"
							}
						},
						{
							"id": 3577,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1957,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.prefix"
							}
						},
						{
							"id": 3578,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prevent the scroll position from resetting to the top of the viewport on\ncompletion of the navigation when using the <ScrollRestoration> component"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 955,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L955"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.preventScrollReset"
							}
						},
						{
							"id": 3579,
							"name": "property",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1958,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.property"
							}
						},
						{
							"id": 3580,
							"name": "radioGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1947,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.radioGroup"
							}
						},
						{
							"id": 3581,
							"name": "rel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1959,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.rel"
							}
						},
						{
							"id": 3582,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 949,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L949"
								}
							],
							"type": {
								"type": "reference",
								"target": 4841,
								"name": "RelativeRoutingType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.relative"
							}
						},
						{
							"id": 3583,
							"name": "reloadDocument",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Forces a full document navigation instead of client side routing + data\nfetch."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 996,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L996"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3584,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current entry in the browser history stack when the form\nnavigates. Use this if you don't want the user to be able to click \"back\"\nto the page with the form on it."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1003,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1003"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3585,
							"name": "resource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1960,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.resource"
							}
						},
						{
							"id": 3586,
							"name": "results",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1975,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.results"
							}
						},
						{
							"id": 3587,
							"name": "rev",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1961,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.rev"
							}
						},
						{
							"id": 3588,
							"name": "role",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1950,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AriaRole"
								},
								"name": "AriaRole",
								"package": "@types/react",
								"qualifiedName": "React.AriaRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.role"
							}
						},
						{
							"id": 3589,
							"name": "security",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1976,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.security"
							}
						},
						{
							"id": 3590,
							"name": "slot",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1939,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.slot"
							}
						},
						{
							"id": 3591,
							"name": "spellCheck",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1940,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.spellCheck"
							}
						},
						{
							"id": 3592,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "State object to add to the history stack entry for this navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1008,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1008"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3593,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1941,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "CSSProperties",
								"package": "@types/react",
								"qualifiedName": "React.CSSProperties"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.style"
							}
						},
						{
							"id": 3594,
							"name": "suppressContentEditableWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1923,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.suppressContentEditableWarning"
							}
						},
						{
							"id": 3595,
							"name": "suppressHydrationWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1924,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.suppressHydrationWarning"
							}
						},
						{
							"id": 3596,
							"name": "tabIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1942,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.tabIndex"
							}
						},
						{
							"id": 3597,
							"name": "target",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2237,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.target"
							}
						},
						{
							"id": 3598,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1943,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.title"
							}
						},
						{
							"id": 3599,
							"name": "translate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1944,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "yes"
									},
									{
										"type": "literal",
										"value": "no"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.translate"
							}
						},
						{
							"id": 3600,
							"name": "typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1962,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.typeof"
							}
						},
						{
							"id": 3601,
							"name": "unselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1977,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "on"
									},
									{
										"type": "literal",
										"value": "off"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.unselectable"
							}
						},
						{
							"id": 3602,
							"name": "viewTransition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables a [View\nTransition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API)\nfor this navigation. To apply specific styles during the transition see\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useViewTransitionState",
										"target": 5279
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1016,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1016"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3603,
							"name": "vocab",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1963,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.vocab"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3319,
								3320,
								3321,
								3322,
								3323,
								3324,
								3325,
								3326,
								3327,
								3328,
								3329,
								3330,
								3331,
								3332,
								3333,
								3334,
								3335,
								3336,
								3337,
								3338,
								3339,
								3340,
								3341,
								3342,
								3343,
								3344,
								3345,
								3346,
								3347,
								3348,
								3349,
								3350,
								3351,
								3352,
								3353,
								3354,
								3355,
								3356,
								3357,
								3358,
								3359,
								3360,
								3361,
								3362,
								3363,
								3364,
								3365,
								3366,
								3367,
								3368,
								3369,
								3370,
								3371,
								3372,
								3373,
								3374,
								3375,
								3376,
								3377,
								3378,
								3379,
								3380,
								3381,
								3382,
								3383,
								3384,
								3385,
								3386,
								3387,
								3390,
								3391,
								3392,
								3393,
								3394,
								3395,
								3396,
								3397,
								3398,
								3399,
								3400,
								3401,
								3402,
								3403,
								3404,
								3405,
								3406,
								3407,
								3408,
								3409,
								3410,
								3411,
								3412,
								3413,
								3414,
								3415,
								3416,
								3417,
								3418,
								3419,
								3420,
								3421,
								3422,
								3423,
								3424,
								3425,
								3426,
								3427,
								3428,
								3429,
								3430,
								3431,
								3432,
								3433,
								3434,
								3435,
								3436,
								3437,
								3438,
								3439,
								3440,
								3441,
								3442,
								3443,
								3444,
								3445,
								3446,
								3447,
								3448,
								3449,
								3450,
								3451,
								3452,
								3453,
								3454,
								3455,
								3456,
								3457,
								3458,
								3459,
								3460,
								3461,
								3462,
								3463,
								3464,
								3465,
								3466,
								3467,
								3468,
								3469,
								3470,
								3471,
								3472,
								3473,
								3474,
								3475,
								3476,
								3477,
								3478,
								3479,
								3480,
								3481,
								3482,
								3483,
								3484,
								3485,
								3486,
								3487,
								3488,
								3489,
								3490,
								3491,
								3492,
								3493,
								3494,
								3495,
								3496,
								3497,
								3498,
								3499,
								3500,
								3501,
								3502,
								3503,
								3504,
								3505,
								3506,
								3507,
								3508,
								3509,
								3510,
								3511,
								3512,
								3513,
								3514,
								3515,
								3516,
								3517,
								3518,
								3519,
								3520,
								3521,
								3522,
								3523,
								3524,
								3525,
								3526,
								3527,
								3528,
								3529,
								3530,
								3531,
								3532,
								3533,
								3534,
								3535,
								3536,
								3537,
								3538,
								3539,
								3540,
								3541,
								3542,
								3543,
								3544,
								3545,
								3546,
								3547,
								3548,
								3549,
								3550,
								3551,
								3552,
								3553,
								3554,
								3555,
								3556,
								3557,
								3558,
								3559,
								3560,
								3561,
								3562,
								3563,
								3564,
								3565,
								3566,
								3567,
								3568,
								3569,
								3570,
								3571,
								3572,
								3573,
								3574,
								3575,
								3576,
								3577,
								3578,
								3579,
								3580,
								3581,
								3582,
								3583,
								3584,
								3585,
								3586,
								3587,
								3588,
								3589,
								3590,
								3591,
								3592,
								3593,
								3594,
								3595,
								3596,
								3597,
								3598,
								3599,
								3600,
								3601,
								3602,
								3603
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 974,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L974"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
								"qualifiedName": "SharedFormProps"
							},
							"name": "SharedFormProps",
							"package": "react-router"
						}
					]
				},
				{
					"id": 3604,
					"name": "GetScrollPositionFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function signature for determining the current scroll position"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 445,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L445"
						}
					],
					"signatures": [
						{
							"id": 3605,
							"name": "GetScrollPositionFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 446,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L446"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3606,
					"name": "GetScrollRestorationKeyFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function signature for determining the key to be used in scroll restoration\nfor a given location"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 438,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L438"
						}
					],
					"signatures": [
						{
							"id": 3607,
							"name": "GetScrollRestorationKeyFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 439,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L439"
								}
							],
							"parameters": [
								{
									"id": 3608,
									"name": "location",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3994,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Location",
										"package": "react-router"
									}
								},
								{
									"id": 3609,
									"name": "matches",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4647,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "unknown"
												},
												{
													"type": "intrinsic",
													"name": "unknown"
												}
											],
											"name": "UIMatch",
											"package": "react-router"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 3610,
					"name": "HandleDataRequestFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/build.ts",
							"line": 36,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 3611,
							"name": "HandleDataRequestFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L37"
								}
							],
							"parameters": [
								{
									"id": 3612,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript"
									}
								},
								{
									"id": 3613,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3989,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderFunctionArgs",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": 2921,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ActionFunctionArgs",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Response"
												},
												"name": "Response",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 3614,
					"name": "HandleDocumentRequestFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/build.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L26"
						}
					],
					"signatures": [
						{
							"id": 3615,
							"name": "HandleDocumentRequestFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L27"
								}
							],
							"parameters": [
								{
									"id": 3616,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript"
									}
								},
								{
									"id": 3617,
									"name": "responseStatusCode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3618,
									"name": "responseHeaders",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								},
								{
									"id": 3619,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3006,
										"name": "EntryContext",
										"package": "react-router"
									}
								},
								{
									"id": 3620,
									"name": "loadContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2926,
										"name": "AppLoadContext",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Response"
												},
												"name": "Response",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 3621,
					"name": "HandleErrorFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/build.ts",
							"line": 42,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 3622,
							"name": "HandleErrorFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L43"
								}
							],
							"parameters": [
								{
									"id": 3623,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 3624,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3989,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderFunctionArgs",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": 2921,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ActionFunctionArgs",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3625,
					"name": "HashRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3626,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 295,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L295"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3627,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 296,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L296"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 3628,
							"name": "window",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 297,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L297"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Window"
								},
								"name": "Window",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3626,
								3627,
								3628
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 294,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L294"
						}
					]
				},
				{
					"id": 3629,
					"name": "HeadersFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that returns HTTP headers to be used for a route. These headers\nwill be merged with (and take precedence over) headers from parent routes."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
							"line": 24,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/routeModules.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 3630,
							"name": "HeadersFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/routeModules.ts#L25"
								}
							],
							"parameters": [
								{
									"id": 3631,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4737,
										"name": "HeadersArgs",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HeadersInit"
								},
								"name": "HeadersInit",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3632,
					"name": "HistoryRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3633,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 341,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L341"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3634,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 342,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L342"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 3635,
							"name": "history",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 343,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L343"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/history.ts",
									"qualifiedName": "History"
								},
								"name": "History",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3633,
								3634,
								3635
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 340,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L340"
						}
					]
				},
				{
					"id": 3636,
					"name": "IndexRouteObject",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3637,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L30"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 2916,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ActionFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 3638,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3639,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 3640,
							"name": "Component",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L39"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3641,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 3642,
							"name": "element",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L36"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 3643,
							"name": "ErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 41,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L41"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3644,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 3645,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L38"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 3646,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3647,
							"name": "hasErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3648,
							"name": "HydrateFallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L40"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3649,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 3650,
							"name": "hydrateFallbackElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L37"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 3651,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3652,
							"name": "index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L34"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 3653,
							"name": "lazy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L42"
								}
							],
							"type": {
								"type": "reference",
								"target": 3699,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4848,
										"name": "RouteObject",
										"package": "react-router"
									}
								],
								"name": "LazyRouteFunction",
								"package": "react-router"
							}
						},
						{
							"id": 3654,
							"name": "loader",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L29"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 4758,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 3655,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3656,
							"name": "shouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L32"
								}
							],
							"type": {
								"type": "reference",
								"target": 4576,
								"name": "ShouldRevalidateFunction",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3637,
								3638,
								3639,
								3640,
								3642,
								3643,
								3645,
								3646,
								3647,
								3648,
								3650,
								3651,
								3652,
								3653,
								3654,
								3655,
								3656
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 25,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L25"
						}
					]
				},
				{
					"id": 3657,
					"name": "IndexRouteProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3658,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 652,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L652"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 2916,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ActionFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 3659,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 647,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L647"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3660,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 657,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L657"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 3661,
							"name": "Component",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 661,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L661"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3662,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 3663,
							"name": "element",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 658,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L658"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 3664,
							"name": "ErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 663,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L663"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3665,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 3666,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 660,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L660"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 3667,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 655,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L655"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3668,
							"name": "hasErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 653,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L653"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3669,
							"name": "HydrateFallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 662,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L662"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3670,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 3671,
							"name": "hydrateFallbackElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 659,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L659"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 3672,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 649,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L649"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3673,
							"name": "index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 656,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L656"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 3674,
							"name": "lazy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 650,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L650"
								}
							],
							"type": {
								"type": "reference",
								"target": 3699,
								"typeArguments": [
									{
										"type": "reference",
										"target": 3636,
										"name": "IndexRouteObject",
										"package": "react-router"
									}
								],
								"name": "LazyRouteFunction",
								"package": "react-router"
							}
						},
						{
							"id": 3675,
							"name": "loader",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 651,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L651"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 4758,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 3676,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 648,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L648"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3677,
							"name": "shouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 654,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L654"
								}
							],
							"type": {
								"type": "reference",
								"target": 4576,
								"name": "ShouldRevalidateFunction",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3658,
								3659,
								3660,
								3661,
								3663,
								3664,
								3666,
								3667,
								3668,
								3669,
								3671,
								3672,
								3673,
								3674,
								3675,
								3676,
								3677
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 646,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L646"
						}
					]
				},
				{
					"id": 3678,
					"name": "LayoutRouteProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3679,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 624,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L624"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 2916,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ActionFunction",
										"package": "react-router"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4403,
								"name": "PathRouteProps.action"
							}
						},
						{
							"id": 3680,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 619,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L619"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4404,
								"name": "PathRouteProps.caseSensitive"
							}
						},
						{
							"id": 3681,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 629,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L629"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4405,
								"name": "PathRouteProps.children"
							}
						},
						{
							"id": 3682,
							"name": "Component",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 633,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L633"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3683,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4406,
								"name": "PathRouteProps.Component"
							}
						},
						{
							"id": 3684,
							"name": "element",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 630,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L630"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4408,
								"name": "PathRouteProps.element"
							}
						},
						{
							"id": 3685,
							"name": "ErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 635,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L635"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3686,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4409,
								"name": "PathRouteProps.ErrorBoundary"
							}
						},
						{
							"id": 3687,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 632,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L632"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4411,
								"name": "PathRouteProps.errorElement"
							}
						},
						{
							"id": 3688,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 627,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L627"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4412,
								"name": "PathRouteProps.handle"
							}
						},
						{
							"id": 3689,
							"name": "hasErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 625,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L625"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4413,
								"name": "PathRouteProps.hasErrorBoundary"
							}
						},
						{
							"id": 3690,
							"name": "HydrateFallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 634,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L634"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3691,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4414,
								"name": "PathRouteProps.HydrateFallback"
							}
						},
						{
							"id": 3692,
							"name": "hydrateFallbackElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 631,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L631"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4416,
								"name": "PathRouteProps.hydrateFallbackElement"
							}
						},
						{
							"id": 3693,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 621,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L621"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4417,
								"name": "PathRouteProps.id"
							}
						},
						{
							"id": 3694,
							"name": "index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 628,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L628"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4418,
								"name": "PathRouteProps.index"
							}
						},
						{
							"id": 3695,
							"name": "lazy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 622,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L622"
								}
							],
							"type": {
								"type": "reference",
								"target": 3699,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4356,
										"name": "NonIndexRouteObject",
										"package": "react-router"
									}
								],
								"name": "LazyRouteFunction",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4419,
								"name": "PathRouteProps.lazy"
							}
						},
						{
							"id": 3696,
							"name": "loader",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 623,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L623"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 4758,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderFunction",
										"package": "react-router"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4420,
								"name": "PathRouteProps.loader"
							}
						},
						{
							"id": 3697,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 620,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L620"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4421,
								"name": "PathRouteProps.path"
							}
						},
						{
							"id": 3698,
							"name": "shouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 626,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L626"
								}
							],
							"type": {
								"type": "reference",
								"target": 4576,
								"name": "ShouldRevalidateFunction",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4422,
								"name": "PathRouteProps.shouldRevalidate"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3679,
								3680,
								3681,
								3682,
								3684,
								3685,
								3687,
								3688,
								3689,
								3690,
								3692,
								3693,
								3694,
								3695,
								3696,
								3697,
								3698
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 641,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L641"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 4402,
							"name": "PathRouteProps",
							"package": "react-router"
						}
					]
				},
				{
					"id": 3699,
					"name": "LazyRouteFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "lazy() function to load a route definition, which can add non-matching\nrelated properties to a route"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 282,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L282"
						}
					],
					"typeParameters": [
						{
							"id": 3700,
							"name": "R",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "AgnosticRouteObject"
								},
								"name": "AgnosticRouteObject",
								"package": "react-router"
							}
						}
					],
					"signatures": [
						{
							"id": 3701,
							"name": "LazyRouteFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 283,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L283"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Exclude"
										},
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Exclude"
													},
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": 3700,
																"name": "R",
																"package": "react-router",
																"qualifiedName": "LazyRouteFunction.R",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "ImmutableRouteKey"
															},
															"name": "ImmutableRouteKey",
															"package": "react-router"
														}
													],
													"name": "Exclude",
													"package": "typescript"
												},
												"objectType": {
													"type": "mapped",
													"parameter": "K",
													"parameterType": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													},
													"templateType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "react-router",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Exclude"
															},
															"typeArguments": [
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"target": 3700,
																		"name": "R",
																		"package": "react-router",
																		"qualifiedName": "LazyRouteFunction.R",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "ImmutableRouteKey"
																	},
																	"name": "ImmutableRouteKey",
																	"package": "react-router"
																}
															],
															"name": "Exclude",
															"package": "typescript"
														},
														"trueType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Omit"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 3700,
																					"name": "R",
																					"package": "react-router",
																					"qualifiedName": "LazyRouteFunction.R",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "packages/react-router/lib/router/utils.ts",
																						"qualifiedName": "ImmutableRouteKey"
																					},
																					"name": "ImmutableRouteKey",
																					"package": "react-router"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "packages/react-router/lib/router/utils.ts",
																				"qualifiedName": "K"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "packages/react-router/lib/router/utils.ts",
																						"qualifiedName": "K"
																					},
																					"name": "K",
																					"package": "react-router",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "K",
																			"package": "react-router",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "Omit",
																	"package": "typescript"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Required"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Pick"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Omit"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": 3700,
																							"name": "R",
																							"package": "react-router",
																							"qualifiedName": "LazyRouteFunction.R",
																							"refersToTypeParameter": true
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "packages/react-router/lib/router/utils.ts",
																								"qualifiedName": "ImmutableRouteKey"
																							},
																							"name": "ImmutableRouteKey",
																							"package": "react-router"
																						}
																					],
																					"name": "Omit",
																					"package": "typescript"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "packages/react-router/lib/router/utils.ts",
																						"qualifiedName": "K"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "packages/react-router/lib/router/utils.ts",
																								"qualifiedName": "K"
																							},
																							"name": "K",
																							"package": "react-router",
																							"refersToTypeParameter": true
																						}
																					],
																					"name": "K",
																					"package": "react-router",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "Pick",
																			"package": "typescript"
																		}
																	],
																	"name": "Required",
																	"package": "typescript"
																}
															]
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													}
												}
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										],
										"name": "Exclude",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3702,
					"name": "LinkProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 3703,
							"name": "about",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1953,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.about"
							}
						},
						{
							"id": 3704,
							"name": "accessKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1927,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.accessKey"
							}
						},
						{
							"id": 3705,
							"name": "aria-activedescendant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1636,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-activedescendant"
							}
						},
						{
							"id": 3706,
							"name": "aria-atomic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1638,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-atomic"
							}
						},
						{
							"id": 3707,
							"name": "aria-autocomplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1643,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "list"
									},
									{
										"type": "literal",
										"value": "inline"
									},
									{
										"type": "literal",
										"value": "both"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-autocomplete"
							}
						},
						{
							"id": 3708,
							"name": "aria-braillelabel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-label."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1649,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-braillelabel"
							}
						},
						{
							"id": 3709,
							"name": "aria-brailleroledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-roledescription."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1654,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-brailleroledescription"
							}
						},
						{
							"id": 3710,
							"name": "aria-busy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1655,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-busy"
							}
						},
						{
							"id": 3711,
							"name": "aria-checked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1660,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-checked"
							}
						},
						{
							"id": 3712,
							"name": "aria-colcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of columns in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1665,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colcount"
							}
						},
						{
							"id": 3713,
							"name": "aria-colindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1670,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colindex"
							}
						},
						{
							"id": 3714,
							"name": "aria-colindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-colindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1675,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colindextext"
							}
						},
						{
							"id": 3715,
							"name": "aria-colspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1680,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colspan"
							}
						},
						{
							"id": 3716,
							"name": "aria-controls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-owns."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1685,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-controls"
							}
						},
						{
							"id": 3717,
							"name": "aria-current",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the element that represents the current item within a container or set of related elements."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1687,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "time"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "location"
									},
									{
										"type": "literal",
										"value": "page"
									},
									{
										"type": "literal",
										"value": "step"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-current"
							}
						},
						{
							"id": 3718,
							"name": "aria-describedby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that describes the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1692,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-describedby"
							}
						},
						{
							"id": 3719,
							"name": "aria-description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that describes or annotates the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "related aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1697,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-description"
							}
						},
						{
							"id": 3720,
							"name": "aria-details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides a detailed, extended description for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1702,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-details"
							}
						},
						{
							"id": 3721,
							"name": "aria-disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-hidden"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-readonly."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1707,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-disabled"
							}
						},
						{
							"id": 3722,
							"name": "aria-dropeffect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1712,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "link"
									},
									{
										"type": "literal",
										"value": "copy"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "execute"
									},
									{
										"type": "literal",
										"value": "move"
									},
									{
										"type": "literal",
										"value": "popup"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-dropeffect"
							}
						},
						{
							"id": 3723,
							"name": "aria-errormessage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides an error message for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-invalid"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-describedby."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1717,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-errormessage"
							}
						},
						{
							"id": 3724,
							"name": "aria-expanded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1719,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-expanded"
							}
						},
						{
							"id": 3725,
							"name": "aria-flowto",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1724,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-flowto"
							}
						},
						{
							"id": 3726,
							"name": "aria-grabbed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1729,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-grabbed"
							}
						},
						{
							"id": 3727,
							"name": "aria-haspopup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1731,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "dialog"
									},
									{
										"type": "literal",
										"value": "menu"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grid"
									},
									{
										"type": "literal",
										"value": "listbox"
									},
									{
										"type": "literal",
										"value": "tree"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-haspopup"
							}
						},
						{
							"id": 3728,
							"name": "aria-hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element is exposed to an accessibility API."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1736,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-hidden"
							}
						},
						{
							"id": 3729,
							"name": "aria-invalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the entered value does not conform to the format expected by the application."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-errormessage."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1741,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grammar"
									},
									{
										"type": "literal",
										"value": "spelling"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-invalid"
							}
						},
						{
							"id": 3730,
							"name": "aria-keyshortcuts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1743,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-keyshortcuts"
							}
						},
						{
							"id": 3731,
							"name": "aria-label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1748,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-label"
							}
						},
						{
							"id": 3732,
							"name": "aria-labelledby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1753,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-labelledby"
							}
						},
						{
							"id": 3733,
							"name": "aria-level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the hierarchical level of an element within a structure."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1755,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-level"
							}
						},
						{
							"id": 3734,
							"name": "aria-live",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1757,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "off"
									},
									{
										"type": "literal",
										"value": "assertive"
									},
									{
										"type": "literal",
										"value": "polite"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-live"
							}
						},
						{
							"id": 3735,
							"name": "aria-modal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether an element is modal when displayed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1759,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-modal"
							}
						},
						{
							"id": 3736,
							"name": "aria-multiline",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1761,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-multiline"
							}
						},
						{
							"id": 3737,
							"name": "aria-multiselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the user may select more than one item from the current selectable descendants."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1763,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-multiselectable"
							}
						},
						{
							"id": 3738,
							"name": "aria-orientation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1765,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "horizontal"
									},
									{
										"type": "literal",
										"value": "vertical"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-orientation"
							}
						},
						{
							"id": 3739,
							"name": "aria-owns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-controls."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1771,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-owns"
							}
						},
						{
							"id": 3740,
							"name": "aria-placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1776,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-placeholder"
							}
						},
						{
							"id": 3741,
							"name": "aria-posinset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-setsize."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1781,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-posinset"
							}
						},
						{
							"id": 3742,
							"name": "aria-pressed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"pressed\" state of toggle buttons."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1786,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-pressed"
							}
						},
						{
							"id": 3743,
							"name": "aria-readonly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is not editable, but is otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1791,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-readonly"
							}
						},
						{
							"id": 3744,
							"name": "aria-relevant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-atomic."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1796,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "additions"
									},
									{
										"type": "literal",
										"value": "additions removals"
									},
									{
										"type": "literal",
										"value": "additions text"
									},
									{
										"type": "literal",
										"value": "all"
									},
									{
										"type": "literal",
										"value": "removals"
									},
									{
										"type": "literal",
										"value": "removals additions"
									},
									{
										"type": "literal",
										"value": "removals text"
									},
									{
										"type": "literal",
										"value": "text additions"
									},
									{
										"type": "literal",
										"value": "text removals"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-relevant"
							}
						},
						{
							"id": 3745,
							"name": "aria-required",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that user input is required on the element before a form may be submitted."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1798,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-required"
							}
						},
						{
							"id": 3746,
							"name": "aria-roledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized description for the role of an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1800,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-roledescription"
							}
						},
						{
							"id": 3747,
							"name": "aria-rowcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of rows in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1805,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowcount"
							}
						},
						{
							"id": 3748,
							"name": "aria-rowindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1810,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowindex"
							}
						},
						{
							"id": 3749,
							"name": "aria-rowindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-rowindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1815,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowindextext"
							}
						},
						{
							"id": 3750,
							"name": "aria-rowspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1820,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowspan"
							}
						},
						{
							"id": 3751,
							"name": "aria-selected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"selected\" state of various widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1825,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-selected"
							}
						},
						{
							"id": 3752,
							"name": "aria-setsize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-posinset."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1830,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-setsize"
							}
						},
						{
							"id": 3753,
							"name": "aria-sort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1832,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "ascending"
									},
									{
										"type": "literal",
										"value": "descending"
									},
									{
										"type": "literal",
										"value": "other"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-sort"
							}
						},
						{
							"id": 3754,
							"name": "aria-valuemax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the maximum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1834,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuemax"
							}
						},
						{
							"id": 3755,
							"name": "aria-valuemin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the minimum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1836,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuemin"
							}
						},
						{
							"id": 3756,
							"name": "aria-valuenow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the current value for a range widget."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-valuetext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1841,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuenow"
							}
						},
						{
							"id": 3757,
							"name": "aria-valuetext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1843,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuetext"
							}
						},
						{
							"id": 3758,
							"name": "autoCapitalize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1966,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoCapitalize"
							}
						},
						{
							"id": 3759,
							"name": "autoCorrect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1967,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoCorrect"
							}
						},
						{
							"id": 3760,
							"name": "autoFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1928,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoFocus"
							}
						},
						{
							"id": 3761,
							"name": "autoSave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1968,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoSave"
							}
						},
						{
							"id": 3762,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1420,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.children"
							}
						},
						{
							"id": 3763,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1929,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.className"
							}
						},
						{
							"id": 3764,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1969,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.color"
							}
						},
						{
							"id": 3765,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1954,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.content"
							}
						},
						{
							"id": 3766,
							"name": "contentEditable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1930,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "Booleanish"
										},
										"name": "Booleanish",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": "inherit"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.contentEditable"
							}
						},
						{
							"id": 3767,
							"name": "contextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1931,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.contextMenu"
							}
						},
						{
							"id": 3768,
							"name": "dangerouslySetInnerHTML",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1421,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3769,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 3770,
											"name": "__html",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"line": 1424,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
															"qualifiedName": "TrustedHTML"
														},
														"name": "TrustedHTML",
														"package": "@types/react"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3770
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 1421,
											"character": 34
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.dangerouslySetInnerHTML"
							}
						},
						{
							"id": 3771,
							"name": "datatype",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1955,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.datatype"
							}
						},
						{
							"id": 3772,
							"name": "defaultChecked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1921,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.defaultChecked"
							}
						},
						{
							"id": 3773,
							"name": "defaultValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1922,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.defaultValue"
							}
						},
						{
							"id": 3774,
							"name": "dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1932,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.dir"
							}
						},
						{
							"id": 3775,
							"name": "discover",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the link discovery behavior\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link /> // default (\"render\")\n<Link discover=\"render\" />\n<Link discover=\"none\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n- **render** - default, discover the route when the link renders\n- **none** - don't eagerly discover, only discover if the link is clicked"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 402,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L402"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"qualifiedName": "DiscoverBehavior"
								},
								"name": "DiscoverBehavior",
								"package": "react-router"
							}
						},
						{
							"id": 3776,
							"name": "download",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2130,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.download"
							}
						},
						{
							"id": 3777,
							"name": "draggable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1933,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.draggable"
							}
						},
						{
							"id": 3778,
							"name": "hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1934,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hidden"
							}
						},
						{
							"id": 3779,
							"name": "hrefLang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2132,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hrefLang"
							}
						},
						{
							"id": 3780,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1935,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.id"
							}
						},
						{
							"id": 3781,
							"name": "inlist",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1956,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.inlist"
							}
						},
						{
							"id": 3782,
							"name": "inputMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1984,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "search"
									},
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "url"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "tel"
									},
									{
										"type": "literal",
										"value": "email"
									},
									{
										"type": "literal",
										"value": "numeric"
									},
									{
										"type": "literal",
										"value": "decimal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.inputMode"
							}
						},
						{
							"id": 3783,
							"name": "is",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1989,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is"
							}
						},
						{
							"id": 3784,
							"name": "itemID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemID"
							}
						},
						{
							"id": 3785,
							"name": "itemProp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1970,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemProp"
							}
						},
						{
							"id": 3786,
							"name": "itemRef",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1974,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemRef"
							}
						},
						{
							"id": 3787,
							"name": "itemScope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1971,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemScope"
							}
						},
						{
							"id": 3788,
							"name": "itemType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1972,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemType"
							}
						},
						{
							"id": 3789,
							"name": "lang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1936,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.lang"
							}
						},
						{
							"id": 3790,
							"name": "media",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2133,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.media"
							}
						},
						{
							"id": 3791,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1937,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.nonce"
							}
						},
						{
							"id": 3792,
							"name": "onAbort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1480,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAbort"
							}
						},
						{
							"id": 3793,
							"name": "onAbortCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1481,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAbortCapture"
							}
						},
						{
							"id": 3794,
							"name": "onAnimationEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1612,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationEnd"
							}
						},
						{
							"id": 3795,
							"name": "onAnimationEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1613,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationEndCapture"
							}
						},
						{
							"id": 3796,
							"name": "onAnimationIteration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1614,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationIteration"
							}
						},
						{
							"id": 3797,
							"name": "onAnimationIterationCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1615,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationIterationCapture"
							}
						},
						{
							"id": 3798,
							"name": "onAnimationStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1610,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationStart"
							}
						},
						{
							"id": 3799,
							"name": "onAnimationStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1611,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationStartCapture"
							}
						},
						{
							"id": 3800,
							"name": "onAuxClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1528,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAuxClick"
							}
						},
						{
							"id": 3801,
							"name": "onAuxClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1529,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAuxClickCapture"
							}
						},
						{
							"id": 3802,
							"name": "onBeforeInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1452,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBeforeInput"
							}
						},
						{
							"id": 3803,
							"name": "onBeforeInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1453,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBeforeInputCapture"
							}
						},
						{
							"id": 3804,
							"name": "onBlur",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1446,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBlur"
							}
						},
						{
							"id": 3805,
							"name": "onBlurCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1447,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBlurCapture"
							}
						},
						{
							"id": 3806,
							"name": "onCanPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1482,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlay"
							}
						},
						{
							"id": 3807,
							"name": "onCanPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1483,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayCapture"
							}
						},
						{
							"id": 3808,
							"name": "onCanPlayThrough",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1484,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayThrough"
							}
						},
						{
							"id": 3809,
							"name": "onCanPlayThroughCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1485,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayThroughCapture"
							}
						},
						{
							"id": 3810,
							"name": "onChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1450,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onChange"
							}
						},
						{
							"id": 3811,
							"name": "onChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1451,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onChangeCapture"
							}
						},
						{
							"id": 3812,
							"name": "onClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1530,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onClick"
							}
						},
						{
							"id": 3813,
							"name": "onClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1531,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onClickCapture"
							}
						},
						{
							"id": 3814,
							"name": "onCompositionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1436,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionEnd"
							}
						},
						{
							"id": 3815,
							"name": "onCompositionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1437,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionEndCapture"
							}
						},
						{
							"id": 3816,
							"name": "onCompositionStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1438,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionStart"
							}
						},
						{
							"id": 3817,
							"name": "onCompositionStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1439,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionStartCapture"
							}
						},
						{
							"id": 3818,
							"name": "onCompositionUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1440,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionUpdate"
							}
						},
						{
							"id": 3819,
							"name": "onCompositionUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1441,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionUpdateCapture"
							}
						},
						{
							"id": 3820,
							"name": "onContextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1532,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onContextMenu"
							}
						},
						{
							"id": 3821,
							"name": "onContextMenuCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1533,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onContextMenuCapture"
							}
						},
						{
							"id": 3822,
							"name": "onCopy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1428,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCopy"
							}
						},
						{
							"id": 3823,
							"name": "onCopyCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1429,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCopyCapture"
							}
						},
						{
							"id": 3824,
							"name": "onCut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1430,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCut"
							}
						},
						{
							"id": 3825,
							"name": "onCutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1431,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCutCapture"
							}
						},
						{
							"id": 3826,
							"name": "onDoubleClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1534,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDoubleClick"
							}
						},
						{
							"id": 3827,
							"name": "onDoubleClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1535,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDoubleClickCapture"
							}
						},
						{
							"id": 3828,
							"name": "onDrag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1536,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDrag"
							}
						},
						{
							"id": 3829,
							"name": "onDragCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1537,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragCapture"
							}
						},
						{
							"id": 3830,
							"name": "onDragEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1538,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnd"
							}
						},
						{
							"id": 3831,
							"name": "onDragEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1539,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEndCapture"
							}
						},
						{
							"id": 3832,
							"name": "onDragEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1540,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnter"
							}
						},
						{
							"id": 3833,
							"name": "onDragEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1541,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnterCapture"
							}
						},
						{
							"id": 3834,
							"name": "onDragExit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1542,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragExit"
							}
						},
						{
							"id": 3835,
							"name": "onDragExitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1543,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragExitCapture"
							}
						},
						{
							"id": 3836,
							"name": "onDragLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1544,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragLeave"
							}
						},
						{
							"id": 3837,
							"name": "onDragLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1545,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragLeaveCapture"
							}
						},
						{
							"id": 3838,
							"name": "onDragOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1546,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragOver"
							}
						},
						{
							"id": 3839,
							"name": "onDragOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1547,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragOverCapture"
							}
						},
						{
							"id": 3840,
							"name": "onDragStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1548,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragStart"
							}
						},
						{
							"id": 3841,
							"name": "onDragStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1549,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragStartCapture"
							}
						},
						{
							"id": 3842,
							"name": "onDrop",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1550,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDrop"
							}
						},
						{
							"id": 3843,
							"name": "onDropCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1551,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDropCapture"
							}
						},
						{
							"id": 3844,
							"name": "onDurationChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1486,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDurationChange"
							}
						},
						{
							"id": 3845,
							"name": "onDurationChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1487,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDurationChangeCapture"
							}
						},
						{
							"id": 3846,
							"name": "onEmptied",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1488,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEmptied"
							}
						},
						{
							"id": 3847,
							"name": "onEmptiedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1489,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEmptiedCapture"
							}
						},
						{
							"id": 3848,
							"name": "onEncrypted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1490,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEncrypted"
							}
						},
						{
							"id": 3849,
							"name": "onEncryptedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1491,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEncryptedCapture"
							}
						},
						{
							"id": 3850,
							"name": "onEnded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1492,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEnded"
							}
						},
						{
							"id": 3851,
							"name": "onEndedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1493,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEndedCapture"
							}
						},
						{
							"id": 3852,
							"name": "onError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1466,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onError"
							}
						},
						{
							"id": 3853,
							"name": "onErrorCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1467,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onErrorCapture"
							}
						},
						{
							"id": 3854,
							"name": "onFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1444,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onFocus"
							}
						},
						{
							"id": 3855,
							"name": "onFocusCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1445,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onFocusCapture"
							}
						},
						{
							"id": 3856,
							"name": "onGotPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1596,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onGotPointerCapture"
							}
						},
						{
							"id": 3857,
							"name": "onGotPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1597,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onGotPointerCaptureCapture"
							}
						},
						{
							"id": 3858,
							"name": "onInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1454,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInput"
							}
						},
						{
							"id": 3859,
							"name": "onInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1455,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInputCapture"
							}
						},
						{
							"id": 3860,
							"name": "onInvalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1460,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInvalid"
							}
						},
						{
							"id": 3861,
							"name": "onInvalidCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1461,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInvalidCapture"
							}
						},
						{
							"id": 3862,
							"name": "onKeyDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1470,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyDown"
							}
						},
						{
							"id": 3863,
							"name": "onKeyDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1471,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyDownCapture"
							}
						},
						{
							"id": 3864,
							"name": "onKeyPress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1473,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyPress"
							}
						},
						{
							"id": 3865,
							"name": "onKeyPressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1475,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyPressCapture"
							}
						},
						{
							"id": 3866,
							"name": "onKeyUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1476,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyUp"
							}
						},
						{
							"id": 3867,
							"name": "onKeyUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1477,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyUpCapture"
							}
						},
						{
							"id": 3868,
							"name": "onLoad",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1464,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoad"
							}
						},
						{
							"id": 3869,
							"name": "onLoadCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1465,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadCapture"
							}
						},
						{
							"id": 3870,
							"name": "onLoadedData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1494,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedData"
							}
						},
						{
							"id": 3871,
							"name": "onLoadedDataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1495,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedDataCapture"
							}
						},
						{
							"id": 3872,
							"name": "onLoadedMetadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1496,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedMetadata"
							}
						},
						{
							"id": 3873,
							"name": "onLoadedMetadataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1497,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedMetadataCapture"
							}
						},
						{
							"id": 3874,
							"name": "onLoadStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1498,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadStart"
							}
						},
						{
							"id": 3875,
							"name": "onLoadStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1499,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadStartCapture"
							}
						},
						{
							"id": 3876,
							"name": "onLostPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1598,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLostPointerCapture"
							}
						},
						{
							"id": 3877,
							"name": "onLostPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1599,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLostPointerCaptureCapture"
							}
						},
						{
							"id": 3878,
							"name": "onMouseDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1552,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseDown"
							}
						},
						{
							"id": 3879,
							"name": "onMouseDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1553,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseDownCapture"
							}
						},
						{
							"id": 3880,
							"name": "onMouseEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1554,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseEnter"
							}
						},
						{
							"id": 3881,
							"name": "onMouseLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1555,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseLeave"
							}
						},
						{
							"id": 3882,
							"name": "onMouseMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1556,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseMove"
							}
						},
						{
							"id": 3883,
							"name": "onMouseMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1557,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseMoveCapture"
							}
						},
						{
							"id": 3884,
							"name": "onMouseOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1558,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOut"
							}
						},
						{
							"id": 3885,
							"name": "onMouseOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1559,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOutCapture"
							}
						},
						{
							"id": 3886,
							"name": "onMouseOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1560,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOver"
							}
						},
						{
							"id": 3887,
							"name": "onMouseOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1561,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOverCapture"
							}
						},
						{
							"id": 3888,
							"name": "onMouseUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1562,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseUp"
							}
						},
						{
							"id": 3889,
							"name": "onMouseUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1563,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseUpCapture"
							}
						},
						{
							"id": 3890,
							"name": "onPaste",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1432,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPaste"
							}
						},
						{
							"id": 3891,
							"name": "onPasteCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1433,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPasteCapture"
							}
						},
						{
							"id": 3892,
							"name": "onPause",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1500,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPause"
							}
						},
						{
							"id": 3893,
							"name": "onPauseCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1501,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPauseCapture"
							}
						},
						{
							"id": 3894,
							"name": "onPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1502,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlay"
							}
						},
						{
							"id": 3895,
							"name": "onPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1503,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlayCapture"
							}
						},
						{
							"id": 3896,
							"name": "onPlaying",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1504,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlaying"
							}
						},
						{
							"id": 3897,
							"name": "onPlayingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1505,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlayingCapture"
							}
						},
						{
							"id": 3898,
							"name": "onPointerCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1586,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerCancel"
							}
						},
						{
							"id": 3899,
							"name": "onPointerCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1587,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerCancelCapture"
							}
						},
						{
							"id": 3900,
							"name": "onPointerDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1580,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerDown"
							}
						},
						{
							"id": 3901,
							"name": "onPointerDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1581,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerDownCapture"
							}
						},
						{
							"id": 3902,
							"name": "onPointerEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1588,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerEnter"
							}
						},
						{
							"id": 3903,
							"name": "onPointerEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1589,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerEnterCapture"
							}
						},
						{
							"id": 3904,
							"name": "onPointerLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1590,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerLeave"
							}
						},
						{
							"id": 3905,
							"name": "onPointerLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1591,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerLeaveCapture"
							}
						},
						{
							"id": 3906,
							"name": "onPointerMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1582,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerMove"
							}
						},
						{
							"id": 3907,
							"name": "onPointerMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1583,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerMoveCapture"
							}
						},
						{
							"id": 3908,
							"name": "onPointerOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1594,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOut"
							}
						},
						{
							"id": 3909,
							"name": "onPointerOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1595,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOutCapture"
							}
						},
						{
							"id": 3910,
							"name": "onPointerOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1592,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOver"
							}
						},
						{
							"id": 3911,
							"name": "onPointerOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1593,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOverCapture"
							}
						},
						{
							"id": 3912,
							"name": "onPointerUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1584,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerUp"
							}
						},
						{
							"id": 3913,
							"name": "onPointerUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1585,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerUpCapture"
							}
						},
						{
							"id": 3914,
							"name": "onProgress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1506,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onProgress"
							}
						},
						{
							"id": 3915,
							"name": "onProgressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1507,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onProgressCapture"
							}
						},
						{
							"id": 3916,
							"name": "onRateChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1508,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onRateChange"
							}
						},
						{
							"id": 3917,
							"name": "onRateChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1509,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onRateChangeCapture"
							}
						},
						{
							"id": 3918,
							"name": "onReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1456,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onReset"
							}
						},
						{
							"id": 3919,
							"name": "onResetCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1457,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResetCapture"
							}
						},
						{
							"id": 3920,
							"name": "onResize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1510,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResize"
							}
						},
						{
							"id": 3921,
							"name": "onResizeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1511,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResizeCapture"
							}
						},
						{
							"id": 3922,
							"name": "onScroll",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1602,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onScroll"
							}
						},
						{
							"id": 3923,
							"name": "onScrollCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1603,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onScrollCapture"
							}
						},
						{
							"id": 3924,
							"name": "onSeeked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1512,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeeked"
							}
						},
						{
							"id": 3925,
							"name": "onSeekedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1513,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeekedCapture"
							}
						},
						{
							"id": 3926,
							"name": "onSeeking",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1514,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeeking"
							}
						},
						{
							"id": 3927,
							"name": "onSeekingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1515,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeekingCapture"
							}
						},
						{
							"id": 3928,
							"name": "onSelect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1566,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSelect"
							}
						},
						{
							"id": 3929,
							"name": "onSelectCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1567,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSelectCapture"
							}
						},
						{
							"id": 3930,
							"name": "onStalled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1516,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onStalled"
							}
						},
						{
							"id": 3931,
							"name": "onStalledCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1517,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onStalledCapture"
							}
						},
						{
							"id": 3932,
							"name": "onSubmit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1458,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSubmit"
							}
						},
						{
							"id": 3933,
							"name": "onSubmitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1459,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSubmitCapture"
							}
						},
						{
							"id": 3934,
							"name": "onSuspend",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1518,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSuspend"
							}
						},
						{
							"id": 3935,
							"name": "onSuspendCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1519,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSuspendCapture"
							}
						},
						{
							"id": 3936,
							"name": "onTimeUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1520,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTimeUpdate"
							}
						},
						{
							"id": 3937,
							"name": "onTimeUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1521,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTimeUpdateCapture"
							}
						},
						{
							"id": 3938,
							"name": "onTouchCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1570,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchCancel"
							}
						},
						{
							"id": 3939,
							"name": "onTouchCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1571,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchCancelCapture"
							}
						},
						{
							"id": 3940,
							"name": "onTouchEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1572,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchEnd"
							}
						},
						{
							"id": 3941,
							"name": "onTouchEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1573,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchEndCapture"
							}
						},
						{
							"id": 3942,
							"name": "onTouchMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1574,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchMove"
							}
						},
						{
							"id": 3943,
							"name": "onTouchMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1575,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchMoveCapture"
							}
						},
						{
							"id": 3944,
							"name": "onTouchStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1576,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchStart"
							}
						},
						{
							"id": 3945,
							"name": "onTouchStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1577,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchStartCapture"
							}
						},
						{
							"id": 3946,
							"name": "onTransitionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1618,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTransitionEnd"
							}
						},
						{
							"id": 3947,
							"name": "onTransitionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1619,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTransitionEndCapture"
							}
						},
						{
							"id": 3948,
							"name": "onVolumeChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1522,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onVolumeChange"
							}
						},
						{
							"id": 3949,
							"name": "onVolumeChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1523,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onVolumeChangeCapture"
							}
						},
						{
							"id": 3950,
							"name": "onWaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1524,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWaiting"
							}
						},
						{
							"id": 3951,
							"name": "onWaitingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1525,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWaitingCapture"
							}
						},
						{
							"id": 3952,
							"name": "onWheel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1606,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWheel"
							}
						},
						{
							"id": 3953,
							"name": "onWheelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1607,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWheelCapture"
							}
						},
						{
							"id": 3954,
							"name": "ping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2134,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.ping"
							}
						},
						{
							"id": 3955,
							"name": "placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1938,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.placeholder"
							}
						},
						{
							"id": 3956,
							"name": "prefetch",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the data and module prefetching behavior for the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link /> // default\n<Link prefetch=\"none\" />\n<Link prefetch=\"intent\" />\n<Link prefetch=\"render\" />\n<Link prefetch=\"viewport\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n- **none** - default, no prefetching\n- **intent** - prefetches when the user hovers or focuses the link\n- **render** - prefetches when the link renders\n- **viewport** - prefetches when the link is in the viewport, very useful for mobile\n\nPrefetching is done with HTML "
									},
									{
										"kind": "code",
										"text": "`<link rel=\"prefetch\">`"
									},
									{
										"kind": "text",
										"text": " tags. They are inserted after the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<a href=\"...\" />\n<a href=\"...\" />\n<link rel=\"prefetch\" /> // might conditionally render\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause of this, if you are using "
									},
									{
										"kind": "code",
										"text": "`nav :last-child`"
									},
									{
										"kind": "text",
										"text": " you will need to use "
									},
									{
										"kind": "code",
										"text": "`nav :last-of-type`"
									},
									{
										"kind": "text",
										"text": " so the styles don't conditionally fall off your last link (and any other similar selectors)."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 430,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L430"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"qualifiedName": "PrefetchBehavior"
								},
								"name": "PrefetchBehavior",
								"package": "react-router"
							}
						},
						{
							"id": 3957,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1957,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.prefix"
							}
						},
						{
							"id": 3958,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prevents the scroll position from being reset to the top of the window when the link is clicked and the app is using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ScrollRestoration",
										"target": 5078
									},
									{
										"kind": "text",
										"text": ". This only prevents new locations reseting scroll to the top, scroll position will be restored for back/forward button navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"?tab=one\" preventScrollReset />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 488,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L488"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3959,
							"name": "property",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1958,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.property"
							}
						},
						{
							"id": 3960,
							"name": "radioGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1947,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.radioGroup"
							}
						},
						{
							"id": 3961,
							"name": "referrerPolicy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2137,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.HTMLAttributeReferrerPolicy"
								},
								"name": "HTMLAttributeReferrerPolicy",
								"package": "@types/react",
								"qualifiedName": "React.HTMLAttributeReferrerPolicy"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.referrerPolicy"
							}
						},
						{
							"id": 3962,
							"name": "rel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1959,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rel"
							}
						},
						{
							"id": 3963,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the relative path behavior for the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"..\" /> // default: \"route\"\n<Link relative=\"route\" />\n<Link relative=\"path\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nConsider a route hierarchy where a parent route pattern is \"blog\" and a child route pattern is \"blog/:slug/edit\".\n\n- **route** - default, resolves the link relative to the route pattern. In the example above a relative link of "
									},
									{
										"kind": "code",
										"text": "`\"..\"`"
									},
									{
										"kind": "text",
										"text": " will remove both "
									},
									{
										"kind": "code",
										"text": "`:slug/edit`"
									},
									{
										"kind": "text",
										"text": " segments back to \"/blog\".\n- **path** - relative to the path so "
									},
									{
										"kind": "code",
										"text": "`..`"
									},
									{
										"kind": "text",
										"text": " will only remove one URL segment up to \"/blog/:slug\""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 504,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L504"
								}
							],
							"type": {
								"type": "reference",
								"target": 4841,
								"name": "RelativeRoutingType",
								"package": "react-router"
							}
						},
						{
							"id": 3964,
							"name": "reloadDocument",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Will use document navigation instead of client side routing when the link is clicked: the browser will handle the transition normally (as if it were an "
									},
									{
										"kind": "code",
										"text": "`<a href>`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/logout\" reloadDocument />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 439,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L439"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3965,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current entry in the history stack instead of pushing a new one onto it.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link replace />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```\n# with a history stack like this\nA -> B\n\n# normal link click pushes a new entry\nA -> B -> C\n\n# but with `replace`, B is replaced by C\nA -> C\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 459,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L459"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3966,
							"name": "resource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1960,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.resource"
							}
						},
						{
							"id": 3967,
							"name": "results",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1975,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.results"
							}
						},
						{
							"id": 3968,
							"name": "rev",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1961,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rev"
							}
						},
						{
							"id": 3969,
							"name": "role",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1950,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AriaRole"
								},
								"name": "AriaRole",
								"package": "@types/react",
								"qualifiedName": "React.AriaRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.role"
							}
						},
						{
							"id": 3970,
							"name": "security",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1976,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.security"
							}
						},
						{
							"id": 3971,
							"name": "slot",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1939,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.slot"
							}
						},
						{
							"id": 3972,
							"name": "spellCheck",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1940,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.spellCheck"
							}
						},
						{
							"id": 3973,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds persistent client side routing state to the next location.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/somewhere/else\" state={{ some: \"value\" }} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe location state is accessed from the "
									},
									{
										"kind": "code",
										"text": "`location`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction SomeComp() {\n  const location = useLocation()\n  location.state; // { some: \"value\" }\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThis state is inaccessible on the server as it is implemented on top of ["
									},
									{
										"kind": "code",
										"text": "`history.state`"
									},
									{
										"kind": "text",
										"text": "](https://developer.mozilla.org/en-US/docs/Web/API/History/state)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 479,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L479"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3974,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1941,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "CSSProperties",
								"package": "@types/react",
								"qualifiedName": "React.CSSProperties"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.style"
							}
						},
						{
							"id": 3975,
							"name": "suppressContentEditableWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1923,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.suppressContentEditableWarning"
							}
						},
						{
							"id": 3976,
							"name": "suppressHydrationWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1924,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.suppressHydrationWarning"
							}
						},
						{
							"id": 3977,
							"name": "tabIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1942,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.tabIndex"
							}
						},
						{
							"id": 3978,
							"name": "target",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2135,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.HTMLAttributeAnchorTarget"
								},
								"name": "HTMLAttributeAnchorTarget",
								"package": "@types/react",
								"qualifiedName": "React.HTMLAttributeAnchorTarget"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.target"
							}
						},
						{
							"id": 3979,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1943,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.title"
							}
						},
						{
							"id": 3980,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Can be a string or a partial "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Path",
										"target": 4387
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/some/path\" />\n\n<Link\n  to={{\n    pathname: \"/some/path\",\n    search: \"?query=string\",\n    hash: \"#hash\",\n  }}\n/>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 521,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L521"
								}
							],
							"type": {
								"type": "reference",
								"target": 4866,
								"name": "To",
								"package": "react-router"
							}
						},
						{
							"id": 3981,
							"name": "translate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1944,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "yes"
									},
									{
										"type": "literal",
										"value": "no"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.translate"
							}
						},
						{
							"id": 3982,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2136,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.type"
							}
						},
						{
							"id": 3983,
							"name": "typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1962,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.typeof"
							}
						},
						{
							"id": 3984,
							"name": "unselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1977,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "on"
									},
									{
										"type": "literal",
										"value": "off"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.unselectable"
							}
						},
						{
							"id": 3985,
							"name": "viewTransition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables a [View Transition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API) for this navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\n<Link to={to} viewTransition>\n  Click me\n</Link>\n```"
									},
									{
										"kind": "text",
										"text": "\n\nTo apply specific styles for the transition, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useViewTransitionState",
										"target": 5279
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 534,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L534"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3986,
							"name": "vocab",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1963,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.vocab"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3703,
								3704,
								3705,
								3706,
								3707,
								3708,
								3709,
								3710,
								3711,
								3712,
								3713,
								3714,
								3715,
								3716,
								3717,
								3718,
								3719,
								3720,
								3721,
								3722,
								3723,
								3724,
								3725,
								3726,
								3727,
								3728,
								3729,
								3730,
								3731,
								3732,
								3733,
								3734,
								3735,
								3736,
								3737,
								3738,
								3739,
								3740,
								3741,
								3742,
								3743,
								3744,
								3745,
								3746,
								3747,
								3748,
								3749,
								3750,
								3751,
								3752,
								3753,
								3754,
								3755,
								3756,
								3757,
								3758,
								3759,
								3760,
								3761,
								3762,
								3763,
								3764,
								3765,
								3766,
								3767,
								3768,
								3771,
								3772,
								3773,
								3774,
								3775,
								3776,
								3777,
								3778,
								3779,
								3780,
								3781,
								3782,
								3783,
								3784,
								3785,
								3786,
								3787,
								3788,
								3789,
								3790,
								3791,
								3792,
								3793,
								3794,
								3795,
								3796,
								3797,
								3798,
								3799,
								3800,
								3801,
								3802,
								3803,
								3804,
								3805,
								3806,
								3807,
								3808,
								3809,
								3810,
								3811,
								3812,
								3813,
								3814,
								3815,
								3816,
								3817,
								3818,
								3819,
								3820,
								3821,
								3822,
								3823,
								3824,
								3825,
								3826,
								3827,
								3828,
								3829,
								3830,
								3831,
								3832,
								3833,
								3834,
								3835,
								3836,
								3837,
								3838,
								3839,
								3840,
								3841,
								3842,
								3843,
								3844,
								3845,
								3846,
								3847,
								3848,
								3849,
								3850,
								3851,
								3852,
								3853,
								3854,
								3855,
								3856,
								3857,
								3858,
								3859,
								3860,
								3861,
								3862,
								3863,
								3864,
								3865,
								3866,
								3867,
								3868,
								3869,
								3870,
								3871,
								3872,
								3873,
								3874,
								3875,
								3876,
								3877,
								3878,
								3879,
								3880,
								3881,
								3882,
								3883,
								3884,
								3885,
								3886,
								3887,
								3888,
								3889,
								3890,
								3891,
								3892,
								3893,
								3894,
								3895,
								3896,
								3897,
								3898,
								3899,
								3900,
								3901,
								3902,
								3903,
								3904,
								3905,
								3906,
								3907,
								3908,
								3909,
								3910,
								3911,
								3912,
								3913,
								3914,
								3915,
								3916,
								3917,
								3918,
								3919,
								3920,
								3921,
								3922,
								3923,
								3924,
								3925,
								3926,
								3927,
								3928,
								3929,
								3930,
								3931,
								3932,
								3933,
								3934,
								3935,
								3936,
								3937,
								3938,
								3939,
								3940,
								3941,
								3942,
								3943,
								3944,
								3945,
								3946,
								3947,
								3948,
								3949,
								3950,
								3951,
								3952,
								3953,
								3954,
								3955,
								3956,
								3957,
								3958,
								3959,
								3960,
								3961,
								3962,
								3963,
								3964,
								3965,
								3966,
								3967,
								3968,
								3969,
								3970,
								3971,
								3972,
								3973,
								3974,
								3975,
								3976,
								3977,
								3978,
								3979,
								3980,
								3981,
								3982,
								3983,
								3984,
								3985,
								3986
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 388,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L388"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
										"qualifiedName": "React.AnchorHTMLAttributes"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
												"qualifiedName": "HTMLAnchorElement"
											},
											"name": "HTMLAnchorElement",
											"package": "typescript"
										}
									],
									"name": "React.AnchorHTMLAttributes",
									"package": "@types/react"
								},
								{
									"type": "literal",
									"value": "href"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 3987,
					"name": "LinksFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that defines "
							},
							{
								"kind": "code",
								"text": "`<link>`"
							},
							{
								"kind": "text",
								"text": " tags to be inserted into the "
							},
							{
								"kind": "code",
								"text": "`<head>`"
							},
							{
								"kind": "text",
								"text": " of\nthe document on route transitions."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://remix.run/route/meta"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 93,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L93"
						}
					],
					"signatures": [
						{
							"id": 3988,
							"name": "LinksFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 94,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L94"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4757,
									"name": "LinkDescriptor",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 3989,
					"name": "LoaderFunctionArgs",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Arguments passed to loader functions"
							}
						]
					},
					"children": [
						{
							"id": 3990,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L121"
								}
							],
							"type": {
								"type": "reference",
								"target": 3993,
								"name": "Context",
								"package": "react-router",
								"qualifiedName": "LoaderFunctionArgs.Context",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.context"
							}
						},
						{
							"id": 3991,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 120,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L120"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.params"
							}
						},
						{
							"id": 3992,
							"name": "request",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L119"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Request"
								},
								"name": "Request",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.request"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3990,
								3991,
								3992
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 127,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L127"
						}
					],
					"typeParameters": [
						{
							"id": 3993,
							"name": "Context",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "DataFunctionArgs"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 3993,
									"name": "Context",
									"package": "react-router",
									"qualifiedName": "LoaderFunctionArgs.Context",
									"refersToTypeParameter": true
								}
							],
							"name": "DataFunctionArgs",
							"package": "react-router"
						}
					]
				},
				{
					"id": 3994,
					"name": "Location",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An entry in a history stack. A location contains information about the\nURL path, as well as possibly some arbitrary state and a key."
							}
						]
					},
					"children": [
						{
							"id": 3995,
							"name": "hash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL fragment identifier, beginning with a #."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4388,
								"name": "Path.hash"
							}
						},
						{
							"id": 3996,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique string associated with this location. May be used to safely store\nand retrieve data in some other storage API, like "
									},
									{
										"kind": "code",
										"text": "`localStorage`"
									},
									{
										"kind": "text",
										"text": ".\n\nNote: This value is always \"default\" on the initial location."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L71"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3997,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL pathname, beginning with a /."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4389,
								"name": "Path.pathname"
							}
						},
						{
							"id": 3998,
							"name": "search",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL search string, beginning with a ?."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4390,
								"name": "Path.search"
							}
						},
						{
							"id": 3999,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A value of arbitrary data associated with this location."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L63"
								}
							],
							"type": {
								"type": "reference",
								"target": 4000,
								"name": "State",
								"package": "react-router",
								"qualifiedName": "Location.State",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3995,
								3996,
								3997,
								3998,
								3999
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 59,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L59"
						}
					],
					"typeParameters": [
						{
							"id": 4000,
							"name": "State",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 4387,
							"name": "Path",
							"package": "react-router"
						}
					]
				},
				{
					"id": 4001,
					"name": "MemoryRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4002,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 464,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L464"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4003,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 465,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L465"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4004,
							"name": "initialEntries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 466,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L466"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4748,
									"name": "InitialEntry",
									"package": "react-router"
								}
							}
						},
						{
							"id": 4005,
							"name": "initialIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 467,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L467"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4002,
								4003,
								4004,
								4005
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 463,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L463"
						}
					]
				},
				{
					"id": 4006,
					"name": "MetaArgs",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4007,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 133,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L133"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 4012,
											"name": "Loader",
											"package": "react-router",
											"qualifiedName": "MetaArgs.Loader",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 4758,
													"name": "LoaderFunction",
													"package": "react-router"
												},
												{
													"type": "reference",
													"target": 4689,
													"name": "ClientLoaderFunction",
													"package": "react-router"
												}
											]
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router/lib/types/route-data.ts",
												"qualifiedName": "SerializeFrom"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 4012,
													"typeArguments": [
														{
															"type": "reference",
															"target": 4012,
															"name": "Loader",
															"package": "react-router",
															"qualifiedName": "MetaArgs.Loader",
															"refersToTypeParameter": true
														}
													],
													"name": "Loader",
													"package": "react-router",
													"qualifiedName": "MetaArgs.Loader",
													"refersToTypeParameter": true
												}
											],
											"name": "SerializeFrom",
											"package": "react-router"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								]
							}
						},
						{
							"id": 4008,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 141,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L141"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 4009,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 139,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L139"
								}
							],
							"type": {
								"type": "reference",
								"target": 3994,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Location",
								"package": "react-router"
							}
						},
						{
							"id": 4010,
							"name": "matches",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 140,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L140"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"qualifiedName": "MetaMatches"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4013,
										"name": "MatchLoaders",
										"package": "react-router",
										"qualifiedName": "MetaArgs.MatchLoaders",
										"refersToTypeParameter": true
									}
								],
								"name": "MetaMatches",
								"package": "react-router"
							}
						},
						{
							"id": 4011,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 138,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L138"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"name": "Params",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4007,
								4008,
								4009,
								4010,
								4011
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 126,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L126"
						}
					],
					"typeParameters": [
						{
							"id": 4012,
							"name": "Loader",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 4758,
										"name": "LoaderFunction",
										"package": "react-router"
									},
									{
										"type": "reference",
										"target": 4689,
										"name": "ClientLoaderFunction",
										"package": "react-router"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 4013,
							"name": "MatchLoaders",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 4758,
												"name": "LoaderFunction",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": 4689,
												"name": "ClientLoaderFunction",
												"package": "react-router"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4014,
					"name": "MetaFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that returns an array of data objects to use for rendering\nmetadata HTML tags in a route. These tags are not rendered on descendant\nroutes in the route hierarchy. In other words, they will only be rendered on\nthe route in which they are exported."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 194,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L194"
						}
					],
					"typeParameters": [
						{
							"id": 4015,
							"name": "Loader",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the current route's loader function"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 4758,
										"name": "LoaderFunction",
										"package": "react-router"
									},
									{
										"type": "reference",
										"target": 4689,
										"name": "ClientLoaderFunction",
										"package": "react-router"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 4016,
							"name": "MatchLoaders",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mapping from a parent route's filepath to its loader\nfunction type\n\nNote that parent route filepaths are relative to the "
									},
									{
										"kind": "code",
										"text": "`app/`"
									},
									{
										"kind": "text",
										"text": " directory.\n\nFor example, if this meta function is for "
									},
									{
										"kind": "code",
										"text": "`/sales/customers/$customerId`"
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\n// app/root.tsx\nconst loader = () => ({ hello: \"world\" })\nexport type Loader = typeof loader\n\n// app/routes/sales.tsx\nconst loader = () => ({ salesCount: 1074 })\nexport type Loader = typeof loader\n\n// app/routes/sales/customers.tsx\nconst loader = () => ({ customerCount: 74 })\nexport type Loader = typeof loader\n\n// app/routes/sales/customers/$customersId.tsx\nimport type { Loader as RootLoader } from \"../../../root\"\nimport type { Loader as SalesLoader } from \"../../sales\"\nimport type { Loader as CustomersLoader } from \"../../sales/customers\"\n\nconst loader = () => ({ name: \"Customer name\" })\n\nconst meta: MetaFunction<typeof loader, {\n \"root\": RootLoader,\n \"routes/sales\": SalesLoader,\n \"routes/sales/customers\": CustomersLoader,\n}> = ({ data, matches }) => {\n  const { name } = data\n  //      ^? string\n  const { customerCount } = matches.find((match) => match.id === \"routes/sales/customers\").data\n  //      ^? number\n  const { salesCount } = matches.find((match) => match.id === \"routes/sales\").data\n  //      ^? number\n  const { hello } = matches.find((match) => match.id === \"root\").data\n  //      ^? \"world\"\n}\n```"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 4758,
												"name": "LoaderFunction",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": 4689,
												"name": "ClientLoaderFunction",
												"package": "react-router"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"signatures": [
						{
							"id": 4017,
							"name": "MetaFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 201,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L201"
								}
							],
							"parameters": [
								{
									"id": 4018,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4006,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4015,
												"name": "Loader",
												"package": "react-router",
												"qualifiedName": "MetaFunction.Loader",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 4016,
												"name": "MatchLoaders",
												"package": "react-router",
												"qualifiedName": "MetaFunction.MatchLoaders",
												"refersToTypeParameter": true
											}
										],
										"name": "MetaArgs",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4766,
											"name": "MetaDescriptor",
											"package": "react-router"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 4019,
					"name": "NavigateFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interface for the navigate() function returned from useNavigate()."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 181,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L181"
						}
					],
					"signatures": [
						{
							"id": 4020,
							"name": "NavigateFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 182,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L182"
								}
							],
							"parameters": [
								{
									"id": 4021,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4866,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 4022,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 4025,
										"name": "NavigateOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4023,
							"name": "NavigateFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 183,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L183"
								}
							],
							"parameters": [
								{
									"id": 4024,
									"name": "delta",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 4025,
					"name": "NavigateOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4026,
							"name": "flushSync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps the initial state update for this navigation in a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ReactDOM.flushSync",
										"target": "https://react.dev/reference/react-dom/flushSync"
									},
									{
										"kind": "text",
										"text": " call instead of the default "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "React.startTransition",
										"target": "https://react.dev/reference/react/startTransition"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 140,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L140"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4027,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If you are using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "<ScrollRestoration>",
										"target": "https://api.reactrouter.com/v7/functions/react_router.ScrollRestoration.html"
									},
									{
										"kind": "text",
										"text": ", prevent the scroll position from being reset to the top of the window when navigating"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L136"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4028,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the relative path behavior for the link. \"route\" will use the route hierarchy so \"..\" will remove all URL segments of the current route pattern while \"path\" will use the URL path so \"..\" will remove one URL segment."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 138,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L138"
								}
							],
							"type": {
								"type": "reference",
								"target": 4841,
								"name": "RelativeRoutingType",
								"package": "react-router"
							}
						},
						{
							"id": 4029,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replace the current entry in the history stack instead of pushing a new one"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 132,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L132"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4030,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds persistent client side routing state to the next location"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 134,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L134"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4031,
							"name": "viewTransition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View Transition",
										"target": "https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API"
									},
									{
										"kind": "text",
										"text": " for this navigation by wrapping the final state update in "
									},
									{
										"kind": "code",
										"text": "`document.startViewTransition()`"
									},
									{
										"kind": "text",
										"text": ". If you need to apply specific styles for this view transition, you will also need to leverage the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useViewTransitionState()",
										"target": "https://api.reactrouter.com/v7/functions/react_router.useViewTransitionState.html"
									},
									{
										"kind": "text",
										"text": " hook."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 142,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L142"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4026,
								4027,
								4028,
								4029,
								4030,
								4031
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 130,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L130"
						}
					]
				},
				{
					"id": 4032,
					"name": "NavigateProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4033,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 522,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L522"
								}
							],
							"type": {
								"type": "reference",
								"target": 4841,
								"name": "RelativeRoutingType",
								"package": "react-router"
							}
						},
						{
							"id": 4034,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 520,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L520"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4035,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 521,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L521"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4036,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 519,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L519"
								}
							],
							"type": {
								"type": "reference",
								"target": 4866,
								"name": "To",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4033,
								4034,
								4035,
								4036
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 518,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L518"
						}
					]
				},
				{
					"id": 4037,
					"name": "Navigator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A Navigator is a \"location changer\"; it's how you get to different locations.\n\nEvery history instance conforms to the Navigator interface, but the\ndistinction is useful primarily when it comes to the low-level "
							},
							{
								"kind": "code",
								"text": "`<Router>`"
							},
							{
								"kind": "text",
								"text": " API\nwhere both the location and a navigator must be provided separately in order\nto avoid \"tearing\" that may occur in a suspense-enabled app if the action\nand/or location were to be read directly from the history instance."
							}
						]
					},
					"children": [
						{
							"id": 4038,
							"name": "createHref",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 155,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L155"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4039,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/history.ts",
											"line": 133,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L133"
										}
									],
									"signatures": [
										{
											"id": 4040,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns a valid href for the given "
													},
													{
														"kind": "code",
														"text": "`to`"
													},
													{
														"kind": "text",
														"text": " value that may be used as\nthe value of an <a href> attribute."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/history.ts",
													"line": 133,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L133"
												}
											],
											"parameters": [
												{
													"id": 4041,
													"name": "to",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The destination URL"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 4866,
														"name": "To",
														"package": "react-router"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 4042,
							"name": "encodeLocation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 157,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L157"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4043,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/history.ts",
											"line": 149,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L149"
										}
									],
									"signatures": [
										{
											"id": 4044,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Encode a location the same way window.history would do (no-op for memory\nhistory) so we ensure our PUSH/REPLACE navigations for data routers\nbehave the same as POP"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/history.ts",
													"line": 149,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L149"
												}
											],
											"parameters": [
												{
													"id": 4045,
													"name": "to",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Unencoded path"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 4866,
														"name": "To",
														"package": "react-router"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 4387,
												"name": "Path",
												"package": "react-router"
											}
										}
									]
								}
							}
						},
						{
							"id": 4046,
							"name": "go",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 158,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L158"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4047,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/history.ts",
											"line": 176,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L176"
										}
									],
									"signatures": [
										{
											"id": 4048,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Navigates "
													},
													{
														"kind": "code",
														"text": "`n`"
													},
													{
														"kind": "text",
														"text": " entries backward/forward in the history stack relative to the\ncurrent index. For example, a \"back\" navigation would use go(-1)."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/history.ts",
													"line": 176,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L176"
												}
											],
											"parameters": [
												{
													"id": 4049,
													"name": "delta",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The delta in the stack index"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4050,
							"name": "push",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L159"
								}
							],
							"signatures": [
								{
									"id": 4051,
									"name": "push",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/context.ts",
											"line": 159,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L159"
										}
									],
									"parameters": [
										{
											"id": 4052,
											"name": "to",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4866,
												"name": "To",
												"package": "react-router"
											}
										},
										{
											"id": 4053,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4054,
											"name": "opts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4025,
												"name": "NavigateOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 4055,
							"name": "replace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 160,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L160"
								}
							],
							"signatures": [
								{
									"id": 4056,
									"name": "replace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/context.ts",
											"line": 160,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L160"
										}
									],
									"parameters": [
										{
											"id": 4057,
											"name": "to",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4866,
												"name": "To",
												"package": "react-router"
											}
										},
										{
											"id": 4058,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4059,
											"name": "opts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4025,
												"name": "NavigateOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4038,
								4042,
								4046
							]
						},
						{
							"title": "Methods",
							"children": [
								4050,
								4055
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 154,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L154"
						}
					]
				},
				{
					"id": 4060,
					"name": "NavLinkProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4061,
							"name": "about",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1953,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.about"
							}
						},
						{
							"id": 4062,
							"name": "accessKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1927,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.accessKey"
							}
						},
						{
							"id": 4063,
							"name": "aria-activedescendant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1636,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-activedescendant"
							}
						},
						{
							"id": 4064,
							"name": "aria-atomic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1638,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-atomic"
							}
						},
						{
							"id": 4065,
							"name": "aria-autocomplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1643,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "list"
									},
									{
										"type": "literal",
										"value": "inline"
									},
									{
										"type": "literal",
										"value": "both"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-autocomplete"
							}
						},
						{
							"id": 4066,
							"name": "aria-braillelabel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-label."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1649,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-braillelabel"
							}
						},
						{
							"id": 4067,
							"name": "aria-brailleroledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-roledescription."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1654,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-brailleroledescription"
							}
						},
						{
							"id": 4068,
							"name": "aria-busy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1655,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-busy"
							}
						},
						{
							"id": 4069,
							"name": "aria-checked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1660,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-checked"
							}
						},
						{
							"id": 4070,
							"name": "aria-colcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of columns in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1665,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colcount"
							}
						},
						{
							"id": 4071,
							"name": "aria-colindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1670,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colindex"
							}
						},
						{
							"id": 4072,
							"name": "aria-colindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-colindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1675,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colindextext"
							}
						},
						{
							"id": 4073,
							"name": "aria-colspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1680,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colspan"
							}
						},
						{
							"id": 4074,
							"name": "aria-controls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-owns."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1685,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-controls"
							}
						},
						{
							"id": 4075,
							"name": "aria-current",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the element that represents the current item within a container or set of related elements."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1687,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "time"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "location"
									},
									{
										"type": "literal",
										"value": "page"
									},
									{
										"type": "literal",
										"value": "step"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-current"
							}
						},
						{
							"id": 4076,
							"name": "aria-describedby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that describes the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1692,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-describedby"
							}
						},
						{
							"id": 4077,
							"name": "aria-description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that describes or annotates the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "related aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1697,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-description"
							}
						},
						{
							"id": 4078,
							"name": "aria-details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides a detailed, extended description for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1702,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-details"
							}
						},
						{
							"id": 4079,
							"name": "aria-disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-hidden"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-readonly."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1707,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-disabled"
							}
						},
						{
							"id": 4080,
							"name": "aria-dropeffect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1712,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "link"
									},
									{
										"type": "literal",
										"value": "copy"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "execute"
									},
									{
										"type": "literal",
										"value": "move"
									},
									{
										"type": "literal",
										"value": "popup"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-dropeffect"
							}
						},
						{
							"id": 4081,
							"name": "aria-errormessage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides an error message for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-invalid"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-describedby."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1717,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-errormessage"
							}
						},
						{
							"id": 4082,
							"name": "aria-expanded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1719,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-expanded"
							}
						},
						{
							"id": 4083,
							"name": "aria-flowto",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1724,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-flowto"
							}
						},
						{
							"id": 4084,
							"name": "aria-grabbed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1729,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-grabbed"
							}
						},
						{
							"id": 4085,
							"name": "aria-haspopup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1731,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "dialog"
									},
									{
										"type": "literal",
										"value": "menu"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grid"
									},
									{
										"type": "literal",
										"value": "listbox"
									},
									{
										"type": "literal",
										"value": "tree"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-haspopup"
							}
						},
						{
							"id": 4086,
							"name": "aria-hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element is exposed to an accessibility API."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1736,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-hidden"
							}
						},
						{
							"id": 4087,
							"name": "aria-invalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the entered value does not conform to the format expected by the application."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-errormessage."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1741,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grammar"
									},
									{
										"type": "literal",
										"value": "spelling"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-invalid"
							}
						},
						{
							"id": 4088,
							"name": "aria-keyshortcuts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1743,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-keyshortcuts"
							}
						},
						{
							"id": 4089,
							"name": "aria-label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1748,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-label"
							}
						},
						{
							"id": 4090,
							"name": "aria-labelledby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1753,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-labelledby"
							}
						},
						{
							"id": 4091,
							"name": "aria-level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the hierarchical level of an element within a structure."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1755,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-level"
							}
						},
						{
							"id": 4092,
							"name": "aria-live",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1757,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "off"
									},
									{
										"type": "literal",
										"value": "assertive"
									},
									{
										"type": "literal",
										"value": "polite"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-live"
							}
						},
						{
							"id": 4093,
							"name": "aria-modal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether an element is modal when displayed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1759,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-modal"
							}
						},
						{
							"id": 4094,
							"name": "aria-multiline",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1761,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-multiline"
							}
						},
						{
							"id": 4095,
							"name": "aria-multiselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the user may select more than one item from the current selectable descendants."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1763,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-multiselectable"
							}
						},
						{
							"id": 4096,
							"name": "aria-orientation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1765,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "horizontal"
									},
									{
										"type": "literal",
										"value": "vertical"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-orientation"
							}
						},
						{
							"id": 4097,
							"name": "aria-owns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-controls."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1771,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-owns"
							}
						},
						{
							"id": 4098,
							"name": "aria-placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1776,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-placeholder"
							}
						},
						{
							"id": 4099,
							"name": "aria-posinset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-setsize."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1781,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-posinset"
							}
						},
						{
							"id": 4100,
							"name": "aria-pressed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"pressed\" state of toggle buttons."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1786,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-pressed"
							}
						},
						{
							"id": 4101,
							"name": "aria-readonly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is not editable, but is otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1791,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-readonly"
							}
						},
						{
							"id": 4102,
							"name": "aria-relevant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-atomic."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1796,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "additions"
									},
									{
										"type": "literal",
										"value": "additions removals"
									},
									{
										"type": "literal",
										"value": "additions text"
									},
									{
										"type": "literal",
										"value": "all"
									},
									{
										"type": "literal",
										"value": "removals"
									},
									{
										"type": "literal",
										"value": "removals additions"
									},
									{
										"type": "literal",
										"value": "removals text"
									},
									{
										"type": "literal",
										"value": "text additions"
									},
									{
										"type": "literal",
										"value": "text removals"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-relevant"
							}
						},
						{
							"id": 4103,
							"name": "aria-required",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that user input is required on the element before a form may be submitted."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1798,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-required"
							}
						},
						{
							"id": 4104,
							"name": "aria-roledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized description for the role of an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1800,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-roledescription"
							}
						},
						{
							"id": 4105,
							"name": "aria-rowcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of rows in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1805,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowcount"
							}
						},
						{
							"id": 4106,
							"name": "aria-rowindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1810,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowindex"
							}
						},
						{
							"id": 4107,
							"name": "aria-rowindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-rowindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1815,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowindextext"
							}
						},
						{
							"id": 4108,
							"name": "aria-rowspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1820,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowspan"
							}
						},
						{
							"id": 4109,
							"name": "aria-selected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"selected\" state of various widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1825,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-selected"
							}
						},
						{
							"id": 4110,
							"name": "aria-setsize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-posinset."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1830,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-setsize"
							}
						},
						{
							"id": 4111,
							"name": "aria-sort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1832,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "ascending"
									},
									{
										"type": "literal",
										"value": "descending"
									},
									{
										"type": "literal",
										"value": "other"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-sort"
							}
						},
						{
							"id": 4112,
							"name": "aria-valuemax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the maximum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1834,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuemax"
							}
						},
						{
							"id": 4113,
							"name": "aria-valuemin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the minimum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1836,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuemin"
							}
						},
						{
							"id": 4114,
							"name": "aria-valuenow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the current value for a range widget."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-valuetext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1841,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuenow"
							}
						},
						{
							"id": 4115,
							"name": "aria-valuetext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1843,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuetext"
							}
						},
						{
							"id": 4116,
							"name": "autoCapitalize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1966,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoCapitalize"
							}
						},
						{
							"id": 4117,
							"name": "autoCorrect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1967,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoCorrect"
							}
						},
						{
							"id": 4118,
							"name": "autoFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1928,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoFocus"
							}
						},
						{
							"id": 4119,
							"name": "autoSave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1968,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoSave"
							}
						},
						{
							"id": 4120,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes the matching logic to make it case-sensitive:\n\n| Link                                         | URL           | isActive |\n| -------------------------------------------- | ------------- | -------- |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/SpOnGe-bOB\" />`"
									},
									{
										"kind": "text",
										"text": "               | "
									},
									{
										"kind": "code",
										"text": "`/sponge-bob`"
									},
									{
										"kind": "text",
										"text": " | true     |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/SpOnGe-bOB\" caseSensitive />`"
									},
									{
										"kind": "text",
										"text": " | "
									},
									{
										"kind": "code",
										"text": "`/sponge-bob`"
									},
									{
										"kind": "text",
										"text": " | false    |"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 741,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L741"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4121,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Can be regular React children or a function that receives an object with the active and pending states of the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<NavLink to=\"/tasks\">\n  {({ isActive }) => (\n    <span className={isActive ? \"active\" : \"\"}>Tasks</span>\n  )}\n</NavLink>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 731,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L731"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4122,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 731,
													"character": 32,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L731"
												}
											],
											"signatures": [
												{
													"id": 4123,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 731,
															"character": 32,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L731"
														}
													],
													"parameters": [
														{
															"id": 4124,
															"name": "props",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 4822,
																"name": "NavLinkRenderProps",
																"package": "react-router"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 4125,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Classes are automatically applied to NavLink that correspond to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NavLinkRenderProps",
										"target": 4822
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```css\na.active { color: red; }\na.pending { color: blue; }\na.transitioning {\n  view-transition-name: my-transition;\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 754,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L754"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4126,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 754,
													"character": 24,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L754"
												}
											],
											"signatures": [
												{
													"id": 4127,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 754,
															"character": 24,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L754"
														}
													],
													"parameters": [
														{
															"id": 4128,
															"name": "props",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 4822,
																"name": "NavLinkRenderProps",
																"package": "react-router"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 4129,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1969,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.color"
							}
						},
						{
							"id": 4130,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1954,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.content"
							}
						},
						{
							"id": 4131,
							"name": "contentEditable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1930,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "Booleanish"
										},
										"name": "Booleanish",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": "inherit"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.contentEditable"
							}
						},
						{
							"id": 4132,
							"name": "contextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1931,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.contextMenu"
							}
						},
						{
							"id": 4133,
							"name": "dangerouslySetInnerHTML",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1421,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4134,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 4135,
											"name": "__html",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"line": 1424,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
															"qualifiedName": "TrustedHTML"
														},
														"name": "TrustedHTML",
														"package": "@types/react"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4135
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 1421,
											"character": 34
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.dangerouslySetInnerHTML"
							}
						},
						{
							"id": 4136,
							"name": "datatype",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1955,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.datatype"
							}
						},
						{
							"id": 4137,
							"name": "defaultChecked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1921,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.defaultChecked"
							}
						},
						{
							"id": 4138,
							"name": "defaultValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1922,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.defaultValue"
							}
						},
						{
							"id": 4139,
							"name": "dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1932,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.dir"
							}
						},
						{
							"id": 4140,
							"name": "discover",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the link discovery behavior\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link /> // default (\"render\")\n<Link discover=\"render\" />\n<Link discover=\"none\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n- **render** - default, discover the route when the link renders\n- **none** - don't eagerly discover, only discover if the link is clicked"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 402,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L402"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"qualifiedName": "DiscoverBehavior"
								},
								"name": "DiscoverBehavior",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.discover"
							}
						},
						{
							"id": 4141,
							"name": "download",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2130,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.download"
							}
						},
						{
							"id": 4142,
							"name": "draggable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1933,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.draggable"
							}
						},
						{
							"id": 4143,
							"name": "end",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes the matching logic for the "
									},
									{
										"kind": "code",
										"text": "`active`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`pending`"
									},
									{
										"kind": "text",
										"text": " states to only match to the \"end\" of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NavLinkProps.to",
										"target": 4349
									},
									{
										"kind": "text",
										"text": ". If the URL is longer, it will no longer be considered active.\n\n| Link                          | URL          | isActive |\n| ----------------------------- | ------------ | -------- |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/tasks\" />`"
									},
									{
										"kind": "text",
										"text": "     | "
									},
									{
										"kind": "code",
										"text": "`/tasks`"
									},
									{
										"kind": "text",
										"text": "     | true     |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/tasks\" />`"
									},
									{
										"kind": "text",
										"text": "     | "
									},
									{
										"kind": "code",
										"text": "`/tasks/123`"
									},
									{
										"kind": "text",
										"text": " | true     |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/tasks\" end />`"
									},
									{
										"kind": "text",
										"text": " | "
									},
									{
										"kind": "code",
										"text": "`/tasks`"
									},
									{
										"kind": "text",
										"text": "     | true     |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/tasks\" end />`"
									},
									{
										"kind": "text",
										"text": " | "
									},
									{
										"kind": "code",
										"text": "`/tasks/123`"
									},
									{
										"kind": "text",
										"text": " | false    |\n\n"
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/\">`"
									},
									{
										"kind": "text",
										"text": " is an exceptional case because _every_ URL matches "
									},
									{
										"kind": "code",
										"text": "`/`"
									},
									{
										"kind": "text",
										"text": ". To avoid this matching every single route by default, it effectively ignores the "
									},
									{
										"kind": "code",
										"text": "`end`"
									},
									{
										"kind": "text",
										"text": " prop and only matches when you're at the root route."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 768,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L768"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4144,
							"name": "hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1934,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hidden"
							}
						},
						{
							"id": 4145,
							"name": "hrefLang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2132,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hrefLang"
							}
						},
						{
							"id": 4146,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1935,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.id"
							}
						},
						{
							"id": 4147,
							"name": "inlist",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1956,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.inlist"
							}
						},
						{
							"id": 4148,
							"name": "inputMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1984,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "search"
									},
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "url"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "tel"
									},
									{
										"type": "literal",
										"value": "email"
									},
									{
										"type": "literal",
										"value": "numeric"
									},
									{
										"type": "literal",
										"value": "decimal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.inputMode"
							}
						},
						{
							"id": 4149,
							"name": "is",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1989,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is"
							}
						},
						{
							"id": 4150,
							"name": "itemID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemID"
							}
						},
						{
							"id": 4151,
							"name": "itemProp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1970,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemProp"
							}
						},
						{
							"id": 4152,
							"name": "itemRef",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1974,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemRef"
							}
						},
						{
							"id": 4153,
							"name": "itemScope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1971,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemScope"
							}
						},
						{
							"id": 4154,
							"name": "itemType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1972,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemType"
							}
						},
						{
							"id": 4155,
							"name": "lang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1936,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.lang"
							}
						},
						{
							"id": 4156,
							"name": "media",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2133,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.media"
							}
						},
						{
							"id": 4157,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1937,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.nonce"
							}
						},
						{
							"id": 4158,
							"name": "onAbort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1480,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAbort"
							}
						},
						{
							"id": 4159,
							"name": "onAbortCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1481,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAbortCapture"
							}
						},
						{
							"id": 4160,
							"name": "onAnimationEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1612,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationEnd"
							}
						},
						{
							"id": 4161,
							"name": "onAnimationEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1613,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationEndCapture"
							}
						},
						{
							"id": 4162,
							"name": "onAnimationIteration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1614,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationIteration"
							}
						},
						{
							"id": 4163,
							"name": "onAnimationIterationCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1615,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationIterationCapture"
							}
						},
						{
							"id": 4164,
							"name": "onAnimationStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1610,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationStart"
							}
						},
						{
							"id": 4165,
							"name": "onAnimationStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1611,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationStartCapture"
							}
						},
						{
							"id": 4166,
							"name": "onAuxClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1528,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAuxClick"
							}
						},
						{
							"id": 4167,
							"name": "onAuxClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1529,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAuxClickCapture"
							}
						},
						{
							"id": 4168,
							"name": "onBeforeInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1452,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBeforeInput"
							}
						},
						{
							"id": 4169,
							"name": "onBeforeInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1453,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBeforeInputCapture"
							}
						},
						{
							"id": 4170,
							"name": "onBlur",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1446,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBlur"
							}
						},
						{
							"id": 4171,
							"name": "onBlurCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1447,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBlurCapture"
							}
						},
						{
							"id": 4172,
							"name": "onCanPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1482,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlay"
							}
						},
						{
							"id": 4173,
							"name": "onCanPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1483,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayCapture"
							}
						},
						{
							"id": 4174,
							"name": "onCanPlayThrough",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1484,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayThrough"
							}
						},
						{
							"id": 4175,
							"name": "onCanPlayThroughCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1485,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayThroughCapture"
							}
						},
						{
							"id": 4176,
							"name": "onChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1450,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onChange"
							}
						},
						{
							"id": 4177,
							"name": "onChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1451,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onChangeCapture"
							}
						},
						{
							"id": 4178,
							"name": "onClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1530,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onClick"
							}
						},
						{
							"id": 4179,
							"name": "onClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1531,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onClickCapture"
							}
						},
						{
							"id": 4180,
							"name": "onCompositionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1436,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionEnd"
							}
						},
						{
							"id": 4181,
							"name": "onCompositionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1437,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionEndCapture"
							}
						},
						{
							"id": 4182,
							"name": "onCompositionStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1438,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionStart"
							}
						},
						{
							"id": 4183,
							"name": "onCompositionStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1439,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionStartCapture"
							}
						},
						{
							"id": 4184,
							"name": "onCompositionUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1440,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionUpdate"
							}
						},
						{
							"id": 4185,
							"name": "onCompositionUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1441,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionUpdateCapture"
							}
						},
						{
							"id": 4186,
							"name": "onContextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1532,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onContextMenu"
							}
						},
						{
							"id": 4187,
							"name": "onContextMenuCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1533,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onContextMenuCapture"
							}
						},
						{
							"id": 4188,
							"name": "onCopy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1428,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCopy"
							}
						},
						{
							"id": 4189,
							"name": "onCopyCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1429,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCopyCapture"
							}
						},
						{
							"id": 4190,
							"name": "onCut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1430,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCut"
							}
						},
						{
							"id": 4191,
							"name": "onCutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1431,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCutCapture"
							}
						},
						{
							"id": 4192,
							"name": "onDoubleClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1534,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDoubleClick"
							}
						},
						{
							"id": 4193,
							"name": "onDoubleClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1535,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDoubleClickCapture"
							}
						},
						{
							"id": 4194,
							"name": "onDrag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1536,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDrag"
							}
						},
						{
							"id": 4195,
							"name": "onDragCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1537,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragCapture"
							}
						},
						{
							"id": 4196,
							"name": "onDragEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1538,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnd"
							}
						},
						{
							"id": 4197,
							"name": "onDragEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1539,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEndCapture"
							}
						},
						{
							"id": 4198,
							"name": "onDragEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1540,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnter"
							}
						},
						{
							"id": 4199,
							"name": "onDragEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1541,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnterCapture"
							}
						},
						{
							"id": 4200,
							"name": "onDragExit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1542,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragExit"
							}
						},
						{
							"id": 4201,
							"name": "onDragExitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1543,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragExitCapture"
							}
						},
						{
							"id": 4202,
							"name": "onDragLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1544,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragLeave"
							}
						},
						{
							"id": 4203,
							"name": "onDragLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1545,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragLeaveCapture"
							}
						},
						{
							"id": 4204,
							"name": "onDragOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1546,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragOver"
							}
						},
						{
							"id": 4205,
							"name": "onDragOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1547,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragOverCapture"
							}
						},
						{
							"id": 4206,
							"name": "onDragStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1548,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragStart"
							}
						},
						{
							"id": 4207,
							"name": "onDragStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1549,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragStartCapture"
							}
						},
						{
							"id": 4208,
							"name": "onDrop",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1550,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDrop"
							}
						},
						{
							"id": 4209,
							"name": "onDropCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1551,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDropCapture"
							}
						},
						{
							"id": 4210,
							"name": "onDurationChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1486,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDurationChange"
							}
						},
						{
							"id": 4211,
							"name": "onDurationChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1487,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDurationChangeCapture"
							}
						},
						{
							"id": 4212,
							"name": "onEmptied",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1488,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEmptied"
							}
						},
						{
							"id": 4213,
							"name": "onEmptiedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1489,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEmptiedCapture"
							}
						},
						{
							"id": 4214,
							"name": "onEncrypted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1490,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEncrypted"
							}
						},
						{
							"id": 4215,
							"name": "onEncryptedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1491,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEncryptedCapture"
							}
						},
						{
							"id": 4216,
							"name": "onEnded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1492,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEnded"
							}
						},
						{
							"id": 4217,
							"name": "onEndedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1493,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEndedCapture"
							}
						},
						{
							"id": 4218,
							"name": "onError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1466,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onError"
							}
						},
						{
							"id": 4219,
							"name": "onErrorCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1467,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onErrorCapture"
							}
						},
						{
							"id": 4220,
							"name": "onFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1444,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onFocus"
							}
						},
						{
							"id": 4221,
							"name": "onFocusCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1445,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onFocusCapture"
							}
						},
						{
							"id": 4222,
							"name": "onGotPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1596,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onGotPointerCapture"
							}
						},
						{
							"id": 4223,
							"name": "onGotPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1597,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onGotPointerCaptureCapture"
							}
						},
						{
							"id": 4224,
							"name": "onInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1454,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInput"
							}
						},
						{
							"id": 4225,
							"name": "onInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1455,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInputCapture"
							}
						},
						{
							"id": 4226,
							"name": "onInvalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1460,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInvalid"
							}
						},
						{
							"id": 4227,
							"name": "onInvalidCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1461,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInvalidCapture"
							}
						},
						{
							"id": 4228,
							"name": "onKeyDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1470,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyDown"
							}
						},
						{
							"id": 4229,
							"name": "onKeyDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1471,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyDownCapture"
							}
						},
						{
							"id": 4230,
							"name": "onKeyPress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1473,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyPress"
							}
						},
						{
							"id": 4231,
							"name": "onKeyPressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1475,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyPressCapture"
							}
						},
						{
							"id": 4232,
							"name": "onKeyUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1476,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyUp"
							}
						},
						{
							"id": 4233,
							"name": "onKeyUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1477,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyUpCapture"
							}
						},
						{
							"id": 4234,
							"name": "onLoad",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1464,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoad"
							}
						},
						{
							"id": 4235,
							"name": "onLoadCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1465,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadCapture"
							}
						},
						{
							"id": 4236,
							"name": "onLoadedData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1494,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedData"
							}
						},
						{
							"id": 4237,
							"name": "onLoadedDataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1495,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedDataCapture"
							}
						},
						{
							"id": 4238,
							"name": "onLoadedMetadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1496,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedMetadata"
							}
						},
						{
							"id": 4239,
							"name": "onLoadedMetadataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1497,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedMetadataCapture"
							}
						},
						{
							"id": 4240,
							"name": "onLoadStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1498,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadStart"
							}
						},
						{
							"id": 4241,
							"name": "onLoadStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1499,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadStartCapture"
							}
						},
						{
							"id": 4242,
							"name": "onLostPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1598,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLostPointerCapture"
							}
						},
						{
							"id": 4243,
							"name": "onLostPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1599,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLostPointerCaptureCapture"
							}
						},
						{
							"id": 4244,
							"name": "onMouseDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1552,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseDown"
							}
						},
						{
							"id": 4245,
							"name": "onMouseDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1553,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseDownCapture"
							}
						},
						{
							"id": 4246,
							"name": "onMouseEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1554,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseEnter"
							}
						},
						{
							"id": 4247,
							"name": "onMouseLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1555,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseLeave"
							}
						},
						{
							"id": 4248,
							"name": "onMouseMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1556,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseMove"
							}
						},
						{
							"id": 4249,
							"name": "onMouseMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1557,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseMoveCapture"
							}
						},
						{
							"id": 4250,
							"name": "onMouseOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1558,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOut"
							}
						},
						{
							"id": 4251,
							"name": "onMouseOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1559,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOutCapture"
							}
						},
						{
							"id": 4252,
							"name": "onMouseOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1560,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOver"
							}
						},
						{
							"id": 4253,
							"name": "onMouseOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1561,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOverCapture"
							}
						},
						{
							"id": 4254,
							"name": "onMouseUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1562,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseUp"
							}
						},
						{
							"id": 4255,
							"name": "onMouseUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1563,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseUpCapture"
							}
						},
						{
							"id": 4256,
							"name": "onPaste",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1432,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPaste"
							}
						},
						{
							"id": 4257,
							"name": "onPasteCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1433,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPasteCapture"
							}
						},
						{
							"id": 4258,
							"name": "onPause",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1500,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPause"
							}
						},
						{
							"id": 4259,
							"name": "onPauseCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1501,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPauseCapture"
							}
						},
						{
							"id": 4260,
							"name": "onPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1502,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlay"
							}
						},
						{
							"id": 4261,
							"name": "onPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1503,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlayCapture"
							}
						},
						{
							"id": 4262,
							"name": "onPlaying",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1504,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlaying"
							}
						},
						{
							"id": 4263,
							"name": "onPlayingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1505,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlayingCapture"
							}
						},
						{
							"id": 4264,
							"name": "onPointerCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1586,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerCancel"
							}
						},
						{
							"id": 4265,
							"name": "onPointerCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1587,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerCancelCapture"
							}
						},
						{
							"id": 4266,
							"name": "onPointerDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1580,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerDown"
							}
						},
						{
							"id": 4267,
							"name": "onPointerDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1581,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerDownCapture"
							}
						},
						{
							"id": 4268,
							"name": "onPointerEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1588,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerEnter"
							}
						},
						{
							"id": 4269,
							"name": "onPointerEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1589,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerEnterCapture"
							}
						},
						{
							"id": 4270,
							"name": "onPointerLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1590,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerLeave"
							}
						},
						{
							"id": 4271,
							"name": "onPointerLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1591,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerLeaveCapture"
							}
						},
						{
							"id": 4272,
							"name": "onPointerMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1582,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerMove"
							}
						},
						{
							"id": 4273,
							"name": "onPointerMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1583,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerMoveCapture"
							}
						},
						{
							"id": 4274,
							"name": "onPointerOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1594,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOut"
							}
						},
						{
							"id": 4275,
							"name": "onPointerOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1595,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOutCapture"
							}
						},
						{
							"id": 4276,
							"name": "onPointerOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1592,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOver"
							}
						},
						{
							"id": 4277,
							"name": "onPointerOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1593,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOverCapture"
							}
						},
						{
							"id": 4278,
							"name": "onPointerUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1584,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerUp"
							}
						},
						{
							"id": 4279,
							"name": "onPointerUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1585,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerUpCapture"
							}
						},
						{
							"id": 4280,
							"name": "onProgress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1506,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onProgress"
							}
						},
						{
							"id": 4281,
							"name": "onProgressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1507,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onProgressCapture"
							}
						},
						{
							"id": 4282,
							"name": "onRateChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1508,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onRateChange"
							}
						},
						{
							"id": 4283,
							"name": "onRateChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1509,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onRateChangeCapture"
							}
						},
						{
							"id": 4284,
							"name": "onReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1456,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onReset"
							}
						},
						{
							"id": 4285,
							"name": "onResetCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1457,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResetCapture"
							}
						},
						{
							"id": 4286,
							"name": "onResize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1510,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResize"
							}
						},
						{
							"id": 4287,
							"name": "onResizeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1511,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResizeCapture"
							}
						},
						{
							"id": 4288,
							"name": "onScroll",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1602,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onScroll"
							}
						},
						{
							"id": 4289,
							"name": "onScrollCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1603,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onScrollCapture"
							}
						},
						{
							"id": 4290,
							"name": "onSeeked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1512,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeeked"
							}
						},
						{
							"id": 4291,
							"name": "onSeekedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1513,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeekedCapture"
							}
						},
						{
							"id": 4292,
							"name": "onSeeking",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1514,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeeking"
							}
						},
						{
							"id": 4293,
							"name": "onSeekingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1515,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeekingCapture"
							}
						},
						{
							"id": 4294,
							"name": "onSelect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1566,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSelect"
							}
						},
						{
							"id": 4295,
							"name": "onSelectCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1567,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSelectCapture"
							}
						},
						{
							"id": 4296,
							"name": "onStalled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1516,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onStalled"
							}
						},
						{
							"id": 4297,
							"name": "onStalledCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1517,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onStalledCapture"
							}
						},
						{
							"id": 4298,
							"name": "onSubmit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1458,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSubmit"
							}
						},
						{
							"id": 4299,
							"name": "onSubmitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1459,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSubmitCapture"
							}
						},
						{
							"id": 4300,
							"name": "onSuspend",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1518,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSuspend"
							}
						},
						{
							"id": 4301,
							"name": "onSuspendCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1519,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSuspendCapture"
							}
						},
						{
							"id": 4302,
							"name": "onTimeUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1520,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTimeUpdate"
							}
						},
						{
							"id": 4303,
							"name": "onTimeUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1521,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTimeUpdateCapture"
							}
						},
						{
							"id": 4304,
							"name": "onTouchCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1570,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchCancel"
							}
						},
						{
							"id": 4305,
							"name": "onTouchCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1571,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchCancelCapture"
							}
						},
						{
							"id": 4306,
							"name": "onTouchEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1572,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchEnd"
							}
						},
						{
							"id": 4307,
							"name": "onTouchEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1573,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchEndCapture"
							}
						},
						{
							"id": 4308,
							"name": "onTouchMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1574,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchMove"
							}
						},
						{
							"id": 4309,
							"name": "onTouchMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1575,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchMoveCapture"
							}
						},
						{
							"id": 4310,
							"name": "onTouchStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1576,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchStart"
							}
						},
						{
							"id": 4311,
							"name": "onTouchStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1577,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchStartCapture"
							}
						},
						{
							"id": 4312,
							"name": "onTransitionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1618,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTransitionEnd"
							}
						},
						{
							"id": 4313,
							"name": "onTransitionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1619,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTransitionEndCapture"
							}
						},
						{
							"id": 4314,
							"name": "onVolumeChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1522,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onVolumeChange"
							}
						},
						{
							"id": 4315,
							"name": "onVolumeChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1523,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onVolumeChangeCapture"
							}
						},
						{
							"id": 4316,
							"name": "onWaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1524,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWaiting"
							}
						},
						{
							"id": 4317,
							"name": "onWaitingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1525,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWaitingCapture"
							}
						},
						{
							"id": 4318,
							"name": "onWheel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1606,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWheel"
							}
						},
						{
							"id": 4319,
							"name": "onWheelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1607,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWheelCapture"
							}
						},
						{
							"id": 4320,
							"name": "ping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2134,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.ping"
							}
						},
						{
							"id": 4321,
							"name": "placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1938,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.placeholder"
							}
						},
						{
							"id": 4322,
							"name": "prefetch",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the data and module prefetching behavior for the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link /> // default\n<Link prefetch=\"none\" />\n<Link prefetch=\"intent\" />\n<Link prefetch=\"render\" />\n<Link prefetch=\"viewport\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n- **none** - default, no prefetching\n- **intent** - prefetches when the user hovers or focuses the link\n- **render** - prefetches when the link renders\n- **viewport** - prefetches when the link is in the viewport, very useful for mobile\n\nPrefetching is done with HTML "
									},
									{
										"kind": "code",
										"text": "`<link rel=\"prefetch\">`"
									},
									{
										"kind": "text",
										"text": " tags. They are inserted after the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<a href=\"...\" />\n<a href=\"...\" />\n<link rel=\"prefetch\" /> // might conditionally render\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause of this, if you are using "
									},
									{
										"kind": "code",
										"text": "`nav :last-child`"
									},
									{
										"kind": "text",
										"text": " you will need to use "
									},
									{
										"kind": "code",
										"text": "`nav :last-of-type`"
									},
									{
										"kind": "text",
										"text": " so the styles don't conditionally fall off your last link (and any other similar selectors)."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 430,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L430"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"qualifiedName": "PrefetchBehavior"
								},
								"name": "PrefetchBehavior",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.prefetch"
							}
						},
						{
							"id": 4323,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1957,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.prefix"
							}
						},
						{
							"id": 4324,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prevents the scroll position from being reset to the top of the window when the link is clicked and the app is using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ScrollRestoration",
										"target": 5078
									},
									{
										"kind": "text",
										"text": ". This only prevents new locations reseting scroll to the top, scroll position will be restored for back/forward button navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"?tab=one\" preventScrollReset />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 488,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L488"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.preventScrollReset"
							}
						},
						{
							"id": 4325,
							"name": "property",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1958,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.property"
							}
						},
						{
							"id": 4326,
							"name": "radioGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1947,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.radioGroup"
							}
						},
						{
							"id": 4327,
							"name": "referrerPolicy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2137,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.HTMLAttributeReferrerPolicy"
								},
								"name": "HTMLAttributeReferrerPolicy",
								"package": "@types/react",
								"qualifiedName": "React.HTMLAttributeReferrerPolicy"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.referrerPolicy"
							}
						},
						{
							"id": 4328,
							"name": "rel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1959,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rel"
							}
						},
						{
							"id": 4329,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the relative path behavior for the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"..\" /> // default: \"route\"\n<Link relative=\"route\" />\n<Link relative=\"path\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nConsider a route hierarchy where a parent route pattern is \"blog\" and a child route pattern is \"blog/:slug/edit\".\n\n- **route** - default, resolves the link relative to the route pattern. In the example above a relative link of "
									},
									{
										"kind": "code",
										"text": "`\"..\"`"
									},
									{
										"kind": "text",
										"text": " will remove both "
									},
									{
										"kind": "code",
										"text": "`:slug/edit`"
									},
									{
										"kind": "text",
										"text": " segments back to \"/blog\".\n- **path** - relative to the path so "
									},
									{
										"kind": "code",
										"text": "`..`"
									},
									{
										"kind": "text",
										"text": " will only remove one URL segment up to \"/blog/:slug\""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 504,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L504"
								}
							],
							"type": {
								"type": "reference",
								"target": 4841,
								"name": "RelativeRoutingType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.relative"
							}
						},
						{
							"id": 4330,
							"name": "reloadDocument",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Will use document navigation instead of client side routing when the link is clicked: the browser will handle the transition normally (as if it were an "
									},
									{
										"kind": "code",
										"text": "`<a href>`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/logout\" reloadDocument />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 439,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L439"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.reloadDocument"
							}
						},
						{
							"id": 4331,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current entry in the history stack instead of pushing a new one onto it.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link replace />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```\n# with a history stack like this\nA -> B\n\n# normal link click pushes a new entry\nA -> B -> C\n\n# but with `replace`, B is replaced by C\nA -> C\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 459,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L459"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.replace"
							}
						},
						{
							"id": 4332,
							"name": "resource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1960,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.resource"
							}
						},
						{
							"id": 4333,
							"name": "results",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1975,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.results"
							}
						},
						{
							"id": 4334,
							"name": "rev",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1961,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rev"
							}
						},
						{
							"id": 4335,
							"name": "role",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1950,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AriaRole"
								},
								"name": "AriaRole",
								"package": "@types/react",
								"qualifiedName": "React.AriaRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.role"
							}
						},
						{
							"id": 4336,
							"name": "security",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1976,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.security"
							}
						},
						{
							"id": 4337,
							"name": "slot",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1939,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.slot"
							}
						},
						{
							"id": 4338,
							"name": "spellCheck",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1940,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.spellCheck"
							}
						},
						{
							"id": 4339,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds persistent client side routing state to the next location.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/somewhere/else\" state={{ some: \"value\" }} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe location state is accessed from the "
									},
									{
										"kind": "code",
										"text": "`location`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction SomeComp() {\n  const location = useLocation()\n  location.state; // { some: \"value\" }\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThis state is inaccessible on the server as it is implemented on top of ["
									},
									{
										"kind": "code",
										"text": "`history.state`"
									},
									{
										"kind": "text",
										"text": "](https://developer.mozilla.org/en-US/docs/Web/API/History/state)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 479,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L479"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.state"
							}
						},
						{
							"id": 4340,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 770,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L770"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.CSSProperties"
										},
										"name": "CSSProperties",
										"package": "@types/react",
										"qualifiedName": "React.CSSProperties"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4341,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 772,
													"character": 7,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L772"
												}
											],
											"signatures": [
												{
													"id": 4342,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 772,
															"character": 7,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L772"
														}
													],
													"parameters": [
														{
															"id": 4343,
															"name": "props",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 4822,
																"name": "NavLinkRenderProps",
																"package": "react-router"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.CSSProperties"
																},
																"name": "CSSProperties",
																"package": "@types/react",
																"qualifiedName": "React.CSSProperties"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 4344,
							"name": "suppressContentEditableWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1923,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.suppressContentEditableWarning"
							}
						},
						{
							"id": 4345,
							"name": "suppressHydrationWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1924,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.suppressHydrationWarning"
							}
						},
						{
							"id": 4346,
							"name": "tabIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1942,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.tabIndex"
							}
						},
						{
							"id": 4347,
							"name": "target",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2135,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.HTMLAttributeAnchorTarget"
								},
								"name": "HTMLAttributeAnchorTarget",
								"package": "@types/react",
								"qualifiedName": "React.HTMLAttributeAnchorTarget"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.target"
							}
						},
						{
							"id": 4348,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1943,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.title"
							}
						},
						{
							"id": 4349,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Can be a string or a partial "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Path",
										"target": 4387
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/some/path\" />\n\n<Link\n  to={{\n    pathname: \"/some/path\",\n    search: \"?query=string\",\n    hash: \"#hash\",\n  }}\n/>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 521,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L521"
								}
							],
							"type": {
								"type": "reference",
								"target": 4866,
								"name": "To",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.to"
							}
						},
						{
							"id": 4350,
							"name": "translate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1944,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "yes"
									},
									{
										"type": "literal",
										"value": "no"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.translate"
							}
						},
						{
							"id": 4351,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2136,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.type"
							}
						},
						{
							"id": 4352,
							"name": "typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1962,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.typeof"
							}
						},
						{
							"id": 4353,
							"name": "unselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1977,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "on"
									},
									{
										"type": "literal",
										"value": "off"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.unselectable"
							}
						},
						{
							"id": 4354,
							"name": "viewTransition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables a [View Transition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API) for this navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\n<Link to={to} viewTransition>\n  Click me\n</Link>\n```"
									},
									{
										"kind": "text",
										"text": "\n\nTo apply specific styles for the transition, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useViewTransitionState",
										"target": 5279
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 534,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L534"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.viewTransition"
							}
						},
						{
							"id": 4355,
							"name": "vocab",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1963,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.vocab"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4061,
								4062,
								4063,
								4064,
								4065,
								4066,
								4067,
								4068,
								4069,
								4070,
								4071,
								4072,
								4073,
								4074,
								4075,
								4076,
								4077,
								4078,
								4079,
								4080,
								4081,
								4082,
								4083,
								4084,
								4085,
								4086,
								4087,
								4088,
								4089,
								4090,
								4091,
								4092,
								4093,
								4094,
								4095,
								4096,
								4097,
								4098,
								4099,
								4100,
								4101,
								4102,
								4103,
								4104,
								4105,
								4106,
								4107,
								4108,
								4109,
								4110,
								4111,
								4112,
								4113,
								4114,
								4115,
								4116,
								4117,
								4118,
								4119,
								4120,
								4121,
								4125,
								4129,
								4130,
								4131,
								4132,
								4133,
								4136,
								4137,
								4138,
								4139,
								4140,
								4141,
								4142,
								4143,
								4144,
								4145,
								4146,
								4147,
								4148,
								4149,
								4150,
								4151,
								4152,
								4153,
								4154,
								4155,
								4156,
								4157,
								4158,
								4159,
								4160,
								4161,
								4162,
								4163,
								4164,
								4165,
								4166,
								4167,
								4168,
								4169,
								4170,
								4171,
								4172,
								4173,
								4174,
								4175,
								4176,
								4177,
								4178,
								4179,
								4180,
								4181,
								4182,
								4183,
								4184,
								4185,
								4186,
								4187,
								4188,
								4189,
								4190,
								4191,
								4192,
								4193,
								4194,
								4195,
								4196,
								4197,
								4198,
								4199,
								4200,
								4201,
								4202,
								4203,
								4204,
								4205,
								4206,
								4207,
								4208,
								4209,
								4210,
								4211,
								4212,
								4213,
								4214,
								4215,
								4216,
								4217,
								4218,
								4219,
								4220,
								4221,
								4222,
								4223,
								4224,
								4225,
								4226,
								4227,
								4228,
								4229,
								4230,
								4231,
								4232,
								4233,
								4234,
								4235,
								4236,
								4237,
								4238,
								4239,
								4240,
								4241,
								4242,
								4243,
								4244,
								4245,
								4246,
								4247,
								4248,
								4249,
								4250,
								4251,
								4252,
								4253,
								4254,
								4255,
								4256,
								4257,
								4258,
								4259,
								4260,
								4261,
								4262,
								4263,
								4264,
								4265,
								4266,
								4267,
								4268,
								4269,
								4270,
								4271,
								4272,
								4273,
								4274,
								4275,
								4276,
								4277,
								4278,
								4279,
								4280,
								4281,
								4282,
								4283,
								4284,
								4285,
								4286,
								4287,
								4288,
								4289,
								4290,
								4291,
								4292,
								4293,
								4294,
								4295,
								4296,
								4297,
								4298,
								4299,
								4300,
								4301,
								4302,
								4303,
								4304,
								4305,
								4306,
								4307,
								4308,
								4309,
								4310,
								4311,
								4312,
								4313,
								4314,
								4315,
								4316,
								4317,
								4318,
								4319,
								4320,
								4321,
								4322,
								4323,
								4324,
								4325,
								4326,
								4327,
								4328,
								4329,
								4330,
								4331,
								4332,
								4333,
								4334,
								4335,
								4336,
								4337,
								4338,
								4339,
								4340,
								4344,
								4345,
								4346,
								4347,
								4348,
								4349,
								4350,
								4351,
								4352,
								4353,
								4354,
								4355
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 718,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L718"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 3702,
									"name": "LinkProps",
									"package": "react-router"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "className"
										},
										{
											"type": "literal",
											"value": "style"
										},
										{
											"type": "literal",
											"value": "children"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 4356,
					"name": "NonIndexRouteObject",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4357,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L50"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 2916,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ActionFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 4358,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L46"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4359,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L55"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4848,
									"name": "RouteObject",
									"package": "react-router"
								}
							}
						},
						{
							"id": 4360,
							"name": "Component",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 59,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L59"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4361,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 4362,
							"name": "element",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L56"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4363,
							"name": "ErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L61"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4364,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 4365,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 58,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L58"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4366,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4367,
							"name": "hasErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L51"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4368,
							"name": "HydrateFallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 60,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L60"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4369,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 4370,
							"name": "hydrateFallbackElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L57"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4371,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L48"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4372,
							"name": "index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L54"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						},
						{
							"id": 4373,
							"name": "lazy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 62,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L62"
								}
							],
							"type": {
								"type": "reference",
								"target": 3699,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4848,
										"name": "RouteObject",
										"package": "react-router"
									}
								],
								"name": "LazyRouteFunction",
								"package": "react-router"
							}
						},
						{
							"id": 4374,
							"name": "loader",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L49"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 4758,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 4375,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4376,
							"name": "shouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L52"
								}
							],
							"type": {
								"type": "reference",
								"target": 4576,
								"name": "ShouldRevalidateFunction",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4357,
								4358,
								4359,
								4360,
								4362,
								4363,
								4365,
								4366,
								4367,
								4368,
								4370,
								4371,
								4372,
								4373,
								4374,
								4375,
								4376
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 45,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L45"
						}
					]
				},
				{
					"id": 4377,
					"name": "OutletProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4378,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Provides a context value to the element tree below the outlet. Use when the parent route needs to provide values to child routes.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Outlet context={myContextValue} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAccess the context with "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useOutletContext",
										"target": 5246
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 590,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L590"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4378
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 580,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L580"
						}
					]
				},
				{
					"id": 4379,
					"name": "PageLinkDescriptor",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4380,
							"name": "crossOrigin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How the element handles crossorigin requests"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/links.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L16"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "anonymous"
									},
									{
										"type": "literal",
										"value": "use-credentials"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.crossOrigin"
							}
						},
						{
							"id": 4381,
							"name": "disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the link is disabled"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/links.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.disabled"
							}
						},
						{
							"id": 4382,
							"name": "hrefLang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Language of the linked resource"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/links.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L51"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hrefLang"
							}
						},
						{
							"id": 4383,
							"name": "integrity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integrity metadata used in Subresource Integrity checks"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/links.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L46"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.integrity"
							}
						},
						{
							"id": 4384,
							"name": "media",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Applicable media: \"screen\", \"print\", \"(max-width: 764px)\""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/links.ts",
									"line": 41,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L41"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.media"
							}
						},
						{
							"id": 4385,
							"name": "page",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The absolute path of the page to prefetch."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/links.ts",
									"line": 189,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L189"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4386,
							"name": "referrerPolicy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Referrer policy for fetches initiated by the element"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/links.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L61"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": ""
									},
									{
										"type": "literal",
										"value": "no-referrer"
									},
									{
										"type": "literal",
										"value": "no-referrer-when-downgrade"
									},
									{
										"type": "literal",
										"value": "same-origin"
									},
									{
										"type": "literal",
										"value": "origin"
									},
									{
										"type": "literal",
										"value": "strict-origin"
									},
									{
										"type": "literal",
										"value": "origin-when-cross-origin"
									},
									{
										"type": "literal",
										"value": "strict-origin-when-cross-origin"
									},
									{
										"type": "literal",
										"value": "unsafe-url"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.referrerPolicy"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4380,
								4381,
								4382,
								4383,
								4384,
								4385,
								4386
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/links.ts",
							"line": 173,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L173"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 4744,
									"name": "HtmlLinkDescriptor",
									"package": "react-router"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "href"
										},
										{
											"type": "literal",
											"value": "rel"
										},
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "sizes"
										},
										{
											"type": "literal",
											"value": "imageSrcSet"
										},
										{
											"type": "literal",
											"value": "imageSizes"
										},
										{
											"type": "literal",
											"value": "as"
										},
										{
											"type": "literal",
											"value": "color"
										},
										{
											"type": "literal",
											"value": "title"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 4387,
					"name": "Path",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The pathname, search, and hash values of a URL."
							}
						]
					},
					"children": [
						{
							"id": 4388,
							"name": "hash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL fragment identifier, beginning with a #."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4389,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL pathname, beginning with a /."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4390,
							"name": "search",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL search string, beginning with a ?."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4388,
								4389,
								4390
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 35,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L35"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3994,
							"name": "Location"
						}
					]
				},
				{
					"id": 4391,
					"name": "PathMatch",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A PathMatch contains info about how a PathPattern matched on a URL pathname."
							}
						]
					},
					"children": [
						{
							"id": 4392,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names and values of dynamic parameters in the URL."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 940,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L940"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4396,
										"name": "ParamKey",
										"package": "react-router",
										"qualifiedName": "PathMatch.ParamKey",
										"refersToTypeParameter": true
									}
								],
								"name": "Params",
								"package": "react-router"
							}
						},
						{
							"id": 4393,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 944,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L944"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4394,
							"name": "pathnameBase",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched before child routes."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 948,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L948"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4395,
							"name": "pattern",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The pattern that was used to match."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 952,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L952"
								}
							],
							"type": {
								"type": "reference",
								"target": 4397,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "PathPattern",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4392,
								4393,
								4394,
								4395
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 936,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L936"
						}
					],
					"typeParameters": [
						{
							"id": 4396,
							"name": "ParamKey",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 4397,
					"name": "PathPattern",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A PathPattern is used to match on some portion of a URL pathname."
							}
						]
					},
					"children": [
						{
							"id": 4398,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Should be "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the static portions of the "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " should be matched in\nthe same case."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 926,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L926"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4399,
							"name": "end",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Should be "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if this pattern should match the entire URL pathname."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 930,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L930"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4400,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A string to match against a URL pathname. May contain "
									},
									{
										"kind": "code",
										"text": "`:id`"
									},
									{
										"kind": "text",
										"text": "-style segments\nto indicate placeholders for dynamic parameters. May also end with "
									},
									{
										"kind": "code",
										"text": "`/*`"
									},
									{
										"kind": "text",
										"text": " to\nindicate matching the rest of the URL pathname."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 921,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L921"
								}
							],
							"type": {
								"type": "reference",
								"target": 4401,
								"name": "Path",
								"package": "react-router",
								"qualifiedName": "PathPattern.Path",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4398,
								4399,
								4400
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 915,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L915"
						}
					],
					"typeParameters": [
						{
							"id": 4401,
							"name": "Path",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 4402,
					"name": "PathRouteProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4403,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 624,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L624"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 2916,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ActionFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 4404,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 619,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L619"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4405,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 629,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L629"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4406,
							"name": "Component",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 633,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L633"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4407,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 4408,
							"name": "element",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 630,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L630"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4409,
							"name": "ErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 635,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L635"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4410,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 4411,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 632,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L632"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4412,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 627,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L627"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4413,
							"name": "hasErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 625,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L625"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4414,
							"name": "HydrateFallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 634,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L634"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 4415,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 4416,
							"name": "hydrateFallbackElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 631,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L631"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4417,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 621,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L621"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4418,
							"name": "index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 628,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L628"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						},
						{
							"id": 4419,
							"name": "lazy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 622,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L622"
								}
							],
							"type": {
								"type": "reference",
								"target": 3699,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4356,
										"name": "NonIndexRouteObject",
										"package": "react-router"
									}
								],
								"name": "LazyRouteFunction",
								"package": "react-router"
							}
						},
						{
							"id": 4420,
							"name": "loader",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 623,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L623"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 4758,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 4421,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 620,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L620"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4422,
							"name": "shouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 626,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L626"
								}
							],
							"type": {
								"type": "reference",
								"target": 4576,
								"name": "ShouldRevalidateFunction",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4403,
								4404,
								4405,
								4406,
								4408,
								4409,
								4411,
								4412,
								4413,
								4414,
								4416,
								4417,
								4418,
								4419,
								4420,
								4421,
								4422
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 618,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L618"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 3678,
							"name": "LayoutRouteProps"
						}
					]
				},
				{
					"id": 4423,
					"name": "RouteMatch",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4424,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names and values of dynamic parameters in the URL."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 425,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L425"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4428,
										"name": "ParamKey",
										"package": "react-router",
										"qualifiedName": "RouteMatch.ParamKey",
										"refersToTypeParameter": true
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.params"
							}
						},
						{
							"id": 4425,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 429,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L429"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.pathname"
							}
						},
						{
							"id": 4426,
							"name": "pathnameBase",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched before child routes."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 433,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L433"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.pathnameBase"
							}
						},
						{
							"id": 4427,
							"name": "route",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The route object that was used to match."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 437,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L437"
								}
							],
							"type": {
								"type": "reference",
								"target": 4429,
								"name": "RouteObjectType",
								"package": "react-router",
								"qualifiedName": "RouteMatch.RouteObjectType",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.route"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4424,
								4425,
								4426,
								4427
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 72,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L72"
						}
					],
					"typeParameters": [
						{
							"id": 4428,
							"name": "ParamKey",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4429,
							"name": "RouteObjectType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4848,
								"name": "RouteObject",
								"package": "react-router"
							},
							"default": {
								"type": "reference",
								"target": 4848,
								"name": "RouteObject",
								"package": "react-router"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "AgnosticRouteMatch"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 4428,
									"name": "ParamKey",
									"package": "react-router",
									"qualifiedName": "RouteMatch.ParamKey",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 4429,
									"name": "RouteObjectType",
									"package": "react-router",
									"qualifiedName": "RouteMatch.RouteObjectType",
									"refersToTypeParameter": true
								}
							],
							"name": "AgnosticRouteMatch",
							"package": "react-router"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 2971,
							"name": "DataRouteMatch"
						}
					]
				},
				{
					"id": 4430,
					"name": "RouterInit",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initialization options for createRouter"
							}
						]
					},
					"children": [
						{
							"id": 4431,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 367,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L367"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4432,
							"name": "dataStrategy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 372,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L372"
								}
							],
							"type": {
								"type": "reference",
								"target": 2977,
								"name": "DataStrategyFunction",
								"package": "react-router"
							}
						},
						{
							"id": 4433,
							"name": "future",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 369,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L369"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/router.ts",
											"qualifiedName": "FutureConfig"
										},
										"name": "FutureConfig",
										"package": "react-router"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 4434,
							"name": "history",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 366,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L366"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/history.ts",
									"qualifiedName": "History"
								},
								"name": "History",
								"package": "react-router"
							}
						},
						{
							"id": 4435,
							"name": "hydrationData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 370,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L370"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4455,
												"name": "RouterState",
												"package": "react-router"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "loaderData"
													},
													{
														"type": "literal",
														"value": "actionData"
													},
													{
														"type": "literal",
														"value": "errors"
													}
												]
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 4436,
							"name": "mapRouteProperties",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 368,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L368"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "MapRoutePropertiesFunction"
								},
								"name": "MapRoutePropertiesFunction",
								"package": "react-router"
							}
						},
						{
							"id": 4437,
							"name": "patchRoutesOnNavigation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 373,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L373"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "AgnosticPatchRoutesOnNavigationFunction"
								},
								"name": "AgnosticPatchRoutesOnNavigationFunction",
								"package": "react-router"
							}
						},
						{
							"id": 4438,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 365,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L365"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/utils.ts",
										"qualifiedName": "AgnosticRouteObject"
									},
									"name": "AgnosticRouteObject",
									"package": "react-router"
								}
							}
						},
						{
							"id": 4439,
							"name": "window",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 371,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L371"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Window"
								},
								"name": "Window",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4431,
								4432,
								4433,
								4434,
								4435,
								4436,
								4437,
								4438,
								4439
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 364,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L364"
						}
					]
				},
				{
					"id": 4440,
					"name": "RouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4441,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 688,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L688"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4442,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 689,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L689"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4443,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 690,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L690"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3994,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Location",
												"package": "react-router"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4444,
							"name": "navigationType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 691,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L691"
								}
							],
							"type": {
								"type": "reference",
								"target": 2812,
								"name": "Action",
								"package": "react-router"
							}
						},
						{
							"id": 4445,
							"name": "navigator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 692,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L692"
								}
							],
							"type": {
								"type": "reference",
								"target": 4037,
								"name": "Navigator",
								"package": "react-router"
							}
						},
						{
							"id": 4446,
							"name": "static",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 693,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L693"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4441,
								4442,
								4443,
								4444,
								4445,
								4446
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 687,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L687"
						}
					]
				},
				{
					"id": 4447,
					"name": "RouterProviderProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4448,
							"name": "flushSync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 191,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L191"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4449,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/components.tsx",
											"line": 191,
											"character": 14,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L191"
										}
									],
									"signatures": [
										{
											"id": 4450,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/components.tsx",
													"line": 191,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L191"
												}
											],
											"parameters": [
												{
													"id": 4451,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4452,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/components.tsx",
																	"line": 191,
																	"character": 19,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L191"
																}
															],
															"signatures": [
																{
																	"id": 4453,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react-router/lib/components.tsx",
																			"line": 191,
																			"character": 19,
																			"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L191"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									]
								}
							}
						},
						{
							"id": 4454,
							"name": "router",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 190,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L190"
								}
							],
							"type": {
								"type": "reference",
								"target": 2976,
								"name": "Router",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4448,
								4454
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 189,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L189"
						}
					]
				},
				{
					"id": 4455,
					"name": "RouterState",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "State maintained internally by the router.  During a navigation, all states\nreflect the \"old\" location unless otherwise noted."
							}
						]
					},
					"children": [
						{
							"id": 4456,
							"name": "actionData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Data from the action for the current matches"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 331,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L331"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "RouteData"
										},
										"name": "RouteData",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 4457,
							"name": "blockers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Map of current blockers"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 346,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L346"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Map"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 4670,
										"name": "Blocker",
										"package": "react-router"
									}
								],
								"name": "Map",
								"package": "typescript"
							}
						},
						{
							"id": 4458,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Errors caught from loaders for the current matches"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 336,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L336"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "RouteData"
										},
										"name": "RouteData",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 4459,
							"name": "fetchers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Map of current fetchers"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 341,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L341"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Map"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 4718,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Fetcher",
										"package": "react-router"
									}
								],
								"name": "Map",
								"package": "typescript"
							}
						},
						{
							"id": 4460,
							"name": "historyAction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The action of the most recent navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 282,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L282"
								}
							],
							"type": {
								"type": "reference",
								"target": 2812,
								"name": "Action",
								"package": "react-router"
							}
						},
						{
							"id": 4461,
							"name": "initialized",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tracks whether we've completed our initial data load"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 297,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L297"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4462,
							"name": "loaderData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Data from the loaders for the current matches"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 326,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L326"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "RouteData"
								},
								"name": "RouteData",
								"package": "react-router"
							}
						},
						{
							"id": 4463,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The current location reflected by the router"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 287,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L287"
								}
							],
							"type": {
								"type": "reference",
								"target": 3994,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Location",
								"package": "react-router"
							}
						},
						{
							"id": 4464,
							"name": "matches",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The current set of route matches"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 292,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L292"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/utils.ts",
										"qualifiedName": "AgnosticDataRouteMatch"
									},
									"name": "AgnosticDataRouteMatch",
									"package": "react-router"
								}
							}
						},
						{
							"id": 4465,
							"name": "navigation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tracks the state of the current navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 316,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L316"
								}
							],
							"type": {
								"type": "reference",
								"target": 4789,
								"name": "Navigation",
								"package": "react-router"
							}
						},
						{
							"id": 4466,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicate whether this navigation should skip resetting the scroll position\nif we are unable to restore the scroll position"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 311,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L311"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4467,
							"name": "restoreScrollPosition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Current scroll position we should start at for a new view\n - number -> scroll position to restore to\n - false -> do not restore scroll at all (used during submissions)\n - null -> don't have a saved position, scroll to hash or top of page"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 305,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L305"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 4468,
							"name": "revalidation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tracks any in-progress revalidations"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 321,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L321"
								}
							],
							"type": {
								"type": "reference",
								"target": 4847,
								"name": "RevalidationState",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4456,
								4457,
								4458,
								4459,
								4460,
								4461,
								4462,
								4463,
								4464,
								4465,
								4466,
								4467,
								4468
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 276,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L276"
						}
					]
				},
				{
					"id": 4469,
					"name": "RouterSubscriber",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Subscriber function signature for changes to router state"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 423,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L423"
						}
					],
					"signatures": [
						{
							"id": 4470,
							"name": "RouterSubscriber",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 424,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L424"
								}
							],
							"parameters": [
								{
									"id": 4471,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4455,
										"name": "RouterState",
										"package": "react-router"
									}
								},
								{
									"id": 4472,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4473,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4474,
													"name": "deletedFetchers",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 427,
															"character": 6,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L427"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 4475,
													"name": "flushSync",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 429,
															"character": 6,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L429"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 4476,
													"name": "viewTransitionOpts",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 428,
															"character": 6,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L428"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/router/router.ts",
															"qualifiedName": "ViewTransitionOpts"
														},
														"name": "ViewTransitionOpts",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4474,
														4475,
														4476
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/router.ts",
													"line": 426,
													"character": 10,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L426"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4477,
					"name": "RoutesProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4478,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Nested "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Route",
										"target": 5063
									},
									{
										"kind": "text",
										"text": " elements"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 788,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L788"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4479,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The location to match against. Defaults to the current location."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 793,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L793"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3994,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Location",
												"package": "react-router"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4478,
								4479
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 784,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L784"
						}
					]
				},
				{
					"id": 4480,
					"name": "RoutesTestStubProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4481,
							"name": "future",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Future flags mimicking the settings in react-router.config.ts"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
									"line": 86,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L86"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"qualifiedName": "FutureConfig"
										},
										"name": "FutureConfig",
										"package": "react-router"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 4482,
							"name": "hydrationData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to set the route's initial loader and action data.\n e.g. hydrationData={{\n  loaderData: { \"/contact\": { locale: \"en-US\" } },\n  actionData: { \"/login\": { errors: { email: \"invalid email\" } }}\n }}"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
									"line": 81,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L81"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4455,
												"name": "RouterState",
												"package": "react-router"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "loaderData"
													},
													{
														"type": "literal",
														"value": "actionData"
													},
													{
														"type": "literal",
														"value": "errors"
													}
												]
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 4483,
							"name": "initialEntries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The initial entries in the history stack. This allows you to start a test with\n multiple locations already in the history stack (for testing a back navigation, etc.)\n The test will default to the last entry in initialEntries if no initialIndex is provided.\n e.g. initialEntries={[\"/home\", \"/about\", \"/contact\"]}"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
									"line": 63,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L63"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4748,
									"name": "InitialEntry",
									"package": "react-router"
								}
							}
						},
						{
							"id": 4484,
							"name": "initialIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The initial index in the history stack to render. This allows you to start a test at a specific entry.\nIt defaults to the last entry in initialEntries.\ne.g.\n  initialEntries: [\"/\", \"/events/123\"]\n  initialIndex: 1 // start at \"/events/123\""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
									"line": 72,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L72"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4481,
								4482,
								4483,
								4484
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
							"line": 56,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L56"
						}
					]
				},
				{
					"id": 4485,
					"name": "ServerBuild",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The output of the compiler for the server build."
							}
						]
					},
					"children": [
						{
							"id": 4486,
							"name": "assets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L18"
								}
							],
							"type": {
								"type": "reference",
								"target": 4655,
								"name": "AssetsManifest",
								"package": "react-router"
							}
						},
						{
							"id": 4487,
							"name": "assetsBuildDirectory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4488,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4489,
							"name": "entry",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L14"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4490,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4491,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/build.ts",
													"line": 15,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L15"
												}
											],
											"type": {
												"type": "reference",
												"target": 4496,
												"name": "ServerEntryModule",
												"package": "react-router"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4491
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/build.ts",
											"line": 14,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L14"
										}
									]
								}
							}
						},
						{
							"id": 4492,
							"name": "future",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"qualifiedName": "FutureConfig"
								},
								"name": "FutureConfig",
								"package": "react-router"
							}
						},
						{
							"id": 4493,
							"name": "isSpaMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4494,
							"name": "publicPath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4495,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L17"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/server-runtime/routes.ts",
									"qualifiedName": "ServerRouteManifest"
								},
								"name": "ServerRouteManifest",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4486,
								4487,
								4488,
								4489,
								4492,
								4493,
								4494,
								4495
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/build.ts",
							"line": 13,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L13"
						}
					]
				},
				{
					"id": 4496,
					"name": "ServerEntryModule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A module that serves as the entry point for a Remix app during server\nrendering."
							}
						]
					},
					"children": [
						{
							"id": 4497,
							"name": "default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L51"
								}
							],
							"type": {
								"type": "reference",
								"target": 3614,
								"name": "HandleDocumentRequestFunction",
								"package": "react-router"
							}
						},
						{
							"id": 4498,
							"name": "handleDataRequest",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L52"
								}
							],
							"type": {
								"type": "reference",
								"target": 3610,
								"name": "HandleDataRequestFunction",
								"package": "react-router"
							}
						},
						{
							"id": 4499,
							"name": "handleError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L53"
								}
							],
							"type": {
								"type": "reference",
								"target": 3621,
								"name": "HandleErrorFunction",
								"package": "react-router"
							}
						},
						{
							"id": 4500,
							"name": "streamTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L54"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4497,
								4498,
								4499,
								4500
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/build.ts",
							"line": 50,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/build.ts#L50"
						}
					]
				},
				{
					"id": 4501,
					"name": "ServerRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4502,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
									"line": 12,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/server.tsx#L12"
								}
							],
							"type": {
								"type": "reference",
								"target": 3006,
								"name": "EntryContext",
								"package": "react-router"
							}
						},
						{
							"id": 4503,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
									"line": 14,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/server.tsx#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4504,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
									"line": 13,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/server.tsx#L13"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "URL"
										},
										"name": "URL",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4502,
								4503,
								4504
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
							"line": 11,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/server.tsx#L11"
						}
					]
				},
				{
					"id": 4505,
					"name": "Session",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Session persists data across HTTP requests."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://remix.run/utils/sessions#session-api"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 4506,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw data contained in this session.\n\nThis is useful mostly for SessionStorage internally to access the raw\nsession data to persist."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 34,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L34"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 4528,
												"name": "Data",
												"package": "react-router",
												"qualifiedName": "Session.Data",
												"refersToTypeParameter": true
											},
											{
												"type": "mapped",
												"parameter": "Key",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": 4515,
														"name": "Key",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 4529,
														"name": "FlashData",
														"package": "react-router",
														"qualifiedName": "Session.FlashData",
														"refersToTypeParameter": true
													}
												},
												"nameType": {
													"type": "templateLiteral",
													"head": "__flash_",
													"tail": [
														[
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 4515,
																		"name": "Key",
																		"package": "react-router",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															},
															"__"
														]
													]
												}
											}
										]
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 4507,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for this session.\n\nNote: This will be the empty string for newly created sessions and\nsessions that are not backed by a database (i.e. cookie-based sessions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 26,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4508,
							"name": "flash",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L61"
								}
							],
							"signatures": [
								{
									"id": 4509,
									"name": "flash",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sets a value in the session that is only valid until the next "
											},
											{
												"kind": "code",
												"text": "`get()`"
											},
											{
												"kind": "text",
												"text": ".\nThis can be useful for temporary values, like error messages."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 61,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L61"
										}
									],
									"typeParameters": [
										{
											"id": 4510,
											"name": "Key",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4511,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4510,
												"name": "Key",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 4512,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 4510,
													"name": "Key",
													"package": "react-router",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 4529,
													"name": "FlashData",
													"package": "react-router",
													"qualifiedName": "Session.FlashData",
													"refersToTypeParameter": true
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 4513,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L45"
								}
							],
							"signatures": [
								{
									"id": 4514,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the value for the given "
											},
											{
												"kind": "code",
												"text": "`name`"
											},
											{
												"kind": "text",
												"text": " in this session."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 45,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L45"
										}
									],
									"typeParameters": [
										{
											"id": 4515,
											"name": "Key",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4516,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4515,
												"name": "Key",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 4515,
													"name": "Key",
													"package": "react-router",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 4528,
														"name": "Data",
														"package": "react-router",
														"qualifiedName": "Session.Data",
														"refersToTypeParameter": true
													}
												},
												"trueType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": 4515,
														"typeArguments": [
															{
																"type": "reference",
																"target": 4515,
																"name": "Key",
																"package": "react-router",
																"refersToTypeParameter": true
															}
														],
														"name": "Key",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 4528,
														"name": "Data",
														"package": "react-router",
														"qualifiedName": "Session.Data",
														"refersToTypeParameter": true
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "undefined"
												}
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 4515,
													"name": "Key",
													"package": "react-router",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 4529,
														"name": "FlashData",
														"package": "react-router",
														"qualifiedName": "Session.FlashData",
														"refersToTypeParameter": true
													}
												},
												"trueType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": 4515,
														"typeArguments": [
															{
																"type": "reference",
																"target": 4515,
																"name": "Key",
																"package": "react-router",
																"refersToTypeParameter": true
															}
														],
														"name": "Key",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 4529,
														"name": "FlashData",
														"package": "react-router",
														"qualifiedName": "Session.FlashData",
														"refersToTypeParameter": true
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "undefined"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 4517,
							"name": "has",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L40"
								}
							],
							"signatures": [
								{
									"id": 4518,
									"name": "has",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the session has a value for the given "
											},
											{
												"kind": "code",
												"text": "`name`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "\notherwise."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 40,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L40"
										}
									],
									"parameters": [
										{
											"id": 4519,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "union",
														"types": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"target": 4529,
																	"name": "FlashData",
																	"package": "react-router",
																	"qualifiedName": "Session.FlashData",
																	"refersToTypeParameter": true
																}
															},
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"target": 4528,
																	"name": "Data",
																	"package": "react-router",
																	"qualifiedName": "Session.Data",
																	"refersToTypeParameter": true
																}
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 4520,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L55"
								}
							],
							"signatures": [
								{
									"id": 4521,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sets a value in the session for the given "
											},
											{
												"kind": "code",
												"text": "`name`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 55,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L55"
										}
									],
									"typeParameters": [
										{
											"id": 4522,
											"name": "Key",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4523,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4522,
												"name": "Key",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 4524,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 4522,
													"name": "Key",
													"package": "react-router",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 4528,
													"name": "Data",
													"package": "react-router",
													"qualifiedName": "Session.Data",
													"refersToTypeParameter": true
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 4525,
							"name": "unset",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 69,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L69"
								}
							],
							"signatures": [
								{
									"id": 4526,
									"name": "unset",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes a value from the session."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 69,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L69"
										}
									],
									"parameters": [
										{
											"id": 4527,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"target": 4528,
															"name": "Data",
															"package": "react-router",
															"qualifiedName": "Session.Data",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4506,
								4507
							]
						},
						{
							"title": "Methods",
							"children": [
								4508,
								4513,
								4517,
								4520,
								4525
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 19,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L19"
						}
					],
					"typeParameters": [
						{
							"id": 4528,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 4530,
								"name": "SessionData",
								"package": "react-router"
							}
						},
						{
							"id": 4529,
							"name": "FlashData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 4528,
								"name": "Data",
								"package": "react-router",
								"qualifiedName": "Session.Data",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 4530,
					"name": "SessionData",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of name/value pairs to be used in the session."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L10"
						}
					],
					"indexSignatures": [
						{
							"id": 4531,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L11"
								}
							],
							"parameters": [
								{
									"id": 4532,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 4533,
					"name": "SessionIdStorageStrategy",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SessionIdStorageStrategy is designed to allow anyone to easily build their\nown SessionStorage using "
							},
							{
								"kind": "code",
								"text": "`createSessionStorage(strategy)`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis strategy describes a common scenario where the session id is stored in\na cookie but the actual session data is stored elsewhere, usually in a\ndatabase or on disk. A set of create, read, update, and delete operations\nare provided for managing the session data."
							}
						]
					},
					"children": [
						{
							"id": 4534,
							"name": "cookie",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Cookie used to store the session id, or options used to automatically\ncreate one."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 218,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L218"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 2938,
										"name": "Cookie",
										"package": "react-router"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 2950,
												"name": "ParseOptions",
												"package": "cookie"
											},
											{
												"type": "reference",
												"target": 2955,
												"name": "SerializeOptions",
												"package": "cookie"
											},
											{
												"type": "reference",
												"target": 2969,
												"name": "CookieSignatureOptions",
												"package": "react-router"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4535,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 4536,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
																	"line": 218,
																	"character": 39,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L218"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																4536
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
															"line": 218,
															"character": 37,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L218"
														}
													]
												}
											}
										]
									}
								]
							}
						},
						{
							"id": 4537,
							"name": "createData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new record with the given data and returns the session id."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 223,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L223"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4538,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 223,
											"character": 14,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L223"
										}
									],
									"signatures": [
										{
											"id": 4539,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 223,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L223"
												}
											],
											"parameters": [
												{
													"id": 4540,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 4556,
																		"name": "Data",
																		"package": "react-router",
																		"qualifiedName": "SessionIdStorageStrategy.Data",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "mapped",
																		"parameter": "Key",
																		"parameterType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "intrinsic",
																					"name": "symbol"
																				}
																			]
																		},
																		"templateType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": 4515,
																				"name": "Key",
																				"package": "react-router",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 4557,
																				"name": "FlashData",
																				"package": "react-router",
																				"qualifiedName": "SessionIdStorageStrategy.FlashData",
																				"refersToTypeParameter": true
																			}
																		},
																		"nameType": {
																			"type": "templateLiteral",
																			"head": "__flash_",
																			"tail": [
																				[
																					{
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reference",
																								"target": 4515,
																								"name": "Key",
																								"package": "react-router",
																								"refersToTypeParameter": true
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						]
																					},
																					"__"
																				]
																			]
																		}
																	}
																]
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												},
												{
													"id": 4541,
													"name": "expires",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 4542,
							"name": "deleteData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Deletes data for a given session id from the data store."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 245,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L245"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4543,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 245,
											"character": 14,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L245"
										}
									],
									"signatures": [
										{
											"id": 4544,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 245,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L245"
												}
											],
											"parameters": [
												{
													"id": 4545,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 4546,
							"name": "readData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns data for a given session id, or "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " if there isn't any."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 231,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L231"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4547,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 231,
											"character": 12,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L231"
										}
									],
									"signatures": [
										{
											"id": 4548,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 231,
													"character": 12,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L231"
												}
											],
											"parameters": [
												{
													"id": 4549,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Partial"
																},
																"typeArguments": [
																	{
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": 4556,
																				"name": "Data",
																				"package": "react-router",
																				"qualifiedName": "SessionIdStorageStrategy.Data",
																				"refersToTypeParameter": true
																			},
																			{
																				"type": "mapped",
																				"parameter": "Key",
																				"parameterType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						},
																						{
																							"type": "intrinsic",
																							"name": "symbol"
																						}
																					]
																				},
																				"templateType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "reference",
																						"target": 4515,
																						"name": "Key",
																						"package": "react-router",
																						"refersToTypeParameter": true
																					},
																					"objectType": {
																						"type": "reference",
																						"target": 4557,
																						"name": "FlashData",
																						"package": "react-router",
																						"qualifiedName": "SessionIdStorageStrategy.FlashData",
																						"refersToTypeParameter": true
																					}
																				},
																				"nameType": {
																					"type": "templateLiteral",
																					"head": "__flash_",
																					"tail": [
																						[
																							{
																								"type": "intersection",
																								"types": [
																									{
																										"type": "reference",
																										"target": 4515,
																										"name": "Key",
																										"package": "react-router",
																										"refersToTypeParameter": true
																									},
																									{
																										"type": "intrinsic",
																										"name": "string"
																									}
																								]
																							},
																							"__"
																						]
																					]
																				}
																			}
																		]
																	}
																],
																"name": "Partial",
																"package": "typescript"
															}
														]
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 4550,
							"name": "updateData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Updates data for the given session id."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 236,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L236"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4551,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 236,
											"character": 14,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L236"
										}
									],
									"signatures": [
										{
											"id": 4552,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 236,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L236"
												}
											],
											"parameters": [
												{
													"id": 4553,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4554,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 4556,
																		"name": "Data",
																		"package": "react-router",
																		"qualifiedName": "SessionIdStorageStrategy.Data",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "mapped",
																		"parameter": "Key",
																		"parameterType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "intrinsic",
																					"name": "symbol"
																				}
																			]
																		},
																		"templateType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": 4515,
																				"name": "Key",
																				"package": "react-router",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 4557,
																				"name": "FlashData",
																				"package": "react-router",
																				"qualifiedName": "SessionIdStorageStrategy.FlashData",
																				"refersToTypeParameter": true
																			}
																		},
																		"nameType": {
																			"type": "templateLiteral",
																			"head": "__flash_",
																			"tail": [
																				[
																					{
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reference",
																								"target": 4515,
																								"name": "Key",
																								"package": "react-router",
																								"refersToTypeParameter": true
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						]
																					},
																					"__"
																				]
																			]
																		}
																	}
																]
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												},
												{
													"id": 4555,
													"name": "expires",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4534,
								4537,
								4542,
								4546,
								4550
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 210,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L210"
						}
					],
					"typeParameters": [
						{
							"id": 4556,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 4530,
								"name": "SessionData",
								"package": "react-router"
							}
						},
						{
							"id": 4557,
							"name": "FlashData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 4556,
								"name": "Data",
								"package": "react-router",
								"qualifiedName": "SessionIdStorageStrategy.Data",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 4558,
					"name": "SessionStorage",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SessionStorage stores session data between HTTP requests and knows how to\nparse and create cookies.\n\nA SessionStorage creates Session objects using a "
							},
							{
								"kind": "code",
								"text": "`Cookie`"
							},
							{
								"kind": "text",
								"text": " header as input.\nThen, later it generates the "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " header to be used in the response."
							}
						]
					},
					"children": [
						{
							"id": 4559,
							"name": "commitSession",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stores all data in the Session and returns the Set-Cookie header to be\nused in the HTTP response."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 186,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L186"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4560,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 186,
											"character": 17,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L186"
										}
									],
									"signatures": [
										{
											"id": 4561,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 186,
													"character": 17,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L186"
												}
											],
											"parameters": [
												{
													"id": 4562,
													"name": "session",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 4505,
														"typeArguments": [
															{
																"type": "reference",
																"target": 4574,
																"name": "Data",
																"package": "react-router",
																"qualifiedName": "SessionStorage.Data",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 4575,
																"name": "FlashData",
																"package": "react-router",
																"qualifiedName": "SessionStorage.FlashData",
																"refersToTypeParameter": true
															}
														],
														"name": "Session",
														"package": "react-router"
													}
												},
												{
													"id": 4563,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 2955,
														"name": "SerializeOptions",
														"package": "cookie"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 4564,
							"name": "destroySession",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Deletes all data associated with the Session and returns the Set-Cookie\nheader to be used in the HTTP response."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 195,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L195"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4565,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 195,
											"character": 18,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L195"
										}
									],
									"signatures": [
										{
											"id": 4566,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 195,
													"character": 18,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L195"
												}
											],
											"parameters": [
												{
													"id": 4567,
													"name": "session",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 4505,
														"typeArguments": [
															{
																"type": "reference",
																"target": 4574,
																"name": "Data",
																"package": "react-router",
																"qualifiedName": "SessionStorage.Data",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 4575,
																"name": "FlashData",
																"package": "react-router",
																"qualifiedName": "SessionStorage.FlashData",
																"refersToTypeParameter": true
															}
														],
														"name": "Session",
														"package": "react-router"
													}
												},
												{
													"id": 4568,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 2955,
														"name": "SerializeOptions",
														"package": "cookie"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 4569,
							"name": "getSession",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parses a Cookie header from a HTTP request and returns the associated\nSession. If there is no session associated with the cookie, this will\nreturn a new Session with no data."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 177,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L177"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4570,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 177,
											"character": 14,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L177"
										}
									],
									"signatures": [
										{
											"id": 4571,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 177,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L177"
												}
											],
											"parameters": [
												{
													"id": 4572,
													"name": "cookieHeader",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 4573,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 2950,
														"name": "ParseOptions",
														"package": "cookie"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 4505,
														"typeArguments": [
															{
																"type": "reference",
																"target": 4574,
																"name": "Data",
																"package": "react-router",
																"qualifiedName": "SessionStorage.Data",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 4575,
																"name": "FlashData",
																"package": "react-router",
																"qualifiedName": "SessionStorage.FlashData",
																"refersToTypeParameter": true
															}
														],
														"name": "Session",
														"package": "react-router"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4559,
								4564,
								4569
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 171,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L171"
						}
					],
					"typeParameters": [
						{
							"id": 4574,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 4530,
								"name": "SessionData",
								"package": "react-router"
							}
						},
						{
							"id": 4575,
							"name": "FlashData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 4574,
								"name": "Data",
								"package": "react-router",
								"qualifiedName": "SessionStorage.Data",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 4576,
					"name": "ShouldRevalidateFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Route shouldRevalidate function signature.  This runs after any submission\n(navigation or fetcher), so we flatten the navigation/fetcher submission\nonto the arguments.  It shouldn't matter whether it came from a navigation\nor a fetcher, what really matters is the URLs and the formData since loaders\nhave to re-run based on the data models that were potentially mutated."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 191,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L191"
						}
					],
					"signatures": [
						{
							"id": 4577,
							"name": "ShouldRevalidateFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 192,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L192"
								}
							],
							"parameters": [
								{
									"id": 4578,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4579,
										"name": "ShouldRevalidateFunctionArgs",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 4579,
					"name": "ShouldRevalidateFunctionArgs",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Arguments passed to shouldRevalidate function"
							}
						]
					},
					"children": [
						{
							"id": 4580,
							"name": "actionResult",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 180,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L180"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4581,
							"name": "actionStatus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 179,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L179"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4582,
							"name": "currentParams",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 170,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L170"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							}
						},
						{
							"id": 4583,
							"name": "currentUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 169,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L169"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URL"
								},
								"name": "URL",
								"package": "typescript"
							}
						},
						{
							"id": 4584,
							"name": "defaultShouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 181,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L181"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4585,
							"name": "formAction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 174,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L174"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4586,
							"name": "formData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 177,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L177"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "FormData"
								},
								"name": "FormData",
								"package": "typescript"
							}
						},
						{
							"id": 4587,
							"name": "formEncType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 175,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L175"
								}
							],
							"type": {
								"type": "reference",
								"target": 4735,
								"name": "FormEncType",
								"package": "react-router"
							}
						},
						{
							"id": 4588,
							"name": "formMethod",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 173,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L173"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "GET"
									},
									{
										"type": "literal",
										"value": "POST"
									},
									{
										"type": "literal",
										"value": "PUT"
									},
									{
										"type": "literal",
										"value": "PATCH"
									},
									{
										"type": "literal",
										"value": "DELETE"
									}
								]
							}
						},
						{
							"id": 4589,
							"name": "json",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 178,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L178"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "JsonValue"
								},
								"name": "JsonValue",
								"package": "react-router"
							}
						},
						{
							"id": 4590,
							"name": "nextParams",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 172,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L172"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							}
						},
						{
							"id": 4591,
							"name": "nextUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 171,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L171"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URL"
								},
								"name": "URL",
								"package": "typescript"
							}
						},
						{
							"id": 4592,
							"name": "text",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 176,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L176"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4580,
								4581,
								4582,
								4583,
								4584,
								4585,
								4586,
								4587,
								4588,
								4589,
								4590,
								4591,
								4592
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 168,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L168"
						}
					]
				},
				{
					"id": 4593,
					"name": "StaticHandler",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A StaticHandler instance manages a singular SSR navigation/fetch event"
							}
						]
					},
					"children": [
						{
							"id": 4594,
							"name": "dataRoutes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 396,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L396"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/utils.ts",
										"qualifiedName": "AgnosticDataRouteObject"
									},
									"name": "AgnosticDataRouteObject",
									"package": "react-router"
								}
							}
						},
						{
							"id": 4595,
							"name": "query",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 397,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L397"
								}
							],
							"signatures": [
								{
									"id": 4596,
									"name": "query",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 397,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L397"
										}
									],
									"parameters": [
										{
											"id": 4597,
											"name": "request",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Request"
												},
												"name": "Request",
												"package": "typescript"
											}
										},
										{
											"id": 4598,
											"name": "opts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4599,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 4600,
															"name": "dataStrategy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 402,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L402"
																}
															],
															"type": {
																"type": "reference",
																"target": 2977,
																"name": "DataStrategyFunction",
																"package": "react-router"
															}
														},
														{
															"id": 4601,
															"name": "requestContext",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 400,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L400"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 4602,
															"name": "skipLoaderErrorBubbling",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 401,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L401"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																4600,
																4601,
																4602
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 399,
															"character": 11,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L399"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Response"
														},
														"name": "Response",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 4611,
														"name": "StaticHandlerContext",
														"package": "react-router"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 4603,
							"name": "queryRoute",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 405,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L405"
								}
							],
							"signatures": [
								{
									"id": 4604,
									"name": "queryRoute",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 405,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L405"
										}
									],
									"parameters": [
										{
											"id": 4605,
											"name": "request",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Request"
												},
												"name": "Request",
												"package": "typescript"
											}
										},
										{
											"id": 4606,
											"name": "opts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4607,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 4608,
															"name": "dataStrategy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 410,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L410"
																}
															],
															"type": {
																"type": "reference",
																"target": 2977,
																"name": "DataStrategyFunction",
																"package": "react-router"
															}
														},
														{
															"id": 4609,
															"name": "requestContext",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 409,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L409"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 4610,
															"name": "routeId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 408,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L408"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																4608,
																4609,
																4610
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 407,
															"character": 11,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L407"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4594
							]
						},
						{
							"title": "Methods",
							"children": [
								4595,
								4603
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 395,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L395"
						}
					]
				},
				{
					"id": 4611,
					"name": "StaticHandlerContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "State returned from a server-side query() call"
							}
						]
					},
					"children": [
						{
							"id": 4612,
							"name": "_deepestRenderedBoundaryId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 389,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L389"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4613,
							"name": "actionData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 384,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L384"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "RouteData"
										},
										"name": "RouteData",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 4614,
							"name": "actionHeaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 388,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L388"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 4615,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 380,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L380"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 4616,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 385,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L385"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "RouteData"
										},
										"name": "RouteData",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 4617,
							"name": "loaderData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 383,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L383"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "RouteData"
								},
								"name": "RouteData",
								"package": "react-router"
							}
						},
						{
							"id": 4618,
							"name": "loaderHeaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 387,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L387"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 4619,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 381,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L381"
								}
							],
							"type": {
								"type": "reference",
								"target": 3994,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Location",
								"package": "react-router"
							}
						},
						{
							"id": 4620,
							"name": "matches",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 382,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L382"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/utils.ts",
										"qualifiedName": "AgnosticDataRouteMatch"
									},
									"name": "AgnosticDataRouteMatch",
									"package": "react-router"
								}
							}
						},
						{
							"id": 4621,
							"name": "statusCode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 386,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L386"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4612,
								4613,
								4614,
								4615,
								4616,
								4617,
								4618,
								4619,
								4620,
								4621
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 379,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L379"
						}
					]
				},
				{
					"id": 4622,
					"name": "StaticRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4623,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 40,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4624,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 41,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L41"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 4625,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 42,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L42"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3994,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Location",
												"package": "react-router"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4623,
								4624,
								4625
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 39,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L39"
						}
					]
				},
				{
					"id": 4626,
					"name": "StaticRouterProviderProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4627,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 83,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L83"
								}
							],
							"type": {
								"type": "reference",
								"target": 4611,
								"name": "StaticHandlerContext",
								"package": "react-router"
							}
						},
						{
							"id": 4628,
							"name": "hydrate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 85,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L85"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4629,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 86,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L86"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4630,
							"name": "router",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 84,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L84"
								}
							],
							"type": {
								"type": "reference",
								"target": 2976,
								"name": "Router",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4627,
								4628,
								4629,
								4630
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 82,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L82"
						}
					]
				},
				{
					"id": 4631,
					"name": "SubmitFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Submits a HTML "
							},
							{
								"kind": "code",
								"text": "`<form>`"
							},
							{
								"kind": "text",
								"text": " to the server without reloading the page."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1430,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1430"
						}
					],
					"signatures": [
						{
							"id": 4632,
							"name": "SubmitFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1431,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1431"
								}
							],
							"parameters": [
								{
									"id": 4633,
									"name": "target",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Can be multiple types of elements and objects\n\n**"
											},
											{
												"kind": "code",
												"text": "`HTMLFormElement`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\n<Form\n  onSubmit={(event) => {\n    submit(event.currentTarget);\n  }}\n/>\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**"
											},
											{
												"kind": "code",
												"text": "`FormData`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nconst formData = new FormData();\nformData.append(\"myKey\", \"myValue\");\nsubmit(formData, { method: \"post\" });\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**Plain object that will be serialized as "
											},
											{
												"kind": "code",
												"text": "`FormData`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nsubmit({ myKey: \"myValue\" }, { method: \"post\" });\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**Plain object that will be serialized as JSON**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nsubmit(\n  { myKey: \"myValue\" },\n  { method: \"post\", encType: \"application/json\" }\n);\n```"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4865,
										"name": "SubmitTarget",
										"package": "react-router"
									}
								},
								{
									"id": 4634,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options that override the "
											},
											{
												"kind": "code",
												"text": "`<form>`"
											},
											{
												"kind": "text",
												"text": "'s own attributes. Required when\nsubmitting arbitrary data without a backing "
											},
											{
												"kind": "code",
												"text": "`<form>`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4635,
										"name": "SubmitOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4635,
					"name": "SubmitOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Submit options available to navigations"
							}
						]
					},
					"children": [
						{
							"id": 4636,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The action URL path used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form action>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to the path of the current route."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 170,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L170"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3312,
								"name": "FetcherSubmitOptions.action"
							}
						},
						{
							"id": 4637,
							"name": "encType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The encoding used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form encType>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to \"application/x-www-form-urlencoded\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 176,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L176"
								}
							],
							"type": {
								"type": "reference",
								"target": 4735,
								"name": "FormEncType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3313,
								"name": "FetcherSubmitOptions.encType"
							}
						},
						{
							"id": 4638,
							"name": "fetcherKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicate a specific fetcherKey to use when using navigate=false"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 221,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L221"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4639,
							"name": "flushSync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable flushSync for this submission's state updates"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 194,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L194"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3314,
								"name": "FetcherSubmitOptions.flushSync"
							}
						},
						{
							"id": 4640,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HTTP method used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form method>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to \"GET\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 164,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L164"
								}
							],
							"type": {
								"type": "reference",
								"target": 4743,
								"name": "HTMLFormMethod",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3315,
								"name": "FetcherSubmitOptions.method"
							}
						},
						{
							"id": 4641,
							"name": "navigate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "navigate=false will use a fetcher instead of a navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 226,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L226"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4642,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In browser-based environments, prevent resetting scroll after this\nnavigation when using the <ScrollRestoration> component"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 189,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L189"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3316,
								"name": "FetcherSubmitOptions.preventScrollReset"
							}
						},
						{
							"id": 4643,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 183,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L183"
								}
							],
							"type": {
								"type": "reference",
								"target": 4841,
								"name": "RelativeRoutingType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3317,
								"name": "FetcherSubmitOptions.relative"
							}
						},
						{
							"id": 4644,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " to replace the current entry in the browser's history stack\ninstead of creating a new one (i.e. stay on \"the same page\"). Defaults\nto "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 211,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L211"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4645,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "State object to add to the history stack entry for this navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 216,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L216"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4646,
							"name": "viewTransition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable view transitions on this submission navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 231,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L231"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4636,
								4637,
								4638,
								4639,
								4640,
								4641,
								4642,
								4643,
								4644,
								4645,
								4646
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 205,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L205"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 3311,
							"name": "FetcherSubmitOptions",
							"package": "react-router"
						}
					]
				},
				{
					"id": 4647,
					"name": "UIMatch",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4648,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 559,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L559"
								}
							],
							"type": {
								"type": "reference",
								"target": 4653,
								"name": "Data",
								"package": "react-router",
								"qualifiedName": "UIMatch.Data",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 4649,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 560,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L560"
								}
							],
							"type": {
								"type": "reference",
								"target": 4654,
								"name": "Handle",
								"package": "react-router",
								"qualifiedName": "UIMatch.Handle",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 4650,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 556,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L556"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4651,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 558,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L558"
								}
							],
							"type": {
								"type": "reference",
								"target": 4830,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							}
						},
						{
							"id": 4652,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 557,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L557"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4648,
								4649,
								4650,
								4651,
								4652
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 555,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L555"
						}
					],
					"typeParameters": [
						{
							"id": 4653,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 4654,
							"name": "Handle",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 4655,
					"name": "UNSAFE_AssetsManifest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 4656,
							"name": "entry",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L46"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4657,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4658,
											"name": "imports",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 47,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L47"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 4659,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 48,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L48"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4658,
												4659
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"line": 46,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L46"
										}
									]
								}
							}
						},
						{
							"id": 4660,
							"name": "hmr",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L53"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4661,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4662,
											"name": "runtime",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 55,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L55"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4663,
											"name": "timestamp",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 54,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L54"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4662,
												4663
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"line": 53,
											"character": 8,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L53"
										}
									]
								}
							}
						},
						{
							"id": 4664,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L50"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "RouteManifest"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
											"qualifiedName": "EntryRoute"
										},
										"name": "EntryRoute",
										"package": "react-router"
									}
								],
								"name": "RouteManifest",
								"package": "react-router"
							}
						},
						{
							"id": 4665,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L51"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4666,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4656,
								4660,
								4664,
								4665,
								4666
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
							"line": 45,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/entry.ts#L45"
						}
					]
				},
				{
					"id": 4667,
					"name": "UNSAFE_RouteModules",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 17,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L17"
						}
					],
					"indexSignatures": [
						{
							"id": 4668,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L18"
								}
							],
							"parameters": [
								{
									"id": 4669,
									"name": "routeId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"qualifiedName": "RouteModule"
										},
										"name": "RouteModule",
										"package": "react-router"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 4670,
					"name": "Blocker",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 653,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L653"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "BlockerUnblocked"
								},
								"name": "BlockerUnblocked",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "BlockerBlocked"
								},
								"name": "BlockerBlocked",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "BlockerProceeding"
								},
								"name": "BlockerProceeding",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 4671,
					"name": "BlockerFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 655,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L655"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4672,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 655,
									"character": 30,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L655"
								}
							],
							"signatures": [
								{
									"id": 4673,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4674,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4675,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 4676,
															"name": "currentLocation",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 656,
																	"character": 2,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L656"
																}
															],
															"type": {
																"type": "reference",
																"target": 3994,
																"name": "Location",
																"package": "react-router"
															}
														},
														{
															"id": 4677,
															"name": "historyAction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 658,
																	"character": 2,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L658"
																}
															],
															"type": {
																"type": "reference",
																"target": 2812,
																"name": "NavigationType",
																"package": "react-router",
																"qualifiedName": "Action"
															}
														},
														{
															"id": 4678,
															"name": "nextLocation",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 657,
																	"character": 2,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L657"
																}
															],
															"type": {
																"type": "reference",
																"target": 3994,
																"name": "Location",
																"package": "react-router"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																4676,
																4677,
																4678
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 655,
															"character": 37,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L655"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 4679,
					"name": "ClientActionFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that handles data mutations for a route on the client"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 37,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L37"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4680,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 37,
									"character": 35,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L37"
								}
							],
							"signatures": [
								{
									"id": 4681,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4682,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4683,
												"name": "ClientActionFunctionArgs",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "ReturnType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2916,
												"name": "ActionFunction",
												"package": "react-router"
											}
										],
										"name": "ReturnType",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 4683,
					"name": "ClientActionFunctionArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Arguments passed to a route "
							},
							{
								"kind": "code",
								"text": "`clientAction`"
							},
							{
								"kind": "text",
								"text": " function"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 44,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L44"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 2921,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "ActionFunctionArgs",
								"package": "react-router"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4684,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4685,
											"name": "serverAction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 45,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L45"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4686,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
															"line": 45,
															"character": 16,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L45"
														}
													],
													"signatures": [
														{
															"id": 4687,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"typeParameters": [
																{
																	"id": 4688,
																	"name": "T",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"default": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router/lib/types/route-data.ts",
																			"qualifiedName": "SerializeFrom"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 4688,
																				"name": "T",
																				"package": "react-router",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "SerializeFrom",
																		"package": "react-router"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4685
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 44,
											"character": 71,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L44"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 4689,
					"name": "ClientLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that loads data for a route on the client"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 51,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L51"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 4690,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 51,
											"character": 36,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L51"
										}
									],
									"signatures": [
										{
											"id": 4691,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4692,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 4695,
														"name": "ClientLoaderFunctionArgs",
														"package": "react-router"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReturnType"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 4758,
														"name": "LoaderFunction",
														"package": "react-router"
													}
												],
												"name": "ReturnType",
												"package": "typescript"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4693,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4694,
											"name": "hydrate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 54,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L54"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4694
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 53,
											"character": 35,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L53"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 4695,
					"name": "ClientLoaderFunctionArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Arguments passed to a route "
							},
							{
								"kind": "code",
								"text": "`clientLoader`"
							},
							{
								"kind": "text",
								"text": " function"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 60,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L60"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 3989,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "LoaderFunctionArgs",
								"package": "react-router"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4696,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4697,
											"name": "serverLoader",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 61,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L61"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4698,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
															"line": 61,
															"character": 16,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L61"
														}
													],
													"signatures": [
														{
															"id": 4699,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"typeParameters": [
																{
																	"id": 4700,
																	"name": "T",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"default": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router/lib/types/route-data.ts",
																			"qualifiedName": "SerializeFrom"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 4700,
																				"name": "T",
																				"package": "react-router",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "SerializeFrom",
																		"package": "react-router"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4697
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 60,
											"character": 71,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L60"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 4701,
					"name": "CookieOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 24,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L24"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 2950,
								"name": "ParseOptions",
								"package": "cookie"
							},
							{
								"type": "reference",
								"target": 2955,
								"name": "SerializeOptions",
								"package": "cookie"
							},
							{
								"type": "reference",
								"target": 2969,
								"name": "CookieSignatureOptions",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 4702,
					"name": "CreateRequestHandlerFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/server.ts",
							"line": 40,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/server.ts#L40"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4703,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/server.ts",
									"line": 40,
									"character": 43,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/server.ts#L40"
								}
							],
							"signatures": [
								{
									"id": 4704,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4705,
											"name": "build",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 4485,
														"name": "ServerBuild",
														"package": "react-router"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 4706,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/server-runtime/server.ts",
																	"line": 41,
																	"character": 24,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/server.ts#L41"
																}
															],
															"signatures": [
																{
																	"id": 4707,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": 4485,
																				"name": "ServerBuild",
																				"package": "react-router"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 4485,
																						"name": "ServerBuild",
																						"package": "react-router"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 4708,
											"name": "mode",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 4842,
										"name": "RequestHandler",
										"package": "react-router"
									}
								}
							]
						}
					}
				},
				{
					"id": 4709,
					"name": "DataRouteObject",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 67,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L67"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 4848,
								"name": "RouteObject",
								"package": "react-router"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4710,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4711,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/context.ts",
													"line": 68,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L68"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4709,
													"name": "DataRouteObject",
													"package": "react-router"
												}
											}
										},
										{
											"id": 4712,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/context.ts",
													"line": 69,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L69"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4711,
												4712
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/context.ts",
											"line": 67,
											"character": 44,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L67"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 4713,
					"name": "ErrorResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1427,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1427"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4714,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4715,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 1430,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1430"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 4716,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 1428,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1428"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4717,
									"name": "statusText",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 1429,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1429"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4715,
										4716,
										4717
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1427,
									"character": 28,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1427"
								}
							]
						}
					}
				},
				{
					"id": 4718,
					"name": "Fetcher",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 629,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L629"
						}
					],
					"typeParameters": [
						{
							"id": 4719,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "FetcherStates"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4719,
										"name": "TData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "FetcherStates",
								"package": "react-router"
							}
						},
						"objectType": {
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/router.ts",
								"qualifiedName": "FetcherStates"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 4719,
									"name": "TData",
									"package": "react-router",
									"refersToTypeParameter": true
								}
							],
							"name": "FetcherStates",
							"package": "react-router"
						}
					}
				},
				{
					"id": 4720,
					"name": "FetcherWithComponents",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return value of "
							},
							{
								"kind": "code",
								"text": "`useFetcher`"
							},
							{
								"kind": "text",
								"text": " that keeps track of the state of a fetcher.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nlet fetcher = useFetcher();\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1676,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1676"
						}
					],
					"typeParameters": [
						{
							"id": 4721,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 4718,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4721,
										"name": "TData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "Fetcher",
								"package": "react-router"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4722,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4723,
											"name": "Form",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Just like "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Form",
														"target": 4975
													},
													{
														"kind": "text",
														"text": " except it doesn't cause a navigation.\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\nfunction SomeComponent() {\n  const fetcher = useFetcher()\n  return (\n    <fetcher.Form method=\"post\" action=\"/some/route\">\n      <input type=\"text\" />\n    </fetcher.Form>\n  )\n}\n```"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1691,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1691"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ForwardRefExoticComponent"
												},
												"typeArguments": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": 3028,
																"name": "FetcherFormProps",
																"package": "react-router"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.RefAttributes"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "HTMLFormElement"
																		},
																		"name": "HTMLFormElement",
																		"package": "typescript"
																	}
																],
																"name": "React.RefAttributes",
																"package": "@types/react"
															}
														]
													}
												],
												"name": "React.ForwardRefExoticComponent",
												"package": "@types/react"
											}
										},
										{
											"id": 4724,
											"name": "load",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Loads data from a route. Useful for loading data imperatively inside of user events outside of a normal button or form, like a combobox or search input.\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\nlet fetcher = useFetcher()\n\n<input onChange={e => {\n  fetcher.load(`/search?q=${e.target.value}`)\n}} />\n```"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1751,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1751"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4725,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1751,
															"character": 8,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1751"
														}
													],
													"signatures": [
														{
															"id": 4726,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 4727,
																	"name": "href",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 4728,
																	"name": "opts",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 4729,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 4730,
																					"name": "flushSync",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Wraps the initial state update for this "
																							},
																							{
																								"kind": "code",
																								"text": "`fetcher.load`"
																							},
																							{
																								"kind": "text",
																								"text": " in a\n"
																							},
																							{
																								"kind": "code",
																								"text": "`ReactDOM.flushSync`"
																							},
																							{
																								"kind": "text",
																								"text": " call instead of the default "
																							},
																							{
																								"kind": "code",
																								"text": "`React.startTransition`"
																							},
																							{
																								"kind": "text",
																								"text": ".\nThis allows you to perform synchronous DOM actions immediately after the\nupdate is flushed to the DOM."
																							}
																						]
																					},
																					"sources": [
																						{
																							"fileName": "packages/react-router/lib/dom/lib.tsx",
																							"line": 1760,
																							"character": 6,
																							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1760"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						4730
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "packages/react-router/lib/dom/lib.tsx",
																					"line": 1753,
																					"character": 11,
																					"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1753"
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 4731,
											"name": "submit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Submits form data to a route. While multiple nested routes can match a URL, only the leaf route will be called.\n\nThe "
													},
													{
														"kind": "code",
														"text": "`formData`"
													},
													{
														"kind": "text",
														"text": " can be multiple types:\n\n- ["
													},
													{
														"kind": "code",
														"text": "`FormData`"
													},
													{
														"kind": "text",
														"text": "][form_data] - A "
													},
													{
														"kind": "code",
														"text": "`FormData`"
													},
													{
														"kind": "text",
														"text": " instance.\n- ["
													},
													{
														"kind": "code",
														"text": "`HTMLFormElement`"
													},
													{
														"kind": "text",
														"text": "][html_form_element] - A ["
													},
													{
														"kind": "code",
														"text": "`<form>`"
													},
													{
														"kind": "text",
														"text": "][form_element] DOM element.\n- "
													},
													{
														"kind": "code",
														"text": "`Object`"
													},
													{
														"kind": "text",
														"text": " - An object of key/value pairs that will be converted to a "
													},
													{
														"kind": "code",
														"text": "`FormData`"
													},
													{
														"kind": "text",
														"text": " instance by default. You can pass a more complex object and serialize it as JSON by specifying "
													},
													{
														"kind": "code",
														"text": "`encType: \"application/json\"`"
													},
													{
														"kind": "text",
														"text": ". See ["
													},
													{
														"kind": "code",
														"text": "`useSubmit`"
													},
													{
														"kind": "text",
														"text": "][use-submit] for more details.\n\nIf the method is "
													},
													{
														"kind": "code",
														"text": "`GET`"
													},
													{
														"kind": "text",
														"text": ", then the route ["
													},
													{
														"kind": "code",
														"text": "`loader`"
													},
													{
														"kind": "text",
														"text": "][loader] is being called and with the "
													},
													{
														"kind": "code",
														"text": "`formData`"
													},
													{
														"kind": "text",
														"text": " serialized to the url as ["
													},
													{
														"kind": "code",
														"text": "`URLSearchParams`"
													},
													{
														"kind": "text",
														"text": "][url_search_params]. If "
													},
													{
														"kind": "code",
														"text": "`DELETE`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`PATCH`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`POST`"
													},
													{
														"kind": "text",
														"text": ", or "
													},
													{
														"kind": "code",
														"text": "`PUT`"
													},
													{
														"kind": "text",
														"text": ", then the route ["
													},
													{
														"kind": "code",
														"text": "`action`"
													},
													{
														"kind": "text",
														"text": "][action] is being called with "
													},
													{
														"kind": "code",
														"text": "`formData`"
													},
													{
														"kind": "text",
														"text": " as the body.\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\n// Submit a FormData instance (GET request)\nconst formData = new FormData();\nfetcher.submit(formData);\n\n// Submit the HTML form element\nfetcher.submit(event.currentTarget.form, {\n  method: \"POST\",\n});\n\n// Submit key/value JSON as a FormData instance\nfetcher.submit(\n  { serialized: \"values\" },\n  { method: \"POST\" }\n);\n\n// Submit raw JSON\nfetcher.submit(\n  {\n    deeply: {\n      nested: {\n        json: \"values\",\n      },\n    },\n  },\n  {\n    method: \"POST\",\n    encType: \"application/json\",\n  }\n);\n```"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1738,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1738"
												}
											],
											"type": {
												"type": "reference",
												"target": 3307,
												"name": "FetcherSubmitFunction",
												"package": "react-router"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4723,
												4724,
												4731
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 1676,
											"character": 60,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1676"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 4732,
					"name": "FlashSessionData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 72,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L72"
						}
					],
					"typeParameters": [
						{
							"id": 4733,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 4734,
							"name": "FlashData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 4733,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									},
									{
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 4734,
												"name": "FlashData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										},
										"templateType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 4515,
												"name": "Key",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 4734,
												"name": "FlashData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										},
										"nameType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
												"qualifiedName": "FlashDataKey"
											},
											"typeArguments": [
												{
													"type": "intersection",
													"types": [
														{
															"type": "reference",
															"target": 4515,
															"name": "Key",
															"package": "react-router",
															"refersToTypeParameter": true
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											],
											"name": "FlashDataKey",
											"package": "react-router"
										}
									}
								]
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 4735,
					"name": "FormEncType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 68,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L68"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"type": "literal",
								"value": "multipart/form-data"
							},
							{
								"type": "literal",
								"value": "application/json"
							},
							{
								"type": "literal",
								"value": "text/plain"
							}
						]
					}
				},
				{
					"id": 4736,
					"name": "FormMethod",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Active navigation/fetcher form methods are exposed in uppercase on the\nRouterState. This is to align with the normalization done via fetch()."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 65,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L65"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "packages/react-router/lib/router/utils.ts",
							"qualifiedName": "UpperCaseFormMethod"
						},
						"name": "UpperCaseFormMethod",
						"package": "react-router"
					}
				},
				{
					"id": 4737,
					"name": "HeadersArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
							"line": 13,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/routeModules.ts#L13"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4738,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4739,
									"name": "actionHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
											"line": 16,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/routeModules.ts#L16"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								},
								{
									"id": 4740,
									"name": "errorHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
											"line": 17,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/routeModules.ts#L17"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Headers"
												},
												"name": "Headers",
												"package": "typescript"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 4741,
									"name": "loaderHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/routeModules.ts#L14"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								},
								{
									"id": 4742,
									"name": "parentHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/routeModules.ts#L15"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4739,
										4740,
										4741,
										4742
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
									"line": 13,
									"character": 26,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/routeModules.ts#L13"
								}
							]
						}
					}
				},
				{
					"id": 4743,
					"name": "HTMLFormMethod",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Users can specify either lowercase or uppercase form methods on "
							},
							{
								"kind": "code",
								"text": "`<Form>`"
							},
							{
								"kind": "text",
								"text": ",\nuseSubmit(), "
							},
							{
								"kind": "code",
								"text": "`<fetcher.Form>`"
							},
							{
								"kind": "text",
								"text": ", etc."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 59,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L59"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "LowerCaseFormMethod"
								},
								"name": "LowerCaseFormMethod",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "UpperCaseFormMethod"
								},
								"name": "UpperCaseFormMethod",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 4744,
					"name": "HtmlLinkDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a "
							},
							{
								"kind": "code",
								"text": "`<link>`"
							},
							{
								"kind": "text",
								"text": " element.\n\nWHATWG Specification: https://html.spec.whatwg.org/multipage/semantics.html#the-link-element"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/links.ts",
							"line": 165,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L165"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/links.ts",
											"qualifiedName": "HtmlLinkProps"
										},
										"name": "HtmlLinkProps",
										"package": "react-router"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Required"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/router/links.ts",
															"qualifiedName": "HtmlLinkProps"
														},
														"name": "HtmlLinkProps",
														"package": "react-router"
													}
												],
												"name": "Required",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": "href"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/links.ts",
											"qualifiedName": "HtmlLinkPreloadImage"
										},
										"name": "HtmlLinkPreloadImage",
										"package": "react-router"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Required"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/router/links.ts",
															"qualifiedName": "HtmlLinkPreloadImage"
														},
														"name": "HtmlLinkPreloadImage",
														"package": "react-router"
													}
												],
												"name": "Required",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": "imageSizes"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/links.ts",
											"qualifiedName": "HtmlLinkPreloadImage"
										},
										"name": "HtmlLinkPreloadImage",
										"package": "react-router"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Required"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/router/links.ts",
															"qualifiedName": "HtmlLinkPreloadImage"
														},
														"name": "HtmlLinkPreloadImage",
														"package": "react-router"
													}
												],
												"name": "Required",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": "href"
											}
										],
										"name": "Pick",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4745,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4746,
													"name": "imageSizes",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/links.ts",
															"line": 171,
															"character": 55,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L171"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "never"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4746
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/links.ts",
													"line": 171,
													"character": 53,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L171"
												}
											]
										}
									}
								]
							}
						]
					}
				},
				{
					"id": 4747,
					"name": "HydrationState",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data that can be passed into hydrate a Router from SSR"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 352,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L352"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4455,
										"name": "RouterState",
										"package": "react-router"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "loaderData"
											},
											{
												"type": "literal",
												"value": "actionData"
											},
											{
												"type": "literal",
												"value": "errors"
											}
										]
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 4748,
					"name": "InitialEntry",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A user-supplied object that describes a location. Used when providing\nentries to "
							},
							{
								"kind": "code",
								"text": "`createMemoryHistory`"
							},
							{
								"kind": "text",
								"text": " via its "
							},
							{
								"kind": "code",
								"text": "`initialEntries`"
							},
							{
								"kind": "text",
								"text": " option."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 205,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L205"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3994,
										"name": "Location",
										"package": "react-router"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4749,
					"name": "IsCookieFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 126,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L126"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4750,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 126,
									"character": 31,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L126"
								}
							],
							"signatures": [
								{
									"id": 4751,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4752,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "object",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": 2938,
											"name": "Cookie",
											"package": "react-router"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 4753,
					"name": "IsSessionFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 144,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L144"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4754,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 144,
									"character": 32,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L144"
								}
							],
							"signatures": [
								{
									"id": 4755,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4756,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "object",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": 4505,
											"name": "Session",
											"package": "react-router"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 4757,
					"name": "LinkDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/links.ts",
							"line": 192,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/links.ts#L192"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 4744,
								"name": "HtmlLinkDescriptor",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": 4379,
								"name": "PageLinkDescriptor",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 4758,
					"name": "LoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Route loader function signature"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 148,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L148"
						}
					],
					"typeParameters": [
						{
							"id": 4759,
							"name": "Context",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 4760,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 148,
											"character": 44,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L148"
										}
									],
									"signatures": [
										{
											"id": 4761,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/utils.ts",
													"line": 149,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L149"
												}
											],
											"parameters": [
												{
													"id": 4762,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 3989,
														"typeArguments": [
															{
																"type": "reference",
																"target": 4759,
																"name": "Context",
																"package": "react-router",
																"refersToTypeParameter": true
															}
														],
														"name": "LoaderFunctionArgs",
														"package": "react-router"
													}
												},
												{
													"id": 4763,
													"name": "handlerCtx",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/utils.ts",
													"qualifiedName": "DataFunctionReturnValue"
												},
												"name": "DataFunctionReturnValue",
												"package": "react-router"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4764,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4765,
											"name": "hydrate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/utils.ts",
													"line": 153,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L153"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4765
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 153,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L153"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 4766,
					"name": "MetaDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 204,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L204"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 4767,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4768,
											"name": "charSet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 205,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L205"
												}
											],
											"type": {
												"type": "literal",
												"value": "utf-8"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4768
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 205,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L205"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4769,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4770,
											"name": "title",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 206,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L206"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4770
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 206,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L206"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4771,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4772,
											"name": "content",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 207,
													"character": 20,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L207"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4773,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 207,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L207"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4772,
												4773
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 207,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L207"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4774,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4775,
											"name": "content",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 208,
													"character": 24,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L208"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4776,
											"name": "property",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 208,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L208"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4775,
												4776
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 208,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L208"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4777,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4778,
											"name": "content",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 209,
													"character": 25,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L209"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4779,
											"name": "httpEquiv",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 209,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L209"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4778,
												4779
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 209,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L209"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4780,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4781,
											"name": "script:ld+json",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 210,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L210"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"qualifiedName": "LdJsonObject"
												},
												"name": "LdJsonObject",
												"package": "react-router"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4781
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 210,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L210"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4782,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4783,
											"name": "tagName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 211,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L211"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "meta"
													},
													{
														"type": "literal",
														"value": "link"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4783
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 211,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L211"
										}
									],
									"indexSignatures": [
										{
											"id": 4784,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 211,
													"character": 32,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L211"
												}
											],
											"parameters": [
												{
													"id": 4785,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4786,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 212,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L212"
										}
									],
									"indexSignatures": [
										{
											"id": 4787,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 212,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routeModules.ts#L212"
												}
											],
											"parameters": [
												{
													"id": 4788,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 4789,
					"name": "Navigation",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 547,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L547"
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 4790,
								"name": "NavigationStates",
								"package": "react-router"
							}
						},
						"objectType": {
							"type": "reference",
							"target": 4790,
							"name": "NavigationStates",
							"package": "react-router"
						}
					}
				},
				{
					"id": 4790,
					"name": "NavigationStates",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Potential states for state.navigation"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 514,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L514"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4791,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4792,
									"name": "Idle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 515,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L515"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4793,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4794,
													"name": "formAction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 519,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L519"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 4795,
													"name": "formData",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 521,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L521"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 4796,
													"name": "formEncType",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 520,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L520"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 4797,
													"name": "formMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 518,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L518"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 4798,
													"name": "json",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 522,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L522"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 4799,
													"name": "location",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 517,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L517"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 4800,
													"name": "state",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 516,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L516"
														}
													],
													"type": {
														"type": "literal",
														"value": "idle"
													}
												},
												{
													"id": 4801,
													"name": "text",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 523,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L523"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4794,
														4795,
														4796,
														4797,
														4798,
														4799,
														4800,
														4801
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/router.ts",
													"line": 515,
													"character": 8,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L515"
												}
											]
										}
									}
								},
								{
									"id": 4802,
									"name": "Loading",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 525,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L525"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4803,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4804,
													"name": "formAction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 529,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L529"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "formAction"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 4805,
													"name": "formData",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 531,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L531"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "formData"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 4806,
													"name": "formEncType",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 530,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L530"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "formEncType"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 4807,
													"name": "formMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 528,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L528"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "formMethod"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 4808,
													"name": "json",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 532,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L532"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "json"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 4809,
													"name": "location",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 527,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L527"
														}
													],
													"type": {
														"type": "reference",
														"target": 3994,
														"name": "Location",
														"package": "react-router"
													}
												},
												{
													"id": 4810,
													"name": "state",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 526,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L526"
														}
													],
													"type": {
														"type": "literal",
														"value": "loading"
													}
												},
												{
													"id": 4811,
													"name": "text",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 533,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L533"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "text"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4804,
														4805,
														4806,
														4807,
														4808,
														4809,
														4810,
														4811
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/router.ts",
													"line": 525,
													"character": 11,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L525"
												}
											]
										}
									}
								},
								{
									"id": 4812,
									"name": "Submitting",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 535,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L535"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4813,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4814,
													"name": "formAction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 539,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L539"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "formAction"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												},
												{
													"id": 4815,
													"name": "formData",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 541,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L541"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "formData"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												},
												{
													"id": 4816,
													"name": "formEncType",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 540,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L540"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "formEncType"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												},
												{
													"id": 4817,
													"name": "formMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 538,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L538"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "formMethod"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												},
												{
													"id": 4818,
													"name": "json",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 542,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L542"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "json"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												},
												{
													"id": 4819,
													"name": "location",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 537,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L537"
														}
													],
													"type": {
														"type": "reference",
														"target": 3994,
														"name": "Location",
														"package": "react-router"
													}
												},
												{
													"id": 4820,
													"name": "state",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 536,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L536"
														}
													],
													"type": {
														"type": "literal",
														"value": "submitting"
													}
												},
												{
													"id": 4821,
													"name": "text",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 543,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L543"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "text"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4814,
														4815,
														4816,
														4817,
														4818,
														4819,
														4820,
														4821
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/router.ts",
													"line": 535,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L535"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4792,
										4802,
										4812
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 514,
									"character": 31,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L514"
								}
							]
						}
					}
				},
				{
					"id": 4822,
					"name": "NavLinkRenderProps",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The object passed to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NavLink",
								"target": 5028
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`children`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`className`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`style`"
							},
							{
								"kind": "text",
								"text": " prop callbacks to render and style the link based on its state.\n\n"
							},
							{
								"kind": "code",
								"text": "```\n// className\n<NavLink\n  to=\"/messages\"\n  className={({ isActive, isPending }) =>\n    isPending ? \"pending\" : isActive ? \"active\" : \"\"\n  }\n>\n  Messages\n</NavLink>\n\n// style\n<NavLink\n  to=\"/messages\"\n  style={({ isActive, isPending }) => {\n    return {\n      fontWeight: isActive ? \"bold\" : \"\",\n      color: isPending ? \"red\" : \"black\",\n    }\n  )}\n/>\n\n// children\n<NavLink to=\"/tasks\">\n  {({ isActive, isPending }) => (\n    <span className={isActive ? \"active\" : \"\"}>Tasks</span>\n  )}\n</NavLink>\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 698,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L698"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4823,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4824,
									"name": "isActive",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates if the link's URL matches the current location."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 702,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L702"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4825,
									"name": "isPending",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates if the pending location matches the link's URL."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 707,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L707"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4826,
									"name": "isTransitioning",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates if a view transition to the link's URL is in progress. See "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "useViewTransitionState",
												"target": 5279
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 712,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L712"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4824,
										4825,
										4826
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 698,
									"character": 33,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L698"
								}
							]
						}
					}
				},
				{
					"id": 4827,
					"name": "ParamKeyValuePair",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 45,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L45"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4828,
					"name": "ParamParseKey",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 404,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L404"
						}
					],
					"typeParameters": [
						{
							"id": 4829,
							"name": "Segment",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": 4834,
									"typeArguments": [
										{
											"type": "reference",
											"target": 4829,
											"name": "Segment",
											"package": "react-router",
											"refersToTypeParameter": true
										}
									],
									"name": "PathParam",
									"package": "react-router"
								}
							]
						},
						"extendsType": {
							"type": "tuple",
							"elements": [
								{
									"type": "intrinsic",
									"name": "never"
								}
							]
						},
						"trueType": {
							"type": "intrinsic",
							"name": "string"
						},
						"falseType": {
							"type": "reference",
							"target": 4834,
							"typeArguments": [
								{
									"type": "reference",
									"target": 4829,
									"name": "Segment",
									"package": "react-router",
									"refersToTypeParameter": true
								}
							],
							"name": "PathParam",
							"package": "react-router"
						}
					}
				},
				{
					"id": 4830,
					"name": "Params",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The parameters that were parsed from the URL path."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 411,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L411"
						}
					],
					"typeParameters": [
						{
							"id": 4831,
							"name": "Key",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "key",
						"parameterType": {
							"type": "reference",
							"target": 4831,
							"name": "Key",
							"package": "react-router",
							"refersToTypeParameter": true
						},
						"templateType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "undefined"
								}
							]
						},
						"readonlyModifier": "+"
					}
				},
				{
					"id": 4832,
					"name": "PatchRoutesOnNavigationFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 82,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "packages/react-router/lib/router/utils.ts",
							"qualifiedName": "AgnosticPatchRoutesOnNavigationFunction"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 4848,
								"name": "RouteObject",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": 4423,
								"name": "RouteMatch",
								"package": "react-router"
							}
						],
						"name": "AgnosticPatchRoutesOnNavigationFunction",
						"package": "react-router"
					}
				},
				{
					"id": 4833,
					"name": "PatchRoutesOnNavigationFunctionArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 79,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L79"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "packages/react-router/lib/router/utils.ts",
							"qualifiedName": "AgnosticPatchRoutesOnNavigationFunctionArgs"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 4848,
								"name": "RouteObject",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": 4423,
								"name": "RouteMatch",
								"package": "react-router"
							}
						],
						"name": "AgnosticPatchRoutesOnNavigationFunctionArgs",
						"package": "react-router"
					}
				},
				{
					"id": 4834,
					"name": "PathParam",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 379,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L379"
						}
					],
					"typeParameters": [
						{
							"id": 4835,
							"name": "Path",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 4835,
							"name": "Path",
							"package": "react-router",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "*"
								},
								{
									"type": "literal",
									"value": "/*"
								}
							]
						},
						"trueType": {
							"type": "literal",
							"value": "*"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 4835,
								"name": "Path",
								"package": "react-router",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "inferred",
											"name": "Rest"
										},
										"/*"
									]
								]
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "*"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "_PathParam"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/utils.ts",
													"qualifiedName": "Rest"
												},
												"name": "Rest",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "_PathParam",
										"package": "react-router"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "_PathParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4835,
										"name": "Path",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "_PathParam",
								"package": "react-router"
							}
						}
					}
				},
				{
					"id": 4836,
					"name": "RedirectFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1367,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1367"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4837,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1367,
									"character": 31,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1367"
								}
							],
							"signatures": [
								{
									"id": 4838,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4839,
											"name": "url",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4840,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "ResponseInit"
														},
														"name": "ResponseInit",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "Redirect"
										},
										"name": "Redirect",
										"package": "react-router"
									}
								}
							]
						}
					}
				},
				{
					"id": 4841,
					"name": "RelativeRoutingType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "- \"route\": relative to the route hierarchy so "
							},
							{
								"kind": "code",
								"text": "`..`"
							},
							{
								"kind": "text",
								"text": " means remove all segments of the current route even if it has many. For example, a "
							},
							{
								"kind": "code",
								"text": "`route(\"posts/:id\")`"
							},
							{
								"kind": "text",
								"text": " would have both "
							},
							{
								"kind": "code",
								"text": "`:id`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`posts`"
							},
							{
								"kind": "text",
								"text": " removed from the url.\n- \"path\": relative to the pathname so "
							},
							{
								"kind": "code",
								"text": "`..`"
							},
							{
								"kind": "text",
								"text": " means remove one segment of the pathname. For example, a "
							},
							{
								"kind": "code",
								"text": "`route(\"posts/:id\")`"
							},
							{
								"kind": "text",
								"text": " would have only "
							},
							{
								"kind": "code",
								"text": "`:id`"
							},
							{
								"kind": "text",
								"text": " removed from the url."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 453,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L453"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "route"
							},
							{
								"type": "literal",
								"value": "path"
							}
						]
					}
				},
				{
					"id": 4842,
					"name": "RequestHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/server.ts",
							"line": 35,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/server.ts#L35"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4843,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/server.ts",
									"line": 35,
									"character": 29,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/server.ts#L35"
								}
							],
							"signatures": [
								{
									"id": 4844,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4845,
											"name": "request",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Request"
												},
												"name": "Request",
												"package": "typescript"
											}
										},
										{
											"id": 4846,
											"name": "loadContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2926,
												"name": "AppLoadContext",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Response"
												},
												"name": "Response",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 4847,
					"name": "RevalidationState",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 549,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L549"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "idle"
							},
							{
								"type": "literal",
								"value": "loading"
							}
						]
					}
				},
				{
					"id": 4848,
					"name": "RouteObject",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 65,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L65"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 3636,
								"name": "IndexRouteObject",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": 4356,
								"name": "NonIndexRouteObject",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 4849,
					"name": "RouteProps",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 666,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L666"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 4402,
								"name": "PathRouteProps",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": 3678,
								"name": "LayoutRouteProps",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": 3657,
								"name": "IndexRouteProps",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 4850,
					"name": "RouterFetchOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options to pass to fetch()"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 509,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L509"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "LoadFetchOptions"
								},
								"name": "LoadFetchOptions",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "SubmitFetchOptions"
								},
								"name": "SubmitFetchOptions",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 4851,
					"name": "RouterNavigateOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options to pass to navigate() for a navigation"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 492,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L492"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "LinkNavigateOptions"
								},
								"name": "LinkNavigateOptions",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "SubmissionNavigateOptions"
								},
								"name": "SubmissionNavigateOptions",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 4852,
					"name": "ScriptsProps",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A couple common attributes:\n\n- "
							},
							{
								"kind": "code",
								"text": "`<Scripts crossOrigin>`"
							},
							{
								"kind": "text",
								"text": " for hosting your static assets on a different server than your app.\n- "
							},
							{
								"kind": "code",
								"text": "`<Scripts nonce>`"
							},
							{
								"kind": "text",
								"text": " to support a [content security policy for scripts](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src) with [nonce-sources](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/Sources#sources) for your "
							},
							{
								"kind": "code",
								"text": "`<script>`"
							},
							{
								"kind": "text",
								"text": " tags.\n\nYou cannot pass through attributes such as "
							},
							{
								"kind": "code",
								"text": "`async`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`defer`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`src`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`noModule`"
							},
							{
								"kind": "text",
								"text": " because they are managed by React Router internally."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 606,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/components.tsx#L606"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.HTMLProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLScriptElement"
										},
										"name": "HTMLScriptElement",
										"package": "typescript"
									}
								],
								"name": "React.HTMLProps",
								"package": "@types/react"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "children"
									},
									{
										"type": "literal",
										"value": "async"
									},
									{
										"type": "literal",
										"value": "defer"
									},
									{
										"type": "literal",
										"value": "src"
									},
									{
										"type": "literal",
										"value": "type"
									},
									{
										"type": "literal",
										"value": "noModule"
									},
									{
										"type": "literal",
										"value": "dangerouslySetInnerHTML"
									},
									{
										"type": "literal",
										"value": "suppressHydrationWarning"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				},
				{
					"id": 4853,
					"name": "ScrollRestorationProps",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1116,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1116"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 4852,
								"name": "ScriptsProps",
								"package": "react-router"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 4854,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4855,
											"name": "getKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Defines the key used to restore scroll positions.\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\n<ScrollRestoration\n  getKey={(location, matches) => {\n    // default behavior\n    return location.key\n  }}\n/>\n```"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1129,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1129"
												}
											],
											"type": {
												"type": "reference",
												"target": 3606,
												"name": "GetScrollRestorationKeyFunction",
												"package": "react-router"
											}
										},
										{
											"id": 4856,
											"name": "storageKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1131,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1131"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4855,
												4856
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 1116,
											"character": 52,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1116"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 4857,
					"name": "SetURLSearchParams",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets new search params and causes a navigation when called.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<button\n  onClick={() => {\n    const params = new URLSearchParams();\n    params.set(\"someKey\", \"someValue\");\n    setSearchParams(params, {\n      preventScrollReset: true,\n    });\n  }}\n/>\n```"
							},
							{
								"kind": "text",
								"text": "\n\nIt also supports a function for setting new search params.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<button\n  onClick={() => {\n    setSearchParams((prev) => {\n      prev.set(\"someKey\", \"someValue\");\n      return prev;\n    });\n  }}\n/>\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1420,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1420"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4858,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1420,
									"character": 33,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1420"
								}
							],
							"signatures": [
								{
									"id": 4859,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4860,
											"name": "nextInit",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 4867,
														"name": "URLSearchParamsInit",
														"package": "react-router"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 4861,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/dom/lib.tsx",
																	"line": 1423,
																	"character": 7,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1423"
																}
															],
															"signatures": [
																{
																	"id": 4862,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 4863,
																			"name": "prev",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "URLSearchParams"
																				},
																				"name": "URLSearchParams",
																				"package": "typescript"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 4867,
																		"name": "URLSearchParamsInit",
																		"package": "react-router"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 4864,
											"name": "navigateOpts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 4025,
												"name": "NavigateOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 4865,
					"name": "SubmitTarget",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 128,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L128"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLFormElement"
								},
								"name": "HTMLFormElement",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLButtonElement"
								},
								"name": "HTMLButtonElement",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLInputElement"
								},
								"name": "HTMLInputElement",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "FormData"
								},
								"name": "FormData",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URLSearchParams"
								},
								"name": "URLSearchParams",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/dom.ts",
									"qualifiedName": "JsonValue"
								},
								"name": "JsonValue",
								"package": "react-router"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 4866,
					"name": "To",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Describes a location that is the destination of some navigation used in\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Link",
								"target": 4999
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useNavigate",
								"target": 5237
							},
							{
								"kind": "text",
								"text": ", etc."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 105,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L105"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4387,
										"name": "Path",
										"package": "react-router"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4867,
					"name": "URLSearchParamsInit",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 47,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L47"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4827,
									"name": "ParamKeyValuePair",
									"package": "react-router"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URLSearchParams"
								},
								"name": "URLSearchParams",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4868,
					"name": "IDLE_BLOCKER",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 758,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L758"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "packages/react-router/lib/router/router.ts",
							"qualifiedName": "BlockerUnblocked"
						},
						"name": "BlockerUnblocked",
						"package": "react-router"
					},
					"defaultValue": "..."
				},
				{
					"id": 4869,
					"name": "IDLE_FETCHER",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 747,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L747"
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": "Idle"
						},
						"objectType": {
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/router.ts",
								"qualifiedName": "FetcherStates"
							},
							"name": "FetcherStates",
							"package": "react-router"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 4870,
					"name": "IDLE_NAVIGATION",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 736,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L736"
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": "Idle"
						},
						"objectType": {
							"type": "reference",
							"target": 4790,
							"name": "NavigationStates",
							"package": "react-router"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 4871,
					"name": "UNSAFE_DataRouterContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 93,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L93"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/context.ts",
											"qualifiedName": "DataRouterContextObject"
										},
										"name": "DataRouterContextObject",
										"package": "react-router"
									}
								]
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 4872,
					"name": "UNSAFE_DataRouterStateContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 97,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L97"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 4455,
										"name": "RouterState",
										"package": "react-router"
									}
								]
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 4873,
					"name": "UNSAFE_FetchersContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 122,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L122"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/context.ts",
									"qualifiedName": "FetchersContextObject"
								},
								"name": "FetchersContextObject",
								"package": "react-router"
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 4874,
					"name": "UNSAFE_FrameworkContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 56,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/components.tsx#L56"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"qualifiedName": "FrameworkContextObject"
										},
										"name": "FrameworkContextObject",
										"package": "react-router"
									}
								]
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 4875,
					"name": "UNSAFE_LocationContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 182,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L182"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/context.ts",
									"qualifiedName": "LocationContextObject"
								},
								"name": "LocationContextObject",
								"package": "react-router"
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 4876,
					"name": "UNSAFE_NavigationContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 172,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L172"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/context.ts",
									"qualifiedName": "NavigationContextObject"
								},
								"name": "NavigationContextObject",
								"package": "react-router"
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 4877,
					"name": "UNSAFE_RouteContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 193,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L193"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/context.ts",
									"qualifiedName": "RouteContextObject"
								},
								"name": "RouteContextObject",
								"package": "react-router"
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 4878,
					"name": "UNSAFE_SingleFetchRedirectSymbol",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
							"line": 23,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/single-fetch.tsx#L23"
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 4878,
							"name": "SingleFetchRedirectSymbol",
							"package": "react-router"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 4879,
					"name": "UNSAFE_ViewTransitionContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 113,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/context.ts#L113"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/context.ts",
									"qualifiedName": "ViewTransitionContextObject"
								},
								"name": "ViewTransitionContextObject",
								"package": "react-router"
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 4880,
					"name": "Await",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 970,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L970"
						}
					],
					"signatures": [
						{
							"id": 4881,
							"name": "Await",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to render promise values with automatic error handling.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Await, useLoaderData } from \"react-router\";\n\nexport function loader() {\n  // not awaited\n  const reviews = getReviews()\n  // awaited (blocks the transition)\n  const book = await fetch(\"/api/book\").then((res) => res.json())\n  return { book, reviews }\n}\n\nfunction Book() {\n  const { book, reviews } = useLoaderData();\n  return (\n    <div>\n      <h1>{book.title}</h1>\n      <p>{book.description}</p>\n      <React.Suspense fallback={<ReviewsSkeleton />}>\n        <Await\n          resolve={reviews}\n          errorElement={\n            <div>Could not load reviews 😬</div>\n          }\n          children={(resolvedReviews) => (\n            <Reviews items={resolvedReviews} />\n          )}\n        />\n      </React.Suspense>\n    </div>\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n**Note:** "
									},
									{
										"kind": "code",
										"text": "`<Await>`"
									},
									{
										"kind": "text",
										"text": " expects to be rendered inside of a "
									},
									{
										"kind": "code",
										"text": "`<React.Suspense>`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 970,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L970"
								}
							],
							"typeParameters": [
								{
									"id": 4882,
									"name": "Resolve",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 4883,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2929,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4882,
												"name": "Resolve",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "AwaitProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 4884,
					"name": "BrowserRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 256,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L256"
						}
					],
					"signatures": [
						{
							"id": 4885,
							"name": "BrowserRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " for use in web browsers. Provides the cleanest URLs."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 256,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L256"
								}
							],
							"parameters": [
								{
									"id": 4886,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2934,
										"name": "BrowserRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 4887,
					"name": "createBrowserRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 140,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L140"
						}
					],
					"signatures": [
						{
							"id": 4888,
							"name": "createBrowserRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 140,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L140"
								}
							],
							"parameters": [
								{
									"id": 4889,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4848,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 4890,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
											"qualifiedName": "DOMRouterOpts"
										},
										"name": "DOMRouterOpts",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2976,
								"name": "DataRouter",
								"package": "react-router",
								"qualifiedName": "Router"
							}
						}
					]
				},
				{
					"id": 4891,
					"name": "createCookie",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a logical container for managing a browser cookie from the server."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 73,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 4892,
							"name": "createCookie",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 73,
									"character": 28,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L73"
								}
							],
							"parameters": [
								{
									"id": 4893,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4894,
									"name": "cookieOptions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4701,
										"name": "CookieOptions",
										"package": "react-router"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 2938,
								"name": "Cookie",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 4895,
					"name": "createCookieSessionStorage",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
							"line": 26,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions/cookieStorage.ts#L26"
						}
					],
					"signatures": [
						{
							"id": 4896,
							"name": "createCookieSessionStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates and returns a SessionStorage object that stores all session data\ndirectly in the session cookie itself.\n\nThis has the advantage that no database or other backend services are\nneeded, and can help to simplify some load-balanced scenarios. However, it\nalso has the limitation that serialized session data may not exceed the\nbrowser's maximum cookie size. Trade-offs!"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
									"line": 26,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions/cookieStorage.ts#L26"
								}
							],
							"typeParameters": [
								{
									"id": 4897,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 4530,
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 4898,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 4897,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 4899,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
											"qualifiedName": "CookieSessionStorageOptions"
										},
										"name": "CookieSessionStorageOptions",
										"package": "react-router"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 4558,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4897,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 4898,
										"name": "FlashData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "SessionStorage",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 4900,
					"name": "createHashRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 160,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L160"
						}
					],
					"signatures": [
						{
							"id": 4901,
							"name": "createHashRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 160,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L160"
								}
							],
							"parameters": [
								{
									"id": 4902,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4848,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 4903,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
											"qualifiedName": "DOMRouterOpts"
										},
										"name": "DOMRouterOpts",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2976,
								"name": "DataRouter",
								"package": "react-router",
								"qualifiedName": "Router"
							}
						}
					]
				},
				{
					"id": 4904,
					"name": "createMemoryRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 136,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L136"
						}
					],
					"signatures": [
						{
							"id": 4905,
							"name": "createMemoryRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 136,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L136"
								}
							],
							"parameters": [
								{
									"id": 4906,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4848,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 4907,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4908,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4909,
													"name": "basename",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 139,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L139"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4910,
													"name": "dataStrategy",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 144,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L144"
														}
													],
													"type": {
														"type": "reference",
														"target": 2977,
														"name": "DataStrategyFunction",
														"package": "react-router"
													}
												},
												{
													"id": 4911,
													"name": "future",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 140,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L140"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router/lib/router/router.ts",
																	"qualifiedName": "FutureConfig"
																},
																"name": "FutureConfig",
																"package": "react-router"
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												},
												{
													"id": 4912,
													"name": "hydrationData",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 141,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L141"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 4455,
																		"name": "RouterState",
																		"package": "react-router"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "loaderData"
																			},
																			{
																				"type": "literal",
																				"value": "actionData"
																			},
																			{
																				"type": "literal",
																				"value": "errors"
																			}
																		]
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												},
												{
													"id": 4913,
													"name": "initialEntries",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 142,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L142"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 4748,
															"name": "InitialEntry",
															"package": "react-router"
														}
													}
												},
												{
													"id": 4914,
													"name": "initialIndex",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 143,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L143"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4915,
													"name": "patchRoutesOnNavigation",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 145,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L145"
														}
													],
													"type": {
														"type": "reference",
														"target": 4832,
														"name": "PatchRoutesOnNavigationFunction",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4909,
														4910,
														4911,
														4912,
														4913,
														4914,
														4915
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/components.tsx",
													"line": 138,
													"character": 9,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L138"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2976,
								"name": "DataRouter",
								"package": "react-router",
								"qualifiedName": "Router"
							}
						}
					]
				},
				{
					"id": 4916,
					"name": "createMemorySessionStorage",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
							"line": 24,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions/memoryStorage.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 4917,
							"name": "createMemorySessionStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates and returns a simple in-memory SessionStorage object, mostly useful\nfor testing and as a reference implementation.\n\nNote: This storage does not scale beyond a single process, so it is not\nsuitable for most production scenarios."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
									"line": 24,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions/memoryStorage.ts#L24"
								}
							],
							"typeParameters": [
								{
									"id": 4918,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 4530,
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 4919,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 4918,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 4920,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
											"qualifiedName": "MemorySessionStorageOptions"
										},
										"name": "MemorySessionStorageOptions",
										"package": "react-router"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 4558,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4918,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 4919,
										"name": "FlashData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "SessionStorage",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 4921,
					"name": "createPath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 556,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L556"
						}
					],
					"signatures": [
						{
							"id": 4922,
							"name": "createPath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a string URL path from the given pathname, search, and hash components."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 556,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L556"
								}
							],
							"parameters": [
								{
									"id": 4923,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4387,
												"name": "Path",
												"package": "react-router"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 4924,
					"name": "createRequestHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/server.ts",
							"line": 72,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/server.ts#L72"
						}
					],
					"signatures": [
						{
							"id": 4925,
							"name": "createRequestHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/server.ts",
									"line": 72,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/server.ts#L72"
								}
							],
							"parameters": [
								{
									"id": 4926,
									"name": "build",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 4485,
												"name": "ServerBuild",
												"package": "react-router"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4927,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/server-runtime/server.ts",
															"line": 41,
															"character": 24,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/server.ts#L41"
														}
													],
													"signatures": [
														{
															"id": 4928,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/server-runtime/server.ts",
																	"line": 41,
																	"character": 24,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/server.ts#L41"
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": 4485,
																		"name": "ServerBuild",
																		"package": "react-router"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 4485,
																				"name": "ServerBuild",
																				"package": "react-router"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 4929,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 4842,
								"name": "RequestHandler",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 4930,
					"name": "createRoutesFromChildren",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 1103,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L1103"
						}
					],
					"signatures": [
						{
							"id": 4931,
							"name": "createRoutesFromChildren",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a route config from a React \"children\" object, which is usually\neither a "
									},
									{
										"kind": "code",
										"text": "`<Route>`"
									},
									{
										"kind": "text",
										"text": " element or an array of them. Used internally by\n"
									},
									{
										"kind": "code",
										"text": "`<Routes>`"
									},
									{
										"kind": "text",
										"text": " to create a route config from its children."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 1103,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L1103"
								}
							],
							"parameters": [
								{
									"id": 4932,
									"name": "children",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								},
								{
									"id": 4933,
									"name": "parentPath",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									"defaultValue": "[]"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4848,
									"name": "RouteObject",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 4934,
					"name": "createRoutesFromElements",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create route objects from JSX elements instead of arrays of objects"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 1177,
							"character": 11,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L1177"
						}
					],
					"signatures": [
						{
							"id": 4935,
							"name": "createRoutesFromElements",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a route config from a React \"children\" object, which is usually\neither a "
									},
									{
										"kind": "code",
										"text": "`<Route>`"
									},
									{
										"kind": "text",
										"text": " element or an array of them. Used internally by\n"
									},
									{
										"kind": "code",
										"text": "`<Routes>`"
									},
									{
										"kind": "text",
										"text": " to create a route config from its children."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 1177,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L1177"
								}
							],
							"parameters": [
								{
									"id": 4936,
									"name": "children",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								},
								{
									"id": 4937,
									"name": "parentPath",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									"defaultValue": "[]"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4848,
									"name": "RouteObject",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 4938,
					"name": "createRoutesStub",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
							"line": 92,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L92"
						}
					],
					"signatures": [
						{
							"id": 4939,
							"name": "createRoutesStub",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
									"line": 92,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L92"
								}
							],
							"parameters": [
								{
									"id": 4940,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
												"qualifiedName": "StubRouteObject"
											},
											"name": "StubRouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 4941,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
											"qualifiedName": "AppLoadContext"
										},
										"name": "AppLoadContext",
										"package": "react-router"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4942,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
											"line": 96,
											"character": 18,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L96"
										}
									],
									"signatures": [
										{
											"id": 4943,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
													"line": 96,
													"character": 18,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L96"
												}
											],
											"parameters": [
												{
													"id": 4944,
													"name": "__namedParameters",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 4480,
														"name": "RoutesTestStubProps",
														"package": "react-router"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSX.Element"
												},
												"name": "Element",
												"package": "@types/react",
												"qualifiedName": "React.JSX.Element"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 4945,
					"name": "createSearchParams",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 79,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L79"
						}
					],
					"signatures": [
						{
							"id": 4946,
							"name": "createSearchParams",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a URLSearchParams object using the given initializer.\n\nThis is identical to "
									},
									{
										"kind": "code",
										"text": "`new URLSearchParams(init)`"
									},
									{
										"kind": "text",
										"text": " except it also\nsupports arrays as values in the object form of the initializer\ninstead of just strings. This is convenient when you need multiple\nvalues for a given key, but don't want to use an array initializer.\n\nFor example, instead of:\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nlet searchParams = new URLSearchParams([\n  ['sort', 'name'],\n  ['sort', 'price']\n]);\n```"
									},
									{
										"kind": "text",
										"text": "\nyou can do:\n\n"
									},
									{
										"kind": "code",
										"text": "```\nlet searchParams = createSearchParams({\n  sort: ['name', 'price']\n});\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 79,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/dom.ts#L79"
								}
							],
							"parameters": [
								{
									"id": 4947,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4867,
										"name": "URLSearchParamsInit",
										"package": "react-router"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URLSearchParams"
								},
								"name": "URLSearchParams",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4948,
					"name": "createSession",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new Session object.\n\nNote: This function is typically not invoked directly by application code.\nInstead, use a "
							},
							{
								"kind": "code",
								"text": "`SessionStorage`"
							},
							{
								"kind": "text",
								"text": " object's "
							},
							{
								"kind": "code",
								"text": "`getSession`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://remix.run/utils/sessions#createsession"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 95,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L95"
						}
					],
					"signatures": [
						{
							"id": 4949,
							"name": "createSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 95,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L95"
								}
							],
							"typeParameters": [
								{
									"id": 4950,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 4530,
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 4951,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 4950,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 4952,
									"name": "initialData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 4950,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 4953,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 4505,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4950,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 4951,
										"name": "FlashData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "Session",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 4954,
					"name": "createSessionStorage",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 254,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L254"
						}
					],
					"signatures": [
						{
							"id": 4955,
							"name": "createSessionStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a SessionStorage object using a SessionIdStorageStrategy.\n\nNote: This is a low-level API that should only be used if none of the\nexisting session storage options meet your requirements."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 254,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L254"
								}
							],
							"typeParameters": [
								{
									"id": 4956,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 4530,
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 4957,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 4956,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 4958,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4533,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4956,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 4957,
												"name": "FlashData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "SessionIdStorageStrategy",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 4558,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4956,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 4957,
										"name": "FlashData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "SessionStorage",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 4959,
					"name": "createStaticHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 260,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L260"
						}
					],
					"signatures": [
						{
							"id": 4960,
							"name": "createStaticHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 260,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L260"
								}
							],
							"parameters": [
								{
									"id": 4961,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4848,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 4962,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/server.tsx",
											"qualifiedName": "CreateStaticHandlerOptions"
										},
										"name": "CreateStaticHandlerOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 4593,
								"name": "StaticHandler",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 4963,
					"name": "createStaticRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 273,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L273"
						}
					],
					"signatures": [
						{
							"id": 4964,
							"name": "createStaticRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 273,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L273"
								}
							],
							"parameters": [
								{
									"id": 4965,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4848,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 4966,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4611,
										"name": "StaticHandlerContext",
										"package": "react-router"
									}
								},
								{
									"id": 4967,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4968,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4969,
													"name": "future",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/server.tsx",
															"line": 277,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L277"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router/lib/router/router.ts",
																	"qualifiedName": "FutureConfig"
																},
																"name": "FutureConfig",
																"package": "react-router"
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4969
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/server.tsx",
													"line": 276,
													"character": 8,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L276"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 2976,
								"name": "DataRouter",
								"package": "react-router",
								"qualifiedName": "Router"
							}
						}
					]
				},
				{
					"id": 4970,
					"name": "data",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1352,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1352"
						}
					],
					"signatures": [
						{
							"id": 4971,
							"name": "data",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create \"responses\" that contain "
									},
									{
										"kind": "code",
										"text": "`status`"
									},
									{
										"kind": "text",
										"text": "/"
									},
									{
										"kind": "code",
										"text": "`headers`"
									},
									{
										"kind": "text",
										"text": " without forcing\nserialization into an actual "
									},
									{
										"kind": "code",
										"text": "`Response`"
									},
									{
										"kind": "text",
										"text": " - used by Remix single fetch"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1352,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1352"
								}
							],
							"typeParameters": [
								{
									"id": 4972,
									"name": "D",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 4973,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4972,
										"name": "D",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 4974,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "ResponseInit"
												},
												"name": "ResponseInit",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2820,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4972,
										"name": "D",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "DataWithResponseInit",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 4975,
					"name": "Form",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A progressively enhanced HTML ["
							},
							{
								"kind": "code",
								"text": "`<form>`"
							},
							{
								"kind": "text",
								"text": "](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) that submits data to actions via "
							},
							{
								"kind": "code",
								"text": "`fetch`"
							},
							{
								"kind": "text",
								"text": ", activating pending states in "
							},
							{
								"kind": "code",
								"text": "`useNavigation`"
							},
							{
								"kind": "text",
								"text": " which enables advanced user interfaces beyond a basic HTML form. After a form's action completes, all data on the page is automatically revalidated to keep the UI in sync with the data.\n\nBecause it uses the HTML form API, server rendered pages are interactive at a basic level before JavaScript loads. Instead of React Router managing the submission, the browser manages the submission as well as the pending states (like the spinning favicon). After JavaScript loads, React Router takes over enabling web application user experiences.\n\nForm is most useful for submissions that should also change the URL or otherwise add an entry to the browser history stack. For forms that shouldn't manipulate the browser history stack, use ["
							},
							{
								"kind": "code",
								"text": "`<fetcher.Form>`"
							},
							{
								"kind": "text",
								"text": "][fetcher_form].\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nimport { Form } from \"react-router\";\n\nfunction NewEvent() {\n  return (\n    <Form action=\"/events\" method=\"post\">\n      <input name=\"title\" type=\"text\" />\n      <input name=\"description\" type=\"text\" />\n    </Form>\n  )\n}\n```"
							}
						]
					},
					"children": [
						{
							"id": 4976,
							"name": "$$typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						},
						{
							"id": 4977,
							"name": "defaultProps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 818,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 3318,
												"name": "FormProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLFormElement"
														},
														"name": "HTMLFormElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 4978,
							"name": "displayName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4979,
							"name": "propTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 819,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WeakValidationMap"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 3318,
												"name": "FormProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLFormElement"
														},
														"name": "HTMLFormElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "WeakValidationMap",
								"package": "@types/react",
								"qualifiedName": "React.WeakValidationMap"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4976,
								4977,
								4978,
								4979
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1050,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1050"
						}
					],
					"signatures": [
						{
							"id": 4980,
							"name": "Form",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**NOTE**: Exotic components are not callable."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1050,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1050"
								}
							],
							"parameters": [
								{
									"id": 4981,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 3318,
												"name": "FormProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLFormElement"
														},
														"name": "HTMLFormElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 4982,
					"name": "generatePath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 859,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L859"
						}
					],
					"signatures": [
						{
							"id": 4983,
							"name": "generatePath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a path with params interpolated."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 859,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L859"
								}
							],
							"typeParameters": [
								{
									"id": 4984,
									"name": "Path",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 4985,
									"name": "originalPath",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4984,
										"name": "Path",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 4986,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "mapped",
										"parameter": "key",
										"parameterType": {
											"type": "literal",
											"value": "*"
										},
										"templateType": {
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": null
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 4987,
					"name": "HashRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 306,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L306"
						}
					],
					"signatures": [
						{
							"id": 4988,
							"name": "HashRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " for use in web browsers. Stores the location in the hash\nportion of the URL so it is not sent to the server."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 306,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L306"
								}
							],
							"parameters": [
								{
									"id": 4989,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3625,
										"name": "HashRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 4990,
					"name": "isCookie",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns true if an object is a Remix cookie container."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://remix.run/utils/cookies#iscookie"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 133,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L133"
						}
					],
					"signatures": [
						{
							"id": 4991,
							"name": "isCookie",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 133,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/cookies.ts#L133"
								}
							],
							"parameters": [
								{
									"id": 4992,
									"name": "object",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "object",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 2938,
									"name": "Cookie",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 4993,
					"name": "isRouteErrorResponse",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1472,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1472"
						}
					],
					"signatures": [
						{
							"id": 4994,
							"name": "isRouteErrorResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the given error is an ErrorResponse generated from a 4xx/5xx\nResponse thrown from an action/loader"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1472,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1472"
								}
							],
							"parameters": [
								{
									"id": 4995,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 4713,
									"name": "ErrorResponse",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 4996,
					"name": "isSession",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns true if an object is a Remix session."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://remix.run/utils/sessions#issession"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 151,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L151"
						}
					],
					"signatures": [
						{
							"id": 4997,
							"name": "isSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 151,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/sessions.ts#L151"
								}
							],
							"parameters": [
								{
									"id": 4998,
									"name": "object",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "object",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 4505,
									"typeArguments": [
										{
											"type": "reference",
											"target": 4530,
											"name": "SessionData",
											"package": "react-router"
										},
										{
											"type": "reference",
											"target": 4530,
											"name": "SessionData",
											"package": "react-router"
										}
									],
									"name": "Session",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 4999,
					"name": "Link",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A progressively enhanced "
							},
							{
								"kind": "code",
								"text": "`<a href>`"
							},
							{
								"kind": "text",
								"text": " wrapper to enable navigation with client-side routing.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nimport { Link } from \"react-router\";\n\n<Link to=\"/dashboard\">Dashboard</Link>;\n\n<Link\n  to={{\n    pathname: \"/some/path\",\n    search: \"?query=string\",\n    hash: \"#hash\",\n  }}\n/>\n```"
							}
						]
					},
					"children": [
						{
							"id": 5000,
							"name": "$$typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						},
						{
							"id": 5001,
							"name": "defaultProps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 818,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 3702,
												"name": "LinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 5002,
							"name": "displayName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5003,
							"name": "propTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 819,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WeakValidationMap"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 3702,
												"name": "LinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "WeakValidationMap",
								"package": "@types/react",
								"qualifiedName": "React.WeakValidationMap"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5000,
								5001,
								5002,
								5003
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 558,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L558"
						}
					],
					"signatures": [
						{
							"id": 5004,
							"name": "Link",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**NOTE**: Exotic components are not callable."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 558,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L558"
								}
							],
							"parameters": [
								{
									"id": 5005,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 3702,
												"name": "LinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 5006,
					"name": "Links",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 230,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/components.tsx#L230"
						}
					],
					"signatures": [
						{
							"id": 5007,
							"name": "Links",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders all of the "
									},
									{
										"kind": "code",
										"text": "`<link>`"
									},
									{
										"kind": "text",
										"text": " tags created by route module "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "LinksFunction",
										"target": 3987
									},
									{
										"kind": "text",
										"text": " export. You should render it inside the "
									},
									{
										"kind": "code",
										"text": "`<head>`"
									},
									{
										"kind": "text",
										"text": " of your document.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Links } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <head>\n        <Links />\n      </head>\n      <body></body>\n    </html>\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"line": 230,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/components.tsx#L230"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 5008,
					"name": "matchPath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 965,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L965"
						}
					],
					"signatures": [
						{
							"id": 5009,
							"name": "matchPath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Performs pattern matching on a URL pathname and returns information about\nthe match."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 965,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L965"
								}
							],
							"typeParameters": [
								{
									"id": 5010,
									"name": "ParamKey",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5011,
									"name": "Path",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 5012,
									"name": "pattern",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 5011,
												"name": "Path",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 4397,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5011,
														"name": "Path",
														"package": "react-router",
														"refersToTypeParameter": true
													}
												],
												"name": "PathPattern",
												"package": "react-router"
											}
										]
									}
								},
								{
									"id": 5013,
									"name": "pathname",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 4391,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5010,
												"name": "ParamKey",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "PathMatch",
										"package": "react-router"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 5014,
					"name": "matchRoutes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 506,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L506"
						}
					],
					"signatures": [
						{
							"id": 5015,
							"name": "matchRoutes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Matches the given routes to a location and returns the match data."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 506,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L506"
								}
							],
							"typeParameters": [
								{
									"id": 5016,
									"name": "RouteObjectType",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "AgnosticRouteObject"
										},
										"name": "AgnosticRouteObject",
										"package": "react-router"
									},
									"default": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "AgnosticRouteObject"
										},
										"name": "AgnosticRouteObject",
										"package": "react-router"
									}
								}
							],
							"parameters": [
								{
									"id": 5017,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5016,
											"name": "RouteObjectType",
											"package": "react-router",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 5018,
									"name": "locationArg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3994,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Location",
														"package": "react-router"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 5019,
									"name": "basename",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"/\""
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router/lib/router/utils.ts",
												"qualifiedName": "AgnosticRouteMatch"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"target": 5016,
													"name": "RouteObjectType",
													"package": "react-router",
													"refersToTypeParameter": true
												}
											],
											"name": "AgnosticRouteMatch",
											"package": "react-router"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 5020,
					"name": "MemoryRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 475,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L475"
						}
					],
					"signatures": [
						{
							"id": 5021,
							"name": "MemoryRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " that stores all entries in memory."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 475,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L475"
								}
							],
							"parameters": [
								{
									"id": 5022,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4001,
										"name": "MemoryRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactElement"
								},
								"name": "React.ReactElement",
								"package": "@types/react"
							}
						}
					]
				},
				{
					"id": 5023,
					"name": "Meta",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 457,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/components.tsx#L457"
						}
					],
					"signatures": [
						{
							"id": 5024,
							"name": "Meta",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders all the "
									},
									{
										"kind": "code",
										"text": "`<meta>`"
									},
									{
										"kind": "text",
										"text": " tags created by route module "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "MetaFunction",
										"target": 4014
									},
									{
										"kind": "text",
										"text": " exports. You should render it inside the "
									},
									{
										"kind": "code",
										"text": "`<head>`"
									},
									{
										"kind": "text",
										"text": " of your HTML.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Meta } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <head>\n        <Meta />\n      </head>\n    </html>\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"line": 457,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/components.tsx#L457"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 5025,
					"name": "Navigate",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 534,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L534"
						}
					],
					"signatures": [
						{
							"id": 5026,
							"name": "Navigate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A component-based version of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useNavigate",
										"target": 5237
									},
									{
										"kind": "text",
										"text": " to use in a ["
									},
									{
										"kind": "code",
										"text": "`React.Component\nClass`"
									},
									{
										"kind": "text",
										"text": "](https://reactjs.org/docs/react-component.html) where hooks are not\nable to be used.\n\nIt's recommended to avoid using this component in favor of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useNavigate",
										"target": 5237
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 534,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L534"
								}
							],
							"parameters": [
								{
									"id": 5027,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4032,
										"name": "NavigateProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "literal",
								"value": null
							}
						}
					]
				},
				{
					"id": 5028,
					"name": "NavLink",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Wraps "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "`<Link>`",
								"target": 4999,
								"tsLinkText": "`<Link>`"
							},
							{
								"kind": "text",
								"text": " with additional props for styling active and pending states.\n\n- Automatically applies classes to the link based on its active and pending states, see "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NavLinkProps.className",
								"target": 4125
							},
							{
								"kind": "text",
								"text": ".\n- Automatically applies "
							},
							{
								"kind": "code",
								"text": "`aria-current=\"page\"`"
							},
							{
								"kind": "text",
								"text": " to the link when the link is active. See ["
							},
							{
								"kind": "code",
								"text": "`aria-current`"
							},
							{
								"kind": "text",
								"text": "](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current) on MDN.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nimport { NavLink } from \"react-router\"\n<NavLink to=\"/message\" />\n```"
							},
							{
								"kind": "text",
								"text": "\n\nStates are available through the className, style, and children render props. See "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NavLinkRenderProps",
								"target": 4822
							},
							{
								"kind": "text",
								"text": ".\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<NavLink\n  to=\"/messages\"\n  className={({ isActive, isPending }) =>\n    isPending ? \"pending\" : isActive ? \"active\" : \"\"\n  }\n>\n  Messages\n</NavLink>\n```"
							}
						]
					},
					"children": [
						{
							"id": 5029,
							"name": "$$typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						},
						{
							"id": 5030,
							"name": "defaultProps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 818,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 4060,
												"name": "NavLinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 5031,
							"name": "displayName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5032,
							"name": "propTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 819,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WeakValidationMap"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 4060,
												"name": "NavLinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "WeakValidationMap",
								"package": "@types/react",
								"qualifiedName": "React.WeakValidationMap"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5029,
								5030,
								5031,
								5032
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 801,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L801"
						}
					],
					"signatures": [
						{
							"id": 5033,
							"name": "NavLink",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**NOTE**: Exotic components are not callable."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 801,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L801"
								}
							],
							"parameters": [
								{
									"id": 5034,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 4060,
												"name": "NavLinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 5035,
					"name": "Outlet",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 611,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L611"
						}
					],
					"signatures": [
						{
							"id": 5036,
							"name": "Outlet",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the matching child route of a parent route or nothing if no child route matches.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Outlet } from \"react-router\"\n\nexport default function SomeParent() {\n  return (\n    <div>\n      <h1>Parent Content</h1>\n      <Outlet />\n    </div>\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 611,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L611"
								}
							],
							"parameters": [
								{
									"id": 5037,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4377,
										"name": "OutletProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 5038,
					"name": "parsePath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 573,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L573"
						}
					],
					"signatures": [
						{
							"id": 5039,
							"name": "parsePath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parses a string URL path into its separate pathname, search, and hash components."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 573,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L573"
								}
							],
							"parameters": [
								{
									"id": 5040,
									"name": "path",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4387,
										"name": "Path",
										"package": "react-router"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5041,
					"name": "PrefetchPageLinks",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 271,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/components.tsx#L271"
						}
					],
					"signatures": [
						{
							"id": 5042,
							"name": "PrefetchPageLinks",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders "
									},
									{
										"kind": "code",
										"text": "`<link rel=prefetch|modulepreload>`"
									},
									{
										"kind": "text",
										"text": " tags for modules and data of another page to enable an instant navigation to that page. "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Link prefetch>`",
										"target": 3956
									},
									{
										"kind": "text",
										"text": " uses this internally, but you can render it to prefetch a page for any other reason.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { PrefetchPageLinks } from \"react-router\"\n\n<PrefetchPageLinks page=\"/absolute/path\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor example, you may render one of this as the user types into a search field to prefetch search results before they click through to their selection."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"line": 271,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/components.tsx#L271"
								}
							],
							"parameters": [
								{
									"id": 5043,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4379,
										"name": "PageLinkDescriptor",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								]
							}
						}
					]
				},
				{
					"id": 5044,
					"name": "redirect",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A redirect response. Sets the status code and the "
							},
							{
								"kind": "code",
								"text": "`Location`"
							},
							{
								"kind": "text",
								"text": " header.\nDefaults to \"302 Found\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1383,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1383"
						}
					],
					"signatures": [
						{
							"id": 5045,
							"name": "redirect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1383,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1383"
								}
							],
							"parameters": [
								{
									"id": 5046,
									"name": "url",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5047,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "ResponseInit"
												},
												"name": "ResponseInit",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "Redirect"
								},
								"name": "Redirect",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5048,
					"name": "redirectDocument",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A redirect response that will force a document reload to the new location.\nSets the status code and the "
							},
							{
								"kind": "code",
								"text": "`Location`"
							},
							{
								"kind": "text",
								"text": " header.\nDefaults to \"302 Found\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1407,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1407"
						}
					],
					"signatures": [
						{
							"id": 5049,
							"name": "redirectDocument",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1407,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1407"
								}
							],
							"parameters": [
								{
									"id": 5050,
									"name": "url",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5051,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "ResponseInit"
												},
												"name": "ResponseInit",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "Redirect"
								},
								"name": "Redirect",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5052,
					"name": "renderMatches",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 1184,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L1184"
						}
					],
					"signatures": [
						{
							"id": 5053,
							"name": "renderMatches",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the result of "
									},
									{
										"kind": "code",
										"text": "`matchRoutes()`"
									},
									{
										"kind": "text",
										"text": " into a React element."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 1184,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L1184"
								}
							],
							"parameters": [
								{
									"id": 5054,
									"name": "matches",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4423,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": 4848,
															"name": "RouteObject",
															"package": "react-router"
														}
													],
													"name": "RouteMatch",
													"package": "react-router"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 5055,
					"name": "replace",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A redirect response that will perform a "
							},
							{
								"kind": "code",
								"text": "`history.replaceState`"
							},
							{
								"kind": "text",
								"text": " instead of a\n"
							},
							{
								"kind": "code",
								"text": "`history.pushState`"
							},
							{
								"kind": "text",
								"text": " for client-side navigation redirects.\nSets the status code and the "
							},
							{
								"kind": "code",
								"text": "`Location`"
							},
							{
								"kind": "text",
								"text": " header.\nDefaults to \"302 Found\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1421,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1421"
						}
					],
					"signatures": [
						{
							"id": 5056,
							"name": "replace",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1421,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1421"
								}
							],
							"parameters": [
								{
									"id": 5057,
									"name": "url",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5058,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "ResponseInit"
												},
												"name": "ResponseInit",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "Redirect"
								},
								"name": "Redirect",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5059,
					"name": "resolvePath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1125,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1125"
						}
					],
					"signatures": [
						{
							"id": 5060,
							"name": "resolvePath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a resolved path object relative to the given pathname."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1125,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/utils.ts#L1125"
								}
							],
							"parameters": [
								{
									"id": 5061,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4866,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 5062,
									"name": "fromPathname",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"/\""
								}
							],
							"type": {
								"type": "reference",
								"target": 4387,
								"name": "Path",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5063,
					"name": "Route",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 676,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L676"
						}
					],
					"signatures": [
						{
							"id": 5064,
							"name": "Route",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configures an element to render when a pattern matches the current location.\nIt must be rendered within a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Routes",
										"target": 5072
									},
									{
										"kind": "text",
										"text": " element. Note that these routes\ndo not participate in data loading, actions, code splitting, or any other\nroute module features."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 676,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L676"
								}
							],
							"parameters": [
								{
									"id": 5065,
									"name": "_props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4849,
										"name": "RouteProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 5066,
					"name": "Router",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 705,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L705"
						}
					],
					"signatures": [
						{
							"id": 5067,
							"name": "Router",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Provides location context for the rest of the app.\n\nNote: You usually won't render a "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " directly. Instead, you'll render a\nrouter that is more specific to your environment such as a "
									},
									{
										"kind": "code",
										"text": "`<BrowserRouter>`"
									},
									{
										"kind": "text",
										"text": "\nin web browsers or a "
									},
									{
										"kind": "code",
										"text": "`<StaticRouter>`"
									},
									{
										"kind": "text",
										"text": " for server rendering."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 705,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L705"
								}
							],
							"parameters": [
								{
									"id": 5068,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4440,
										"name": "RouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 5069,
					"name": "RouterProvider",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 197,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L197"
						}
					],
					"signatures": [
						{
							"id": 5070,
							"name": "RouterProvider",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Given a Remix Router instance, render the appropriate UI"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 197,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L197"
								}
							],
							"parameters": [
								{
									"id": 5071,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4447,
										"name": "RouterProviderProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactElement"
								},
								"name": "React.ReactElement",
								"package": "@types/react"
							}
						}
					]
				},
				{
					"id": 5072,
					"name": "Routes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 813,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L813"
						}
					],
					"signatures": [
						{
							"id": 5073,
							"name": "Routes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a branch of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Routes>`",
										"target": 5063,
										"tsLinkText": "`<Routes>`"
									},
									{
										"kind": "text",
										"text": " that best matches the current\nlocation. Note that these routes do not participate in data loading, actions,\ncode splitting, or any other route module features.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Routes, Route } from \"react-router\"\n\n<Routes>\n <Route index element={<StepOne />} />\n <Route path=\"step-2\" element={<StepTwo />} />\n <Route path=\"step-3\" element={<StepThree />}>\n</Routes>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 813,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/components.tsx#L813"
								}
							],
							"parameters": [
								{
									"id": 5074,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4477,
										"name": "RoutesProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 5075,
					"name": "Scripts",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 640,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/components.tsx#L640"
						}
					],
					"signatures": [
						{
							"id": 5076,
							"name": "Scripts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the client runtime of your app. It should be rendered inside the "
									},
									{
										"kind": "code",
										"text": "`<body>`"
									},
									{
										"kind": "text",
										"text": " of the document.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Scripts } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <head />\n      <body>\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf server rendering, you can omit "
									},
									{
										"kind": "code",
										"text": "`<Scripts/>`"
									},
									{
										"kind": "text",
										"text": " and the app will work as a traditional web app without JavaScript, relying solely on HTML and browser behaviors."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"line": 640,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/components.tsx#L640"
								}
							],
							"parameters": [
								{
									"id": 5077,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4852,
										"name": "ScriptsProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								]
							}
						}
					]
				},
				{
					"id": 5078,
					"name": "ScrollRestoration",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"children": [
						{
							"id": 5079,
							"name": "displayName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1228,
									"character": 18,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1228"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5079
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1160,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1160"
						},
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1228,
							"character": 0,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1228"
						}
					],
					"signatures": [
						{
							"id": 5080,
							"name": "ScrollRestoration",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emulates the browser's scroll restoration on location changes. Apps should only render one of these, right before the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Scripts",
										"target": 5075
									},
									{
										"kind": "text",
										"text": " component.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ScrollRestoration } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <body>\n        <ScrollRestoration />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThis component renders an inline "
									},
									{
										"kind": "code",
										"text": "`<script>`"
									},
									{
										"kind": "text",
										"text": " to prevent scroll flashing. The "
									},
									{
										"kind": "code",
										"text": "`nonce`"
									},
									{
										"kind": "text",
										"text": " prop will be passed down to the script tag to allow CSP nonce usage.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ScrollRestoration nonce={cspNonce} />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1160,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1160"
								}
							],
							"parameters": [
								{
									"id": 5081,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4853,
										"name": "ScrollRestorationProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								]
							}
						}
					]
				},
				{
					"id": 5082,
					"name": "ServerRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
							"line": 24,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/server.tsx#L24"
						}
					],
					"signatures": [
						{
							"id": 5083,
							"name": "ServerRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The entry point for a Remix app when it is rendered on the server (in\n"
									},
									{
										"kind": "code",
										"text": "`app/entry.server.js`"
									},
									{
										"kind": "text",
										"text": "). This component is used to generate the HTML in the\nresponse from the server."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
									"line": 24,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/server.tsx#L24"
								}
							],
							"parameters": [
								{
									"id": 5084,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4501,
										"name": "ServerRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactElement"
								},
								"name": "ReactElement",
								"package": "@types/react",
								"qualifiedName": "React.ReactElement"
							}
						}
					]
				},
				{
					"id": 5085,
					"name": "StaticRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 51,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L51"
						}
					],
					"signatures": [
						{
							"id": 5086,
							"name": "StaticRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " that may not navigate to any other location. This is useful\non the server where there is no stateful UI."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 51,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L51"
								}
							],
							"parameters": [
								{
									"id": 5087,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4622,
										"name": "StaticRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 5088,
					"name": "StaticRouterProvider",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 95,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L95"
						}
					],
					"signatures": [
						{
							"id": 5089,
							"name": "StaticRouterProvider",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Data Router that may not navigate to any other location. This is useful\non the server where there is no stateful UI."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 95,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/server.tsx#L95"
								}
							],
							"parameters": [
								{
									"id": 5090,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4626,
										"name": "StaticRouterProviderProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 5091,
					"name": "UNSAFE_createBrowserHistory",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 359,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L359"
						}
					],
					"signatures": [
						{
							"id": 5092,
							"name": "UNSAFE_createBrowserHistory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Browser history stores the location in regular URLs. This is the standard for\nmost web apps, but it requires some configuration on the server to ensure you\nserve the same app at multiple URLs."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 359,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/history.ts#L359"
								}
							],
							"parameters": [
								{
									"id": 5093,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/history.ts",
											"qualifiedName": "UrlHistoryOptions"
										},
										"name": "UrlHistoryOptions",
										"package": "react-router"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/history.ts",
									"qualifiedName": "BrowserHistory"
								},
								"name": "BrowserHistory",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5094,
					"name": "UNSAFE_createClientRoutes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
							"line": 224,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes.tsx#L224"
						}
					],
					"signatures": [
						{
							"id": 5095,
							"name": "UNSAFE_createClientRoutes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
									"line": 224,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes.tsx#L224"
								}
							],
							"parameters": [
								{
									"id": 5096,
									"name": "manifest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "RouteManifest"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
													"qualifiedName": "EntryRoute"
												},
												"name": "EntryRoute",
												"package": "react-router"
											}
										],
										"name": "RouteManifest",
										"package": "react-router"
									}
								},
								{
									"id": 5097,
									"name": "routeModulesCache",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4667,
										"name": "RouteModules",
										"package": "react-router"
									}
								},
								{
									"id": 5098,
									"name": "initialState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Pick"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 4455,
																"name": "RouterState",
																"package": "react-router"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "loaderData"
																	},
																	{
																		"type": "literal",
																		"value": "actionData"
																	},
																	{
																		"type": "literal",
																		"value": "errors"
																	}
																]
															}
														],
														"name": "Pick",
														"package": "typescript"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 5099,
									"name": "isSpaMode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5100,
									"name": "parentId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								},
								{
									"id": 5101,
									"name": "routesByParentId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Omit"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
																"qualifiedName": "EntryRoute"
															},
															"name": "EntryRoute",
															"package": "react-router"
														},
														{
															"type": "literal",
															"value": "children"
														}
													],
													"name": "Omit",
													"package": "typescript"
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									"defaultValue": "..."
								},
								{
									"id": 5102,
									"name": "needsRevalidation",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Set"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Set",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4709,
									"name": "DataRouteObject",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 5103,
					"name": "UNSAFE_createClientRoutesWithHMRRevalidationOptOut",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
							"line": 168,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes.tsx#L168"
						}
					],
					"signatures": [
						{
							"id": 5104,
							"name": "UNSAFE_createClientRoutesWithHMRRevalidationOptOut",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
									"line": 168,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes.tsx#L168"
								}
							],
							"parameters": [
								{
									"id": 5105,
									"name": "needsRevalidation",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Set"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Set",
										"package": "typescript"
									}
								},
								{
									"id": 5106,
									"name": "manifest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "RouteManifest"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
													"qualifiedName": "EntryRoute"
												},
												"name": "EntryRoute",
												"package": "react-router"
											}
										],
										"name": "RouteManifest",
										"package": "react-router"
									}
								},
								{
									"id": 5107,
									"name": "routeModulesCache",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4667,
										"name": "RouteModules",
										"package": "react-router"
									}
								},
								{
									"id": 5108,
									"name": "initialState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Pick"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 4455,
														"name": "RouterState",
														"package": "react-router"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "loaderData"
															},
															{
																"type": "literal",
																"value": "actionData"
															},
															{
																"type": "literal",
																"value": "errors"
															}
														]
													}
												],
												"name": "Pick",
												"package": "typescript"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 5109,
									"name": "future",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"qualifiedName": "FutureConfig"
										},
										"name": "FutureConfig",
										"package": "react-router"
									}
								},
								{
									"id": 5110,
									"name": "isSpaMode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4709,
									"name": "DataRouteObject",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 5111,
					"name": "UNSAFE_createRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 786,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L786"
						}
					],
					"signatures": [
						{
							"id": 5112,
							"name": "UNSAFE_createRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a router and listen to history POP navigations"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 786,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/router/router.ts#L786"
								}
							],
							"parameters": [
								{
									"id": 5113,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4430,
										"name": "RouterInit",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2976,
								"name": "Router",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5114,
					"name": "UNSAFE_decodeViaTurboStream",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
							"line": 444,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/single-fetch.tsx#L444"
						}
					],
					"signatures": [
						{
							"id": 5115,
							"name": "UNSAFE_decodeViaTurboStream",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
									"line": 444,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/single-fetch.tsx#L444"
								}
							],
							"parameters": [
								{
									"id": 5116,
									"name": "body",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ReadableStream"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "ReadableStream",
										"package": "typescript"
									}
								},
								{
									"id": 5117,
									"name": "global",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "query",
												"queryType": {
													"type": "reference",
													"target": {
														"sourceFileName": "",
														"qualifiedName": "globalThis"
													},
													"name": "globalThis",
													"preferValues": true
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Window"
												},
												"name": "Window",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 5118,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5119,
													"name": "done",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/turbo-stream@2.4.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
															"line": 6,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												},
												{
													"id": 5120,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/turbo-stream@2.4.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
															"line": 7,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5119,
														5120
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/.pnpm/turbo-stream@2.4.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
													"line": 5,
													"character": 12
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5121,
					"name": "UNSAFE_deserializeErrors",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/errors.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errors.ts#L4"
						}
					],
					"signatures": [
						{
							"id": 5122,
							"name": "UNSAFE_deserializeErrors",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/errors.ts",
									"line": 4,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/errors.ts#L4"
								}
							],
							"parameters": [
								{
									"id": 5123,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/utils.ts",
													"qualifiedName": "RouteData"
												},
												"name": "RouteData",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "errors"
								},
								"objectType": {
									"type": "reference",
									"target": 4455,
									"name": "RouterState",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 5124,
					"name": "UNSAFE_getPatchRoutesOnNavigationFunction",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
							"line": 70,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/fog-of-war.ts#L70"
						}
					],
					"signatures": [
						{
							"id": 5125,
							"name": "UNSAFE_getPatchRoutesOnNavigationFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
									"line": 70,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/fog-of-war.ts#L70"
								}
							],
							"parameters": [
								{
									"id": 5126,
									"name": "manifest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4655,
										"name": "AssetsManifest",
										"package": "react-router"
									}
								},
								{
									"id": 5127,
									"name": "routeModules",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4667,
										"name": "RouteModules",
										"package": "react-router"
									}
								},
								{
									"id": 5128,
									"name": "isSpaMode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5129,
									"name": "basename",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 4832,
										"name": "PatchRoutesOnNavigationFunction",
										"package": "react-router"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 5130,
					"name": "UNSAFE_getSingleFetchDataStrategy",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
							"line": 134,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/single-fetch.tsx#L134"
						}
					],
					"signatures": [
						{
							"id": 5131,
							"name": "UNSAFE_getSingleFetchDataStrategy",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
									"line": 134,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/single-fetch.tsx#L134"
								}
							],
							"parameters": [
								{
									"id": 5132,
									"name": "manifest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4655,
										"name": "AssetsManifest",
										"package": "react-router"
									}
								},
								{
									"id": 5133,
									"name": "routeModules",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4667,
										"name": "RouteModules",
										"package": "react-router"
									}
								},
								{
									"id": 5134,
									"name": "getRouter",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5135,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
													"line": 137,
													"character": 13,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/single-fetch.tsx#L137"
												}
											],
											"signatures": [
												{
													"id": 5136,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
															"line": 137,
															"character": 13,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/single-fetch.tsx#L137"
														}
													],
													"type": {
														"type": "reference",
														"target": 2976,
														"name": "Router",
														"package": "react-router"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2977,
								"name": "DataStrategyFunction",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5137,
					"name": "UNSAFE_shouldHydrateRouteLoader",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
							"line": 567,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes.tsx#L567"
						}
					],
					"signatures": [
						{
							"id": 5138,
							"name": "UNSAFE_shouldHydrateRouteLoader",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
									"line": 567,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/routes.tsx#L567"
								}
							],
							"parameters": [
								{
									"id": 5139,
									"name": "route",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
											"qualifiedName": "EntryRoute"
										},
										"name": "EntryRoute",
										"package": "react-router"
									}
								},
								{
									"id": 5140,
									"name": "routeModule",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"qualifiedName": "RouteModule"
										},
										"name": "RouteModule",
										"package": "react-router"
									}
								},
								{
									"id": 5141,
									"name": "isSpaMode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 5142,
					"name": "UNSAFE_useFogOFWarDiscovery",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
							"line": 95,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/fog-of-war.ts#L95"
						}
					],
					"signatures": [
						{
							"id": 5143,
							"name": "UNSAFE_useFogOFWarDiscovery",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
									"line": 95,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/ssr/fog-of-war.ts#L95"
								}
							],
							"parameters": [
								{
									"id": 5144,
									"name": "router",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2976,
										"name": "Router",
										"package": "react-router"
									}
								},
								{
									"id": 5145,
									"name": "manifest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4655,
										"name": "AssetsManifest",
										"package": "react-router"
									}
								},
								{
									"id": 5146,
									"name": "routeModules",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4667,
										"name": "RouteModules",
										"package": "react-router"
									}
								},
								{
									"id": 5147,
									"name": "isSpaMode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 5148,
					"name": "UNSAFE_useScrollRestoration",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1954,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1954"
						}
					],
					"signatures": [
						{
							"id": 5149,
							"name": "UNSAFE_useScrollRestoration",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When rendered inside a RouterProvider, will restore scroll positions on navigations"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1954,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1954"
								}
							],
							"parameters": [
								{
									"id": 5150,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5151,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5152,
													"name": "getKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1958,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1958"
														}
													],
													"type": {
														"type": "reference",
														"target": 3606,
														"name": "GetScrollRestorationKeyFunction",
														"package": "react-router"
													}
												},
												{
													"id": 5153,
													"name": "storageKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1959,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1959"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5152,
														5153
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1957,
													"character": 3,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1957"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 5154,
					"name": "unstable_HistoryRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"children": [
						{
							"id": 5155,
							"name": "displayName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 383,
									"character": 14,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L383"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5155
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 355,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L355"
						},
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 383,
							"character": 0,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L383"
						}
					],
					"signatures": [
						{
							"id": 5156,
							"name": "unstable_HistoryRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " that accepts a pre-instantiated history object. It's important\nto note that using your own history object is highly discouraged and may add\ntwo versions of the history library to your bundles unless you use the same\nversion of the history library that React Router uses internally."
									}
								],
								"blockTags": [
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "unstable_HistoryRouter"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 355,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L355"
								}
							],
							"parameters": [
								{
									"id": 5157,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3632,
										"name": "HistoryRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 5158,
					"name": "unstable_setDevServerHooks",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/dev.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/dev.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 5159,
							"name": "unstable_setDevServerHooks",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/dev.ts",
									"line": 13,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/server-runtime/dev.ts#L13"
								}
							],
							"parameters": [
								{
									"id": 5160,
									"name": "devServerHooks",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
											"qualifiedName": "DevServerHooks"
										},
										"name": "DevServerHooks",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 5161,
					"name": "unstable_usePrompt",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 2143,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2143"
						}
					],
					"signatures": [
						{
							"id": 5162,
							"name": "unstable_usePrompt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wrapper around useBlocker to show a window.confirm prompt to users instead of building a custom UI with "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useBlocker",
										"target": 5183
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`unstable_`"
									},
									{
										"kind": "text",
										"text": " flag will not be removed because this technique has a lot of rough edges and behaves very differently (and incorrectly sometimes) across browsers if users click addition back/forward navigations while the confirmation is open.  Use at your own risk.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction ImportantForm() {\n  let [value, setValue] = React.useState(\"\");\n\n  // Block navigating elsewhere when data has been entered into the input\n  unstable_usePrompt({\n    message: \"Are you sure?\",\n    when: ({ currentLocation, nextLocation }) =>\n      value !== \"\" &&\n      currentLocation.pathname !== nextLocation.pathname,\n  });\n\n  return (\n    <Form method=\"post\">\n      <label>\n        Enter some important data:\n        <input\n          name=\"data\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n      </label>\n      <button type=\"submit\">Save</button>\n    </Form>\n  );\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "unstable_usePrompt"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 2143,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2143"
								}
							],
							"parameters": [
								{
									"id": 5163,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5164,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5165,
													"name": "message",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 2148,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2148"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 5166,
													"name": "when",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 2147,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2147"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"target": 4671,
																"name": "BlockerFunction",
																"package": "react-router"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5165,
														5166
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 2146,
													"character": 3,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2146"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 5167,
					"name": "useActionData",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1151,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1151"
						}
					],
					"signatures": [
						{
							"id": 5168,
							"name": "useActionData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the action data from the most recent POST navigation form submission or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " if there hasn't been one.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Form, useActionData } from \"react-router\"\n\nexport async function action({ request }) {\n  const body = await request.formData()\n  const name = body.get(\"visitorsName\")\n  return { message: `Hello, ${name}` }\n}\n\nexport default function Invoices() {\n  const data = useActionData()\n  return (\n    <Form method=\"post\">\n      <input type=\"text\" name=\"visitorsName\" />\n      {data ? data.message : \"Waiting...\"}\n    </Form>\n  )\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1151,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1151"
								}
							],
							"typeParameters": [
								{
									"id": 5169,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/types/route-data.ts",
											"qualifiedName": "SerializeFrom"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5169,
												"name": "T",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "SerializeFrom",
										"package": "react-router"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 5170,
					"name": "useAsyncError",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1230,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1230"
						}
					],
					"signatures": [
						{
							"id": 5171,
							"name": "useAsyncError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the rejection value from the closest "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Await>`",
										"target": 4880
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Await, useAsyncError } from \"react-router\"\n\nfunction ErrorElement() {\n  const error = useAsyncError();\n  return (\n    <p>Uh Oh, something went wrong! {error.message}</p>\n  );\n}\n\n// somewhere in your app\n<Await\n  resolve={promiseThatRejects}\n  errorElement={<ErrorElement />}\n/>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1230,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1230"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 5172,
					"name": "useAsyncValue",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1203,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1203"
						}
					],
					"signatures": [
						{
							"id": 5173,
							"name": "useAsyncValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the resolved promise value from the closest "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Await>`",
										"target": 4880
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction SomeDescendant() {\n  const value = useAsyncValue();\n  // ...\n}\n\n// somewhere in your app\n<Await resolve={somePromise}>\n  <SomeDescendant />\n</Await>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1203,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1203"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 5174,
					"name": "useBeforeUnload",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 2071,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2071"
						}
					],
					"signatures": [
						{
							"id": 5175,
							"name": "useBeforeUnload",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Setup a callback to be fired on the window's "
									},
									{
										"kind": "code",
										"text": "`beforeunload`"
									},
									{
										"kind": "text",
										"text": " event."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 2071,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2071"
								}
							],
							"parameters": [
								{
									"id": 5176,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5177,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 2072,
													"character": 12,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2072"
												}
											],
											"signatures": [
												{
													"id": 5178,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 2072,
															"character": 12,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2072"
														}
													],
													"parameters": [
														{
															"id": 5179,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "BeforeUnloadEvent"
																},
																"name": "BeforeUnloadEvent",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								},
								{
									"id": 5180,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5181,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5182,
													"name": "capture",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 2073,
															"character": 14,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2073"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5182
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 2073,
													"character": 12,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2073"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 5183,
					"name": "useBlocker",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1245,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1245"
						}
					],
					"signatures": [
						{
							"id": 5184,
							"name": "useBlocker",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow the application to block navigations within the SPA and present the\nuser a confirmation dialog to confirm the navigation.  Mostly used to avoid\nusing half-filled form data.  This does not handle hard-reloads or\ncross-origin navigations."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1245,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1245"
								}
							],
							"parameters": [
								{
									"id": 5185,
									"name": "shouldBlock",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": 4671,
												"name": "BlockerFunction",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 4670,
								"name": "Blocker",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5186,
					"name": "useFetcher",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1799,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1799"
						}
					],
					"signatures": [
						{
							"id": 5187,
							"name": "useFetcher",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Useful for creating complex, dynamic user interfaces that require multiple, concurrent data interactions without causing a navigation.\n\nFetchers track their own, independent state and can be used to load data, submit forms, and generally interact with loaders and actions.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useFetcher } from \"react-router\"\n\nfunction SomeComponent() {\n  let fetcher = useFetcher()\n\n  // states are available on the fetcher\n  fetcher.state // \"idle\" | \"loading\" | \"submitting\"\n  fetcher.data // the data returned from the action or loader\n\n  // render a form\n  <fetcher.Form method=\"post\" />\n\n  // load data\n  fetcher.load(\"/some/route\")\n\n  // submit data\n  fetcher.submit(someFormRef, { method: \"post\" })\n  fetcher.submit(someData, {\n    method: \"post\",\n    encType: \"application/json\"\n  })\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1799,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1799"
								}
							],
							"typeParameters": [
								{
									"id": 5188,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 5189,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5190,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5191,
													"name": "key",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "By default, "
															},
															{
																"kind": "code",
																"text": "`useFetcher`"
															},
															{
																"kind": "text",
																"text": " generate a unique fetcher scoped to that component. If you want to identify a fetcher with your own key such that you can access it from elsewhere in your app, you can do that with the "
															},
															{
																"kind": "code",
																"text": "`key`"
															},
															{
																"kind": "text",
																"text": " option:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nfunction SomeComp() {\n  let fetcher = useFetcher({ key: \"my-key\" })\n  // ...\n}\n\n// Somewhere else\nfunction AnotherComp() {\n  // this will be the same fetcher, sharing the state across the app\n  let fetcher = useFetcher({ key: \"my-key\" });\n  // ...\n}\n```"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1819,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1819"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5191
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1801,
													"character": 3,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1801"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 4720,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/types/route-data.ts",
											"qualifiedName": "SerializeFrom"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5188,
												"name": "T",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "SerializeFrom",
										"package": "react-router"
									}
								],
								"name": "FetcherWithComponents",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5192,
					"name": "useFetchers",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1913,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1913"
						}
					],
					"signatures": [
						{
							"id": 5193,
							"name": "useFetchers",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array of all in-flight fetchers. This is useful for components throughout the app that didn't create the fetchers but want to use their submissions to participate in optimistic UI.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useFetchers } from \"react-router\";\n\nfunction SomeComponent() {\n  const fetchers = useFetchers();\n  fetchers[0].formData; // FormData\n  fetchers[0].state; // etc.\n  // ...\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1913,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1913"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"target": 4718,
											"name": "Fetcher",
											"package": "react-router"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 5194,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 5195,
														"name": "key",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "packages/react-router/lib/dom/lib.tsx",
																"line": 1913,
																"character": 44,
																"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1913"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															5195
														]
													}
												],
												"sources": [
													{
														"fileName": "packages/react-router/lib/dom/lib.tsx",
														"line": 1913,
														"character": 42,
														"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1913"
													}
												]
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 5196,
					"name": "useFormAction",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1612,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1612"
						}
					],
					"signatures": [
						{
							"id": 5197,
							"name": "useFormAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resolves the URL to the closest route in the component hierarchy instead of the current URL of the app.\n\nThis is used internally by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Form",
										"target": 4975
									},
									{
										"kind": "text",
										"text": " resolve the action to the closest route, but can be used generically as well.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useFormAction } from \"react-router\";\n\nfunction SomeComponent() {\n  // closest route URL\n  let action = useFormAction();\n\n  // closest route URL + \"destroy\"\n  let destroyAction = useFormAction(\"destroy\");\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1612,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1612"
								}
							],
							"parameters": [
								{
									"id": 5198,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The action to append to the closest route URL."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5199,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5200,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5201,
													"name": "relative",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1617,
															"character": 18,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1617"
														}
													],
													"type": {
														"type": "reference",
														"target": 4841,
														"name": "RelativeRoutingType",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5201
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1617,
													"character": 16,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1617"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 5202,
					"name": "useHref",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 71,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L71"
						}
					],
					"signatures": [
						{
							"id": 5203,
							"name": "useHref",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resolves a URL against the current location.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useHref } from \"react-router\"\n\nfunction SomeComponent() {\n  let href = useHref(\"some/where\");\n  // \"/resolved/some/where\"\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 71,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L71"
								}
							],
							"parameters": [
								{
									"id": 5204,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4866,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 5205,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5206,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5207,
													"name": "relative",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/hooks.tsx",
															"line": 73,
															"character": 18,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L73"
														}
													],
													"type": {
														"type": "reference",
														"target": 4841,
														"name": "RelativeRoutingType",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5207
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/hooks.tsx",
													"line": 73,
													"character": 16,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L73"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 5208,
					"name": "useInRouterContext",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 105,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L105"
						}
					],
					"signatures": [
						{
							"id": 5209,
							"name": "useInRouterContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if this component is a descendant of a Router, useful to ensure\na component is used within a Router."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 105,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L105"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 5210,
					"name": "useLinkClickHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1278,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1278"
						}
					],
					"signatures": [
						{
							"id": 5211,
							"name": "useLinkClickHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Handles the click behavior for router "
									},
									{
										"kind": "code",
										"text": "`<Link>`"
									},
									{
										"kind": "text",
										"text": " components. This is useful if\nyou need to create custom "
									},
									{
										"kind": "code",
										"text": "`<Link>`"
									},
									{
										"kind": "text",
										"text": " components with the same click behavior we\nuse in our exported "
									},
									{
										"kind": "code",
										"text": "`<Link>`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1278,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1278"
								}
							],
							"typeParameters": [
								{
									"id": 5212,
									"name": "E",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									"default": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 5213,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4866,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 5214,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5215,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5216,
													"name": "preventScrollReset",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1291,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1291"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 5217,
													"name": "relative",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1292,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1292"
														}
													],
													"type": {
														"type": "reference",
														"target": 4841,
														"name": "RelativeRoutingType",
														"package": "react-router"
													}
												},
												{
													"id": 5218,
													"name": "replace",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1289,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1289"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 5219,
													"name": "state",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1290,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1290"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 5220,
													"name": "target",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1288,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1288"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.HTMLAttributeAnchorTarget"
														},
														"name": "HTMLAttributeAnchorTarget",
														"package": "@types/react",
														"qualifiedName": "React.HTMLAttributeAnchorTarget"
													}
												},
												{
													"id": 5221,
													"name": "viewTransition",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1293,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1293"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5216,
														5217,
														5218,
														5219,
														5220,
														5221
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1287,
													"character": 5,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1287"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5222,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 1295,
											"character": 3,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1295"
										}
									],
									"signatures": [
										{
											"id": 5223,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 5224,
													"name": "event",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.MouseEvent"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 5212,
																"name": "E",
																"package": "react-router",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "MouseEvent"
																},
																"name": "MouseEvent",
																"package": "typescript"
															}
														],
														"name": "React.MouseEvent",
														"package": "@types/react"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 5225,
					"name": "useLoaderData",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1086,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1086"
						}
					],
					"signatures": [
						{
							"id": 5226,
							"name": "useLoaderData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the data from the closest route "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "loader",
										"target": 4758
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "client loader",
										"target": 4689
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useLoaderData } from \"react-router\"\n\nexport async function loader() {\n  return await fakeDb.invoices.findAll();\n}\n\nexport default function Invoices() {\n  let invoices = useLoaderData<typeof loader>();\n  // ...\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1086,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1086"
								}
							],
							"typeParameters": [
								{
									"id": 5227,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/types/route-data.ts",
									"qualifiedName": "SerializeFrom"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5227,
										"name": "T",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "SerializeFrom",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5228,
					"name": "useLocation",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 132,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L132"
						}
					],
					"signatures": [
						{
							"id": 5229,
							"name": "useLocation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Location",
										"target": 3994
									},
									{
										"kind": "text",
										"text": ". This can be useful if you'd like to perform some side effect whenever it changes.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport * as React from 'react'\nimport { useLocation } from 'react-router'\n\nfunction SomeComponent() {\n  let location = useLocation()\n\n  React.useEffect(() => {\n    // Google Analytics\n    ga('send', 'pageview')\n  }, [location]);\n\n  return (\n    // ...\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 132,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L132"
								}
							],
							"type": {
								"type": "reference",
								"target": 3994,
								"name": "Location",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5230,
					"name": "useMatch",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 160,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L160"
						}
					],
					"signatures": [
						{
							"id": 5231,
							"name": "useMatch",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a PathMatch object if the given pattern matches the current URL.\nThis is useful for components that need to know \"active\" state, e.g.\n"
									},
									{
										"kind": "code",
										"text": "`<NavLink>`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 160,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L160"
								}
							],
							"typeParameters": [
								{
									"id": 5232,
									"name": "ParamKey",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5233,
									"name": "Path",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 5234,
									"name": "pattern",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 5233,
												"name": "Path",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 4397,
												"typeArguments": [
													{
														"type": "reference",
														"target": 5233,
														"name": "Path",
														"package": "react-router",
														"refersToTypeParameter": true
													}
												],
												"name": "PathPattern",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 4391,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5232,
												"name": "ParamKey",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "PathMatch",
										"package": "react-router"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 5235,
					"name": "useMatches",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1058,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1058"
						}
					],
					"signatures": [
						{
							"id": 5236,
							"name": "useMatches",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the active route matches, useful for accessing loaderData for\nparent/child routes or the route \"handle\" property"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1058,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1058"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4647,
									"name": "UIMatch",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 5237,
					"name": "useNavigate",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 225,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L225"
						}
					],
					"signatures": [
						{
							"id": 5238,
							"name": "useNavigate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that lets you navigate programmatically in the browser in response to user interactions or effects.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useNavigate } from \"react-router\";\n\nfunction SomeComponent() {\n  let navigate = useNavigate();\n  return (\n    <button\n      onClick={() => {\n        navigate(-1);\n      }}\n    />\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIt's often better to use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "redirect",
										"target": 5044
									},
									{
										"kind": "text",
										"text": " in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "actions",
										"target": 2916
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "loaders",
										"target": 4758
									},
									{
										"kind": "text",
										"text": " than this hook."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 225,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L225"
								}
							],
							"type": {
								"type": "reference",
								"target": 4019,
								"name": "NavigateFunction",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5239,
					"name": "useNavigation",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1008,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1008"
						}
					],
					"signatures": [
						{
							"id": 5240,
							"name": "useNavigation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current navigation, defaulting to an \"idle\" navigation when no navigation is in progress. You can use this to render pending UI (like a global spinner) or read FormData from a form navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useNavigation } from \"react-router\"\n\nfunction SomeComponent() {\n  let navigation = useNavigation();\n  navigation.state\n  navigation.formData\n  // etc.\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1008,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1008"
								}
							],
							"type": {
								"type": "reference",
								"target": 4789,
								"name": "Navigation",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5241,
					"name": "useNavigationType",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 149,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L149"
						}
					],
					"signatures": [
						{
							"id": 5242,
							"name": "useNavigationType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current navigation action which describes how the router came to\nthe current location, either by a pop, push, or replace on the history stack."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 149,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L149"
								}
							],
							"type": {
								"type": "reference",
								"target": 2812,
								"name": "NavigationType",
								"package": "react-router",
								"qualifiedName": "Action"
							}
						}
					]
				},
				{
					"id": 5243,
					"name": "useOutlet",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 320,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L320"
						}
					],
					"signatures": [
						{
							"id": 5244,
							"name": "useOutlet",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the element for the child route at this level of the route\nhierarchy. Used internally by "
									},
									{
										"kind": "code",
										"text": "`<Outlet>`"
									},
									{
										"kind": "text",
										"text": " to render child routes."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 320,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L320"
								}
							],
							"parameters": [
								{
									"id": 5245,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 5246,
					"name": "useOutletContext",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 310,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L310"
						}
					],
					"signatures": [
						{
							"id": 5247,
							"name": "useOutletContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the parent route "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Outlet context>`",
										"target": 4378
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 310,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L310"
								}
							],
							"typeParameters": [
								{
									"id": 5248,
									"name": "Context",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 5248,
								"name": "Context",
								"package": "react-router",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 5249,
					"name": "useParams",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 346,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L346"
						}
					],
					"signatures": [
						{
							"id": 5250,
							"name": "useParams",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an object of key/value pairs of the dynamic params from the current URL that were matched by the routes. Child routes inherit all params from their parent routes.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useParams } from \"react-router\"\n\nfunction SomeComponent() {\n  let params = useParams()\n  params.postId\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAssuming a route pattern like "
									},
									{
										"kind": "code",
										"text": "`/posts/:postId`"
									},
									{
										"kind": "text",
										"text": " is matched by "
									},
									{
										"kind": "code",
										"text": "`/posts/123`"
									},
									{
										"kind": "text",
										"text": " then "
									},
									{
										"kind": "code",
										"text": "`params.postId`"
									},
									{
										"kind": "text",
										"text": " will be "
									},
									{
										"kind": "code",
										"text": "`\"123\"`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 346,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L346"
								}
							],
							"typeParameters": [
								{
									"id": 5251,
									"name": "ParamsOrKey",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Readonly"
								},
								"typeArguments": [
									{
										"type": "conditional",
										"checkType": {
											"type": "tuple",
											"elements": [
												{
													"type": "reference",
													"target": 5251,
													"name": "ParamsOrKey",
													"package": "react-router",
													"refersToTypeParameter": true
												}
											]
										},
										"extendsType": {
											"type": "tuple",
											"elements": [
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										},
										"trueType": {
											"type": "reference",
											"target": 4830,
											"typeArguments": [
												{
													"type": "reference",
													"target": 5251,
													"name": "ParamsOrKey",
													"package": "react-router",
													"refersToTypeParameter": true
												}
											],
											"name": "Params",
											"package": "react-router"
										},
										"falseType": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 5251,
													"name": "ParamsOrKey",
													"package": "react-router",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										}
									}
								],
								"name": "Readonly",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5252,
					"name": "useResolvedPath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 373,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L373"
						}
					],
					"signatures": [
						{
							"id": 5253,
							"name": "useResolvedPath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resolves the pathname of the given "
									},
									{
										"kind": "code",
										"text": "`to`"
									},
									{
										"kind": "text",
										"text": " value against the current location. Similar to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useHref",
										"target": 5202
									},
									{
										"kind": "text",
										"text": ", but returns a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Path",
										"target": 4387
									},
									{
										"kind": "text",
										"text": " instead of a string.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useResolvedPath } from \"react-router\"\n\nfunction SomeComponent() {\n  // if the user is at /dashboard/profile\n  let path = useResolvedPath(\"../accounts\")\n  path.pathname // \"/dashboard/accounts\"\n  path.search // \"\"\n  path.hash // \"\"\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 373,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L373"
								}
							],
							"parameters": [
								{
									"id": 5254,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4866,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 5255,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5256,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5257,
													"name": "relative",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/hooks.tsx",
															"line": 375,
															"character": 18,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L375"
														}
													],
													"type": {
														"type": "reference",
														"target": 4841,
														"name": "RelativeRoutingType",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5257
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/hooks.tsx",
													"line": 375,
													"character": 16,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L375"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 4387,
								"name": "Path",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5258,
					"name": "useRevalidator",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1038,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1038"
						}
					],
					"signatures": [
						{
							"id": 5259,
							"name": "useRevalidator",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Revalidate the data on the page for reasons outside of normal data mutations like window focus or polling on an interval.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useRevalidator } from \"react-router\";\n\nfunction WindowFocusRevalidator() {\n  const revalidator = useRevalidator();\n\n  useFakeWindowFocus(() => {\n    revalidator.revalidate();\n  });\n\n  return (\n    <div hidden={revalidator.state === \"idle\"}>\n      Revalidating...\n    </div>\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nNote that page data is already revalidated automatically after actions. If you find yourself using this for normal CRUD operations on your data in response to user interactions, you're probably not taking advantage of the other APIs like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useFetcher",
										"target": 5186
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Form",
										"target": 4975
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useSubmit",
										"target": 5277
									},
									{
										"kind": "text",
										"text": " that do this automatically."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1038,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1038"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5260,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 5261,
											"name": "state",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/hooks.tsx",
													"line": 1046,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1046"
												}
											],
											"type": {
												"type": "reference",
												"target": 4847,
												"name": "RevalidationState",
												"package": "react-router"
											},
											"defaultValue": "state.revalidation"
										},
										{
											"id": 5262,
											"name": "revalidate",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/hooks.tsx",
													"line": 1043,
													"character": 12,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1043"
												}
											],
											"signatures": [
												{
													"id": 5263,
													"name": "revalidate",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/hooks.tsx",
															"line": 1043,
															"character": 12,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1043"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												5261
											]
										},
										{
											"title": "Methods",
											"children": [
												5262
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/hooks.tsx",
											"line": 1042,
											"character": 11,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1042"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 5264,
					"name": "useRouteError",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1171,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1171"
						}
					],
					"signatures": [
						{
							"id": 5265,
							"name": "useRouteError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Accesses the error thrown during an "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "action",
										"target": 2916
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "loader",
										"target": 4758
									},
									{
										"kind": "text",
										"text": ", or component render to be used in a route module Error Boundary.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nexport function ErrorBoundary() {\n  const error = useRouteError();\n  return <div>{error.message}</div>;\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1171,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1171"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 5266,
					"name": "useRouteLoaderData",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1119,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1119"
						}
					],
					"signatures": [
						{
							"id": 5267,
							"name": "useRouteLoaderData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the loader data for a given route by route ID.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useRouteLoaderData } from \"react-router\";\n\nfunction SomeComponent() {\n  const { user } = useRouteLoaderData(\"root\");\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nRoute IDs are created automatically. They are simply the path of the route file relative to the app folder without the extension.\n\n| Route Filename             | Route ID             |\n| -------------------------- | -------------------- |\n| "
									},
									{
										"kind": "code",
										"text": "`app/root.tsx`"
									},
									{
										"kind": "text",
										"text": "             | "
									},
									{
										"kind": "code",
										"text": "`\"root\"`"
									},
									{
										"kind": "text",
										"text": "             |\n| "
									},
									{
										"kind": "code",
										"text": "`app/routes/teams.tsx`"
									},
									{
										"kind": "text",
										"text": "     | "
									},
									{
										"kind": "code",
										"text": "`\"routes/teams\"`"
									},
									{
										"kind": "text",
										"text": "     |\n| "
									},
									{
										"kind": "code",
										"text": "`app/whatever/teams.$id.tsx`"
									},
									{
										"kind": "text",
										"text": " | "
									},
									{
										"kind": "code",
										"text": "`\"whatever/teams.$id\"`"
									},
									{
										"kind": "text",
										"text": " |\n\nIf you created an ID manually, you can use that instead:\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nroute(\"/\", \"containers/app.tsx\", { id: \"app\" }})\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1119,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L1119"
								}
							],
							"typeParameters": [
								{
									"id": 5268,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 5269,
									"name": "routeId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/types/route-data.ts",
											"qualifiedName": "SerializeFrom"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 5268,
												"name": "T",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "SerializeFrom",
										"package": "react-router"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 5270,
					"name": "useRoutes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 424,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L424"
						}
					],
					"signatures": [
						{
							"id": 5271,
							"name": "useRoutes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hook version of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Routes>`",
										"target": 5072
									},
									{
										"kind": "text",
										"text": " that uses objects instead of components. These objects have the same properties as the component props.\n\nThe return value of "
									},
									{
										"kind": "code",
										"text": "`useRoutes`"
									},
									{
										"kind": "text",
										"text": " is either a valid React element you can use to render the route tree, or "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " if nothing matched.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport * as React from \"react\";\nimport { useRoutes } from \"react-router\";\n\nfunction App() {\n  let element = useRoutes([\n    {\n      path: \"/\",\n      element: <Dashboard />,\n      children: [\n        {\n          path: \"messages\",\n          element: <DashboardMessages />,\n        },\n        { path: \"tasks\", element: <DashboardTasks /> },\n      ],\n    },\n    { path: \"team\", element: <AboutPage /> },\n  ]);\n\n  return element;\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 424,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/hooks.tsx#L424"
								}
							],
							"parameters": [
								{
									"id": 5272,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4848,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 5273,
									"name": "locationArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3994,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Location",
														"package": "react-router"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 5274,
					"name": "useSearchParams",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1350,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1350"
						}
					],
					"signatures": [
						{
							"id": 5275,
							"name": "useSearchParams",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a tuple of the current URL's "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "URLSearchParams",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "URLSearchParams"
										}
									},
									{
										"kind": "text",
										"text": " and a function to update them. Setting the search params causes a navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useSearchParams } from \"react-router\";\n\nexport function SomeComponent() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  // ...\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1350,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1350"
								}
							],
							"parameters": [
								{
									"id": 5276,
									"name": "defaultInit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 4867,
										"name": "URLSearchParamsInit",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "URLSearchParams"
										},
										"name": "URLSearchParams",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 4857,
										"name": "SetURLSearchParams",
										"package": "react-router"
									}
								]
							}
						}
					]
				},
				{
					"id": 5277,
					"name": "useSubmit",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1550,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1550"
						}
					],
					"signatures": [
						{
							"id": 5278,
							"name": "useSubmit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The imperative version of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Form>`",
										"target": 4975,
										"tsLinkText": "`<Form>`"
									},
									{
										"kind": "text",
										"text": " that lets you submit a form from code instead of a user interaction.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useSubmit } from \"react-router\";\n\nfunction SomeComponent() {\n  const submit = useSubmit();\n  return (\n    <Form\n      onChange={(event) => {\n        submit(event.currentTarget);\n      }}\n    />\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1550,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L1550"
								}
							],
							"type": {
								"type": "reference",
								"target": 4631,
								"name": "SubmitFunction",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5279,
					"name": "useViewTransitionState",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 2179,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2179"
						}
					],
					"signatures": [
						{
							"id": 5280,
							"name": "useViewTransitionState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This hook returns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " when there is an active [View Transition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API) to the specified location. This can be used to apply finer-grained styles to elements to further customize the view transition. This requires that view transitions have been enabled for the given navigation via "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "LinkProps.viewTransition",
										"target": 3985
									},
									{
										"kind": "text",
										"text": " (or the "
									},
									{
										"kind": "code",
										"text": "`Form`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`submit`"
									},
									{
										"kind": "text",
										"text": ", or "
									},
									{
										"kind": "code",
										"text": "`navigate`"
									},
									{
										"kind": "text",
										"text": " call)"
									}
								],
								"blockTags": [
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "useViewTransitionState"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 2179,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2179"
								}
							],
							"parameters": [
								{
									"id": 5281,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4866,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 5282,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5283,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5284,
													"name": "relative",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 2181,
															"character": 10,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2181"
														}
													],
													"type": {
														"type": "reference",
														"target": 4841,
														"name": "RelativeRoutingType",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5284
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 2181,
													"character": 8,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router/lib/dom/lib.tsx#L2181"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						2812,
						2816
					]
				},
				{
					"title": "Classes",
					"children": [
						2820,
						2830
					]
				},
				{
					"title": "Interfaces",
					"children": [
						2916,
						2921,
						2926,
						2929,
						2934,
						2938,
						2950,
						2955,
						2969,
						2971,
						2976,
						2977,
						2980,
						2987,
						3003,
						3006,
						3028,
						3307,
						3311,
						3318,
						3604,
						3606,
						3610,
						3614,
						3621,
						3625,
						3629,
						3632,
						3636,
						3657,
						3678,
						3699,
						3702,
						3987,
						3989,
						3994,
						4001,
						4006,
						4014,
						4019,
						4025,
						4032,
						4037,
						4060,
						4356,
						4377,
						4379,
						4387,
						4391,
						4397,
						4402,
						4423,
						4430,
						4440,
						4447,
						4455,
						4469,
						4477,
						4480,
						4485,
						4496,
						4501,
						4505,
						4530,
						4533,
						4558,
						4576,
						4579,
						4593,
						4611,
						4622,
						4626,
						4631,
						4635,
						4647,
						4655,
						4667
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						4670,
						4671,
						4679,
						4683,
						4689,
						4695,
						4701,
						4702,
						4709,
						4713,
						4718,
						4720,
						4732,
						4735,
						4736,
						4737,
						4743,
						4744,
						4747,
						4748,
						4749,
						4753,
						4757,
						4758,
						4766,
						4789,
						4790,
						4822,
						4827,
						4828,
						4830,
						4832,
						4833,
						4834,
						4836,
						4841,
						4842,
						4847,
						4848,
						4849,
						4850,
						4851,
						4852,
						4853,
						4857,
						4865,
						4866,
						4867
					]
				},
				{
					"title": "Variables",
					"children": [
						4868,
						4869,
						4870,
						4871,
						4872,
						4873,
						4874,
						4875,
						4876,
						4877,
						4878,
						4879
					]
				},
				{
					"title": "Functions",
					"children": [
						4880,
						4884,
						4887,
						4891,
						4895,
						4900,
						4904,
						4916,
						4921,
						4924,
						4930,
						4934,
						4938,
						4945,
						4948,
						4954,
						4959,
						4963,
						4970,
						4975,
						4982,
						4987,
						4990,
						4993,
						4996,
						4999,
						5006,
						5008,
						5014,
						5020,
						5023,
						5025,
						5028,
						5035,
						5038,
						5041,
						5044,
						5048,
						5052,
						5055,
						5059,
						5063,
						5066,
						5069,
						5072,
						5075,
						5078,
						5082,
						5085,
						5088,
						5091,
						5094,
						5103,
						5111,
						5114,
						5121,
						5124,
						5130,
						5137,
						5142,
						5148,
						5154,
						5158,
						5161,
						5167,
						5170,
						5172,
						5174,
						5183,
						5186,
						5192,
						5196,
						5202,
						5208,
						5210,
						5225,
						5228,
						5230,
						5235,
						5237,
						5239,
						5241,
						5243,
						5246,
						5249,
						5252,
						5258,
						5264,
						5266,
						5270,
						5274,
						5277,
						5279
					]
				}
			],
			"categories": [
				{
					"title": "Components",
					"children": [
						4880,
						4975,
						4999,
						5006,
						5023,
						5025,
						5028,
						5035,
						5041,
						5063,
						5066,
						5072,
						5075,
						5078,
						5082
					]
				},
				{
					"title": "Hooks",
					"children": [
						5161,
						5167,
						5170,
						5172,
						5174,
						5183,
						5186,
						5192,
						5196,
						5202,
						5208,
						5210,
						5225,
						5228,
						5230,
						5235,
						5237,
						5239,
						5241,
						5243,
						5246,
						5249,
						5252,
						5258,
						5264,
						5266,
						5270,
						5274,
						5277,
						5279
					]
				},
				{
					"title": "Data Routers",
					"children": [
						4887,
						4900,
						4904,
						4963
					]
				},
				{
					"title": "Component Routers",
					"children": [
						4884,
						4987,
						5020,
						5085,
						5088,
						5154
					]
				},
				{
					"title": "Utils",
					"children": [
						4921,
						4930,
						4934,
						4938,
						4945,
						4959,
						4970,
						4982,
						4993,
						5008,
						5014,
						5038,
						5044,
						5048,
						5052,
						5055,
						5059
					]
				},
				{
					"title": "Types",
					"children": [
						2929,
						2934,
						3028,
						3318,
						3625,
						3632,
						3657,
						3678,
						3702,
						4001,
						4032,
						4060,
						4377,
						4402,
						4440,
						4477,
						4852
					]
				},
				{
					"title": "Other",
					"children": [
						2812,
						2816,
						2820,
						2830,
						2916,
						2921,
						2926,
						2938,
						2950,
						2955,
						2969,
						2971,
						2976,
						2977,
						2980,
						2987,
						3003,
						3006,
						3307,
						3311,
						3604,
						3606,
						3610,
						3614,
						3621,
						3629,
						3636,
						3699,
						3987,
						3989,
						3994,
						4006,
						4014,
						4019,
						4025,
						4037,
						4356,
						4379,
						4387,
						4391,
						4397,
						4423,
						4430,
						4447,
						4455,
						4469,
						4480,
						4485,
						4496,
						4501,
						4505,
						4530,
						4533,
						4558,
						4576,
						4579,
						4593,
						4611,
						4622,
						4626,
						4631,
						4635,
						4647,
						4655,
						4667,
						4670,
						4671,
						4679,
						4683,
						4689,
						4695,
						4701,
						4702,
						4709,
						4713,
						4718,
						4720,
						4732,
						4735,
						4736,
						4737,
						4743,
						4744,
						4747,
						4748,
						4749,
						4753,
						4757,
						4758,
						4766,
						4789,
						4790,
						4822,
						4827,
						4828,
						4830,
						4832,
						4833,
						4834,
						4836,
						4841,
						4842,
						4847,
						4848,
						4849,
						4850,
						4851,
						4853,
						4857,
						4865,
						4866,
						4867,
						4868,
						4869,
						4870,
						4871,
						4872,
						4873,
						4874,
						4875,
						4876,
						4877,
						4878,
						4879,
						4891,
						4895,
						4916,
						4924,
						4948,
						4954,
						4990,
						4996,
						5069,
						5091,
						5094,
						5103,
						5111,
						5114,
						5121,
						5124,
						5130,
						5137,
						5142,
						5148,
						5158
					]
				}
			],
			"readme": [
				{
					"kind": "code",
					"text": "`react-router`"
				},
				{
					"kind": "text",
					"text": " is the primary package in the React Router project.\n\n## Installation\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpm i react-router\n```"
				}
			]
		},
		{
			"id": 5285,
			"name": "@react-router/architect",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 5286,
					"name": "GetLoadContextFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that returns the value to use as "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " in route "
							},
							{
								"kind": "code",
								"text": "`loader`"
							},
							{
								"kind": "text",
								"text": " and\n"
							},
							{
								"kind": "code",
								"text": "`action`"
							},
							{
								"kind": "text",
								"text": " functions.\n\nYou can think of this as an escape hatch that allows you to pass\nenvironment/platform-specific values through to your loader/action."
							}
						]
					},
					"sources": [
						{
							"fileName": "server.ts",
							"line": 20,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/server.ts#L20"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 5287,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 20,
									"character": 37,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/server.ts#L20"
								}
							],
							"signatures": [
								{
									"id": 5288,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5289,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+aws-lambda@8.10.141/node_modules/@types/aws-lambda/trigger/api-gateway-proxy.d.ts",
													"qualifiedName": "APIGatewayProxyEventV2"
												},
												"name": "APIGatewayProxyEventV2",
												"package": "@types/aws-lambda"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/dist/development/data-CQbyyGzl.d.mts",
															"qualifiedName": "AppLoadContext"
														},
														"name": "AppLoadContext",
														"package": "react-router"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/dist/development/data-CQbyyGzl.d.mts",
													"qualifiedName": "AppLoadContext"
												},
												"name": "AppLoadContext",
												"package": "react-router"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 5290,
					"name": "RequestHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "server.ts",
							"line": 24,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/server.ts#L24"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+aws-lambda@8.10.141/node_modules/@types/aws-lambda/trigger/api-gateway-proxy.d.ts",
							"qualifiedName": "APIGatewayProxyHandlerV2"
						},
						"name": "APIGatewayProxyHandlerV2",
						"package": "@types/aws-lambda"
					}
				},
				{
					"id": 5291,
					"name": "createArcTableSessionStorage",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "sessions/arcTableSessionStorage.ts",
							"line": 46,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/sessions/arcTableSessionStorage.ts#L46"
						}
					],
					"signatures": [
						{
							"id": 5292,
							"name": "createArcTableSessionStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Session storage using a DynamoDB table managed by Architect.\n\nAdd the following lines to your project's "
									},
									{
										"kind": "code",
										"text": "`app.arc`"
									},
									{
										"kind": "text",
										"text": " file:"
									}
								],
								"blockTags": [
									{
										"tag": "@tables",
										"content": [
											{
												"kind": "text",
												"text": "arc-sessions\n    _idx *String\n    _ttl TTL"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sessions/arcTableSessionStorage.ts",
									"line": 46,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/sessions/arcTableSessionStorage.ts#L46"
								}
							],
							"typeParameters": [
								{
									"id": 5293,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/dist/development/index.d.mts",
											"qualifiedName": "SessionData"
										},
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 5294,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 5293,
										"name": "Data",
										"package": "@react-router/architect",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 5295,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-architect/sessions/arcTableSessionStorage.ts",
											"qualifiedName": "ArcTableSessionStorageOptions"
										},
										"name": "ArcTableSessionStorageOptions",
										"package": "@react-router/architect"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/dist/development/index.d.mts",
									"qualifiedName": "SessionStorage"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5293,
										"name": "Data",
										"package": "@react-router/architect",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 5294,
										"name": "FlashData",
										"package": "@react-router/architect",
										"refersToTypeParameter": true
									}
								],
								"name": "SessionStorage",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5296,
					"name": "createRequestHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "server.ts",
							"line": 30,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/server.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 5297,
							"name": "createRequestHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a request handler for Architect that serves the response using\nReact Router."
									}
								]
							},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 30,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/server.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 5298,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5299,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5300,
													"name": "build",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "server.ts",
															"line": 35,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/server.ts#L35"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/dist/development/index.d.mts",
															"qualifiedName": "ServerBuild"
														},
														"name": "ServerBuild",
														"package": "react-router"
													}
												},
												{
													"id": 5301,
													"name": "getLoadContext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "server.ts",
															"line": 36,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/server.ts#L36"
														}
													],
													"type": {
														"type": "reference",
														"target": 5286,
														"name": "GetLoadContextFunction",
														"package": "@react-router/architect"
													}
												},
												{
													"id": 5302,
													"name": "mode",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "server.ts",
															"line": 37,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/server.ts#L37"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "process.env.NODE_ENV"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5300,
														5301,
														5302
													]
												}
											],
											"sources": [
												{
													"fileName": "server.ts",
													"line": 34,
													"character": 3,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-architect/server.ts#L34"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 5290,
								"name": "RequestHandler",
								"package": "@react-router/architect"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						5286,
						5290
					]
				},
				{
					"title": "Functions",
					"children": [
						5291,
						5296
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "[Architect](https://arc.codes) server request handler for React Router.\n\n"
				},
				{
					"kind": "code",
					"text": "```bash\nnpm install @react-router/architect\n```"
				}
			]
		},
		{
			"id": 5303,
			"name": "@react-router/cloudflare",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 5304,
					"name": "createPagesFunctionHandlerParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5305,
							"name": "build",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "worker.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L37"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/dist/development/index.d.mts",
											"qualifiedName": "ServerBuild"
										},
										"name": "ServerBuild",
										"package": "react-router"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5306,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "worker.ts",
													"line": 37,
													"character": 24,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L37"
												}
											],
											"signatures": [
												{
													"id": 5307,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "worker.ts",
															"line": 37,
															"character": 24,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L37"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router/dist/development/index.d.mts",
																	"qualifiedName": "ServerBuild"
																},
																"name": "ServerBuild",
																"package": "react-router"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router/dist/development/index.d.mts",
																			"qualifiedName": "ServerBuild"
																		},
																		"name": "ServerBuild",
																		"package": "react-router"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 5308,
							"name": "getLoadContext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "worker.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L38"
								}
							],
							"type": {
								"type": "reference",
								"target": 5311,
								"typeArguments": [
									{
										"type": "reference",
										"target": 5310,
										"name": "Env",
										"package": "@react-router/cloudflare",
										"qualifiedName": "createPagesFunctionHandlerParams.Env",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "GetLoadContextFunction",
								"package": "@react-router/cloudflare"
							}
						},
						{
							"id": 5309,
							"name": "mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "worker.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5305,
								5308,
								5309
							]
						}
					],
					"sources": [
						{
							"fileName": "worker.ts",
							"line": 36,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L36"
						}
					],
					"typeParameters": [
						{
							"id": 5310,
							"name": "Env",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 5311,
					"name": "GetLoadContextFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that returns the value to use as "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " in route "
							},
							{
								"kind": "code",
								"text": "`loader`"
							},
							{
								"kind": "text",
								"text": " and\n"
							},
							{
								"kind": "code",
								"text": "`action`"
							},
							{
								"kind": "text",
								"text": " functions.\n\nYou can think of this as an escape hatch that allows you to pass\nenvironment/platform-specific values through to your loader/action."
							}
						]
					},
					"sources": [
						{
							"fileName": "worker.ts",
							"line": 12,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L12"
						}
					],
					"typeParameters": [
						{
							"id": 5312,
							"name": "Env",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 5313,
							"name": "Params",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5314,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 5315,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "worker.ts",
									"line": 16,
									"character": 4,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L16"
								}
							],
							"signatures": [
								{
									"id": 5316,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5317,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5318,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 5319,
															"name": "context",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "worker.ts",
																	"line": 18,
																	"character": 2,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L18"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 5320,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 5321,
																			"name": "cloudflare",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "worker.ts",
																					"line": 19,
																					"character": 4,
																					"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L19"
																				}
																			],
																			"type": {
																				"type": "intersection",
																				"types": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "node_modules/.pnpm/@cloudflare+workers-types@4.20240712.0/node_modules/@cloudflare/workers-types/index.d.ts",
																							"qualifiedName": "EventContext"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 5312,
																								"name": "Env",
																								"package": "@react-router/cloudflare",
																								"refersToTypeParameter": true
																							},
																							{
																								"type": "reference",
																								"target": 5313,
																								"name": "Params",
																								"package": "@react-router/cloudflare",
																								"refersToTypeParameter": true
																							},
																							{
																								"type": "reference",
																								"target": 5314,
																								"name": "Data",
																								"package": "@react-router/cloudflare",
																								"refersToTypeParameter": true
																							}
																						],
																						"name": "EventContext",
																						"package": "@cloudflare/workers-types"
																					},
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 5322,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 5323,
																									"name": "caches",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "worker.ts",
																											"line": 29,
																											"character": 6,
																											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L29"
																										}
																									],
																									"type": {
																										"type": "reference",
																										"target": {
																											"sourceFileName": "node_modules/.pnpm/@cloudflare+workers-types@4.20240712.0/node_modules/@cloudflare/workers-types/index.ts",
																											"qualifiedName": "CacheStorage"
																										},
																										"name": "CacheStorage",
																										"package": "@cloudflare/workers-types"
																									}
																								},
																								{
																									"id": 5324,
																									"name": "cf",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "worker.ts",
																											"line": 20,
																											"character": 6,
																											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L20"
																										}
																									],
																									"type": {
																										"type": "indexedAccess",
																										"indexType": {
																											"type": "literal",
																											"value": "cf"
																										},
																										"objectType": {
																											"type": "indexedAccess",
																											"indexType": {
																												"type": "literal",
																												"value": "request"
																											},
																											"objectType": {
																												"type": "reference",
																												"target": {
																													"sourceFileName": "node_modules/.pnpm/@cloudflare+workers-types@4.20240712.0/node_modules/@cloudflare/workers-types/index.d.ts",
																													"qualifiedName": "EventContext"
																												},
																												"typeArguments": [
																													{
																														"type": "reference",
																														"target": 5312,
																														"name": "Env",
																														"package": "@react-router/cloudflare",
																														"refersToTypeParameter": true
																													},
																													{
																														"type": "reference",
																														"target": 5313,
																														"name": "Params",
																														"package": "@react-router/cloudflare",
																														"refersToTypeParameter": true
																													},
																													{
																														"type": "reference",
																														"target": 5314,
																														"name": "Data",
																														"package": "@react-router/cloudflare",
																														"refersToTypeParameter": true
																													}
																												],
																												"name": "EventContext",
																												"package": "@cloudflare/workers-types"
																											}
																										}
																									}
																								},
																								{
																									"id": 5325,
																									"name": "ctx",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "worker.ts",
																											"line": 21,
																											"character": 6,
																											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L21"
																										}
																									],
																									"type": {
																										"type": "reflection",
																										"declaration": {
																											"id": 5326,
																											"name": "__type",
																											"variant": "declaration",
																											"kind": 65536,
																											"flags": {},
																											"children": [
																												{
																													"id": 5327,
																													"name": "passThroughOnException",
																													"variant": "declaration",
																													"kind": 1024,
																													"flags": {},
																													"sources": [
																														{
																															"fileName": "worker.ts",
																															"line": 23,
																															"character": 8,
																															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L23"
																														}
																													],
																													"type": {
																														"type": "indexedAccess",
																														"indexType": {
																															"type": "literal",
																															"value": "passThroughOnException"
																														},
																														"objectType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "node_modules/.pnpm/@cloudflare+workers-types@4.20240712.0/node_modules/@cloudflare/workers-types/index.d.ts",
																																"qualifiedName": "EventContext"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": 5312,
																																	"name": "Env",
																																	"package": "@react-router/cloudflare",
																																	"refersToTypeParameter": true
																																},
																																{
																																	"type": "reference",
																																	"target": 5313,
																																	"name": "Params",
																																	"package": "@react-router/cloudflare",
																																	"refersToTypeParameter": true
																																},
																																{
																																	"type": "reference",
																																	"target": 5314,
																																	"name": "Data",
																																	"package": "@react-router/cloudflare",
																																	"refersToTypeParameter": true
																																}
																															],
																															"name": "EventContext",
																															"package": "@cloudflare/workers-types"
																														}
																													}
																												},
																												{
																													"id": 5328,
																													"name": "waitUntil",
																													"variant": "declaration",
																													"kind": 1024,
																													"flags": {},
																													"sources": [
																														{
																															"fileName": "worker.ts",
																															"line": 22,
																															"character": 8,
																															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L22"
																														}
																													],
																													"type": {
																														"type": "indexedAccess",
																														"indexType": {
																															"type": "literal",
																															"value": "waitUntil"
																														},
																														"objectType": {
																															"type": "reference",
																															"target": {
																																"sourceFileName": "node_modules/.pnpm/@cloudflare+workers-types@4.20240712.0/node_modules/@cloudflare/workers-types/index.d.ts",
																																"qualifiedName": "EventContext"
																															},
																															"typeArguments": [
																																{
																																	"type": "reference",
																																	"target": 5312,
																																	"name": "Env",
																																	"package": "@react-router/cloudflare",
																																	"refersToTypeParameter": true
																																},
																																{
																																	"type": "reference",
																																	"target": 5313,
																																	"name": "Params",
																																	"package": "@react-router/cloudflare",
																																	"refersToTypeParameter": true
																																},
																																{
																																	"type": "reference",
																																	"target": 5314,
																																	"name": "Data",
																																	"package": "@react-router/cloudflare",
																																	"refersToTypeParameter": true
																																}
																															],
																															"name": "EventContext",
																															"package": "@cloudflare/workers-types"
																														}
																													}
																												}
																											],
																											"groups": [
																												{
																													"title": "Properties",
																													"children": [
																														5327,
																														5328
																													]
																												}
																											],
																											"sources": [
																												{
																													"fileName": "worker.ts",
																													"line": 21,
																													"character": 11,
																													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L21"
																												}
																											]
																										}
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										5323,
																										5324,
																										5325
																									]
																								}
																							],
																							"sources": [
																								{
																									"fileName": "worker.ts",
																									"line": 19,
																									"character": 50,
																									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L19"
																								}
																							]
																						}
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				5321
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "worker.ts",
																			"line": 18,
																			"character": 11,
																			"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L18"
																		}
																	]
																}
															}
														},
														{
															"id": 5329,
															"name": "request",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "worker.ts",
																	"line": 17,
																	"character": 2,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L17"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/@cloudflare+workers-types@4.20240712.0/node_modules/@cloudflare/workers-types/index.d.ts",
																	"qualifiedName": "Request"
																},
																"name": "Request",
																"package": "@cloudflare/workers-types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																5319,
																5329
															]
														}
													],
													"sources": [
														{
															"fileName": "worker.ts",
															"line": 16,
															"character": 11,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L16"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/dist/development/data-CQbyyGzl.d.mts",
													"qualifiedName": "AppLoadContext"
												},
												"name": "AppLoadContext",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/dist/development/data-CQbyyGzl.d.mts",
															"qualifiedName": "AppLoadContext"
														},
														"name": "AppLoadContext",
														"package": "react-router"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 5330,
					"name": "RequestHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "worker.ts",
							"line": 34,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L34"
						}
					],
					"typeParameters": [
						{
							"id": 5331,
							"name": "Env",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@cloudflare+workers-types@4.20240712.0/node_modules/@cloudflare/workers-types/index.d.ts",
							"qualifiedName": "PagesFunction"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 5331,
								"name": "Env",
								"package": "@react-router/cloudflare",
								"refersToTypeParameter": true
							}
						],
						"name": "PagesFunction",
						"package": "@cloudflare/workers-types"
					}
				},
				{
					"id": 5332,
					"name": "createPagesFunctionHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "worker.ts",
							"line": 78,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L78"
						}
					],
					"signatures": [
						{
							"id": 5333,
							"name": "createPagesFunctionHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "worker.ts",
									"line": 78,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L78"
								}
							],
							"typeParameters": [
								{
									"id": 5334,
									"name": "Env",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 5335,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5304,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5334,
												"name": "Env",
												"package": "@react-router/cloudflare",
												"refersToTypeParameter": true
											}
										],
										"name": "createPagesFunctionHandlerParams",
										"package": "@react-router/cloudflare"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5336,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "worker.ts",
											"line": 113,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L113"
										}
									],
									"signatures": [
										{
											"id": 5337,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "worker.ts",
													"line": 113,
													"character": 9,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L113"
												}
											],
											"parameters": [
												{
													"id": 5338,
													"name": "context",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@cloudflare+workers-types@4.20240712.0/node_modules/@cloudflare/workers-types/index.d.ts",
															"qualifiedName": "EventContext"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 5334,
																"name": "Env",
																"package": "@react-router/cloudflare",
																"refersToTypeParameter": true
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "EventContext",
														"package": "@cloudflare/workers-types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@cloudflare+workers-types@4.20240712.0/node_modules/@cloudflare/workers-types/index.d.ts",
															"qualifiedName": "Response"
														},
														"name": "Response",
														"package": "@cloudflare/workers-types"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 5339,
					"name": "createRequestHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "worker.ts",
							"line": 42,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 5340,
							"name": "createRequestHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "worker.ts",
									"line": 42,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/worker.ts#L42"
								}
							],
							"typeParameters": [
								{
									"id": 5341,
									"name": "Env",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 5342,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 5304,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5341,
												"name": "Env",
												"package": "@react-router/cloudflare",
												"refersToTypeParameter": true
											}
										],
										"name": "createPagesFunctionHandlerParams",
										"package": "@react-router/cloudflare"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 5330,
								"typeArguments": [
									{
										"type": "reference",
										"target": 5341,
										"name": "Env",
										"package": "@react-router/cloudflare",
										"refersToTypeParameter": true
									}
								],
								"name": "RequestHandler",
								"package": "@react-router/cloudflare"
							}
						}
					]
				},
				{
					"id": 5343,
					"name": "createWorkersKVSessionStorage",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "sessions/workersKVStorage.ts",
							"line": 27,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/sessions/workersKVStorage.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 5344,
							"name": "createWorkersKVSessionStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a SessionStorage that stores session data in the Clouldflare KV Store.\n\nThe advantage of using this instead of cookie session storage is that\nKV Store may contain much more data than cookies."
									}
								]
							},
							"sources": [
								{
									"fileName": "sessions/workersKVStorage.ts",
									"line": 27,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-cloudflare/sessions/workersKVStorage.ts#L27"
								}
							],
							"typeParameters": [
								{
									"id": 5345,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/dist/development/index.d.mts",
											"qualifiedName": "SessionData"
										},
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 5346,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 5345,
										"name": "Data",
										"package": "@react-router/cloudflare",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 5347,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-cloudflare/sessions/workersKVStorage.ts",
											"qualifiedName": "WorkersKVSessionStorageOptions"
										},
										"name": "WorkersKVSessionStorageOptions",
										"package": "@react-router/cloudflare"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/dist/development/index.d.mts",
									"qualifiedName": "SessionStorage"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5345,
										"name": "Data",
										"package": "@react-router/cloudflare",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 5346,
										"name": "FlashData",
										"package": "@react-router/cloudflare",
										"refersToTypeParameter": true
									}
								],
								"name": "SessionStorage",
								"package": "react-router"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						5304
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						5311,
						5330
					]
				},
				{
					"title": "Functions",
					"children": [
						5332,
						5339,
						5343
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "Cloudflare platform abstractions for React Router\n\n"
				},
				{
					"kind": "code",
					"text": "```bash\nnpm install @react-router/cloudflare @cloudflare/workers-types\n```"
				}
			]
		},
		{
			"id": 5348,
			"name": "@react-router/dev",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 5349,
					"name": "config",
					"variant": "declaration",
					"kind": 2,
					"flags": {},
					"children": [
						{
							"id": 5350,
							"name": "BuildManifest",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"sources": [
								{
									"fileName": "config/config.ts",
									"line": 90,
									"character": 12,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L90"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-dev/config/config.ts",
											"qualifiedName": "DefaultBuildManifest"
										},
										"name": "DefaultBuildManifest",
										"package": "@react-router/dev"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-dev/config/config.ts",
											"qualifiedName": "ServerBundlesBuildManifest"
										},
										"name": "ServerBundlesBuildManifest",
										"package": "@react-router/dev"
									}
								]
							}
						},
						{
							"id": 5351,
							"name": "Config",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Config to be exported via the default export from "
									},
									{
										"kind": "code",
										"text": "`react-router.config.ts`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "config/config.ts",
									"line": 101,
									"character": 12,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L101"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5352,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 5353,
											"name": "appDirectory",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The path to the "
													},
													{
														"kind": "code",
														"text": "`app`"
													},
													{
														"kind": "text",
														"text": " directory, relative to the root directory. Defaults\nto "
													},
													{
														"kind": "code",
														"text": "`\"app\"`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 106,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L106"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5354,
											"name": "basename",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The React Router app basename.  Defaults to "
													},
													{
														"kind": "code",
														"text": "`\"/\"`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 124,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L124"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5355,
											"name": "buildDirectory",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The path to the build directory, relative to the project. Defaults to\n"
													},
													{
														"kind": "code",
														"text": "`\"build\"`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 129,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L129"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5356,
											"name": "buildEnd",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A function that is called after the full React Router build is complete."
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 133,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L133"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router-dev/config/config.ts",
													"qualifiedName": "BuildEndHook"
												},
												"name": "BuildEndHook",
												"package": "@react-router/dev"
											}
										},
										{
											"id": 5357,
											"name": "future",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Enabled future flags"
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 116,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L116"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "tuple",
													"elements": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router-dev/config/config.ts",
																	"qualifiedName": "FutureConfig"
																},
																"name": "FutureConfig",
																"package": "@react-router/dev"
															}
														}
													]
												},
												"extendsType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "never"
														}
													]
												},
												"trueType": {
													"type": "reflection",
													"declaration": {
														"id": 5358,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"sources": [
															{
																"fileName": "config/config.ts",
																"line": 118,
																"character": 6,
																"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L118"
															}
														],
														"indexSignatures": [
															{
																"id": 5359,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"sources": [
																	{
																		"fileName": "config/config.ts",
																		"line": 118,
																		"character": 8,
																		"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L118"
																	}
																],
																"parameters": [
																	{
																		"id": 5360,
																		"name": "key",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														]
													}
												},
												"falseType": {
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Partial"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router-dev/config/config.ts",
																"qualifiedName": "FutureConfig"
															},
															"name": "FutureConfig",
															"package": "@react-router/dev"
														}
													],
													"name": "Partial",
													"package": "typescript"
												}
											}
										},
										{
											"id": 5361,
											"name": "prerender",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An array of URLs to prerender to HTML files at build time.  Can also be a\nfunction returning an array to dynamically generate URLs."
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 138,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L138"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 5362,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "config/config.ts",
																	"line": 141,
																	"character": 7,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L141"
																}
															],
															"signatures": [
																{
																	"id": 5363,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 5364,
																			"name": "args",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 5365,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 5366,
																							"name": "getStaticPaths",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "config/config.ts",
																									"line": 142,
																									"character": 8,
																									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L142"
																								}
																							],
																							"type": {
																								"type": "reflection",
																								"declaration": {
																									"id": 5367,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "config/config.ts",
																											"line": 142,
																											"character": 24,
																											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L142"
																										}
																									],
																									"signatures": [
																										{
																											"id": 5368,
																											"name": "__type",
																											"variant": "signature",
																											"kind": 4096,
																											"flags": {},
																											"type": {
																												"type": "array",
																												"elementType": {
																													"type": "intrinsic",
																													"name": "string"
																												}
																											}
																										}
																									]
																								}
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								5366
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "config/config.ts",
																							"line": 141,
																							"character": 14,
																							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L141"
																						}
																					]
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "array",
																						"elementType": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 5369,
											"name": "presets",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An array of React Router plugin config presets to ease integration with\nother platforms and tools."
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 148,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L148"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5374,
													"name": "Preset",
													"package": "@react-router/dev"
												}
											}
										},
										{
											"id": 5370,
											"name": "serverBuildFile",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The file name of the server build output. This file\nshould end in a "
													},
													{
														"kind": "code",
														"text": "`.js`"
													},
													{
														"kind": "text",
														"text": " extension and should be deployed to your server.\nDefaults to "
													},
													{
														"kind": "code",
														"text": "`\"index.js\"`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 154,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L154"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5371,
											"name": "serverBundles",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A function for assigning routes to different server bundles. This\nfunction should return a server bundle ID which will be used as the\nbundle's directory name within the server build directory."
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 160,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L160"
												}
											],
											"type": {
												"type": "reference",
												"target": 5389,
												"name": "ServerBundlesFunction",
												"package": "@react-router/dev"
											}
										},
										{
											"id": 5372,
											"name": "serverModuleFormat",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The output format of the server build. Defaults to \"esm\"."
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 111,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L111"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router-dev/config/config.ts",
													"qualifiedName": "ServerModuleFormat"
												},
												"name": "ServerModuleFormat",
												"package": "@react-router/dev"
											}
										},
										{
											"id": 5373,
											"name": "ssr",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Enable server-side rendering for your application. Disable to use \"SPA\nMode\", which will request the "
													},
													{
														"kind": "code",
														"text": "`/`"
													},
													{
														"kind": "text",
														"text": " path at build-time and save it as an\n"
													},
													{
														"kind": "code",
														"text": "`index.html`"
													},
													{
														"kind": "text",
														"text": " file with your assets so your application can be deployed as a\nSPA without server-rendering. Default's to "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 167,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L167"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												5353,
												5354,
												5355,
												5356,
												5357,
												5361,
												5369,
												5370,
												5371,
												5372,
												5373
											]
										}
									],
									"sources": [
										{
											"fileName": "config/config.ts",
											"line": 101,
											"character": 32,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L101"
										}
									]
								}
							}
						},
						{
							"id": 5374,
							"name": "Preset",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"sources": [
								{
									"fileName": "config/config.ts",
									"line": 35,
									"character": 12,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L35"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5375,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 5376,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 36,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L36"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5377,
											"name": "reactRouterConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 37,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L37"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5378,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "config/config.ts",
															"line": 37,
															"character": 22,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L37"
														}
													],
													"signatures": [
														{
															"id": 5379,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 5380,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 5381,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 5382,
																					"name": "reactRouterUserConfig",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "config/config.ts",
																							"line": 38,
																							"character": 4,
																							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L38"
																						}
																					],
																					"type": {
																						"type": "reference",
																						"target": 5351,
																						"name": "ReactRouterConfig",
																						"package": "@react-router/dev"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						5382
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "config/config.ts",
																					"line": 37,
																					"character": 29,
																					"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L37"
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router-dev/config/config.ts",
																			"qualifiedName": "ConfigPreset"
																		},
																		"name": "ConfigPreset",
																		"package": "@react-router/dev"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "packages/react-router-dev/config/config.ts",
																					"qualifiedName": "ConfigPreset"
																				},
																				"name": "ConfigPreset",
																				"package": "@react-router/dev"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										},
										{
											"id": 5383,
											"name": "reactRouterConfigResolved",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "config/config.ts",
													"line": 40,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L40"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5384,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "config/config.ts",
															"line": 40,
															"character": 30,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L40"
														}
													],
													"signatures": [
														{
															"id": 5385,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 5386,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 5387,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 5388,
																					"name": "reactRouterConfig",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "config/config.ts",
																							"line": 41,
																							"character": 4,
																							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L41"
																						}
																					],
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "packages/react-router-dev/config/config.ts",
																							"qualifiedName": "ResolvedReactRouterConfig"
																						},
																						"name": "ResolvedReactRouterConfig",
																						"package": "@react-router/dev"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						5388
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "config/config.ts",
																					"line": 40,
																					"character": 37,
																					"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L40"
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												5376,
												5377,
												5383
											]
										}
									],
									"sources": [
										{
											"fileName": "config/config.ts",
											"line": 35,
											"character": 21,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L35"
										}
									]
								}
							}
						},
						{
							"id": 5389,
							"name": "ServerBundlesFunction",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"sources": [
								{
									"fileName": "config/config.ts",
									"line": 61,
									"character": 12,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L61"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5390,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "config/config.ts",
											"line": 61,
											"character": 36,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L61"
										}
									],
									"signatures": [
										{
											"id": 5391,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 5392,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 5393,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 5394,
																	"name": "branch",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "config/config.ts",
																			"line": 62,
																			"character": 2,
																			"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L62"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "packages/react-router-dev/config/config.ts",
																				"qualifiedName": "BranchRoute"
																			},
																			"name": "BranchRoute",
																			"package": "@react-router/dev"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		5394
																	]
																}
															],
															"sources": [
																{
																	"fileName": "config/config.ts",
																	"line": 61,
																	"character": 43,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/config.ts#L61"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Type Aliases",
							"children": [
								5350,
								5351,
								5374,
								5389
							]
						}
					],
					"sources": [
						{
							"fileName": "config.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config.ts#L1"
						}
					]
				},
				{
					"id": 5395,
					"name": "routes",
					"variant": "declaration",
					"kind": 2,
					"flags": {},
					"children": [
						{
							"id": 5396,
							"name": "RouteConfigEntry",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configuration for an individual route, for use within "
									},
									{
										"kind": "code",
										"text": "`routes.ts`"
									},
									{
										"kind": "text",
										"text": ". As a\nconvenience, route config entries can be created with the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "route",
										"target": 5425
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "index",
										"target": 5406
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "layout",
										"target": 5410
									},
									{
										"kind": "text",
										"text": " helper functions."
									}
								]
							},
							"children": [
								{
									"id": 5397,
									"name": "caseSensitive",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Should be "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " is case-sensitive. Defaults to "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 87,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L87"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5398,
									"name": "children",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The child routes."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 98,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L98"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5396,
											"name": "RouteConfigEntry",
											"package": "@react-router/dev"
										}
									}
								},
								{
									"id": 5399,
									"name": "file",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The path to the entry point for this route, relative to\n"
											},
											{
												"kind": "code",
												"text": "`config.appDirectory`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 93,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L93"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5400,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The unique id for this route."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 72,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L72"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5401,
									"name": "index",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Should be "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if it is an index route. This disallows child routes."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 82,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L82"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5402,
									"name": "path",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The path this route uses to match on the URL pathname."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 77,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L77"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5397,
										5398,
										5399,
										5400,
										5401,
										5402
									]
								}
							],
							"sources": [
								{
									"fileName": "config/routes.ts",
									"line": 68,
									"character": 17,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L68"
								}
							]
						},
						{
							"id": 5403,
							"name": "RouteConfig",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Route config to be exported via the default export from "
									},
									{
										"kind": "code",
										"text": "`app/routes.ts`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "config/routes.ts",
									"line": 130,
									"character": 12,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L130"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 5404,
							"name": "getAppDirectory",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "config/routes.ts",
									"line": 19,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L19"
								}
							],
							"signatures": [
								{
									"id": 5405,
									"name": "getAppDirectory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Provides the absolute path to the app directory, for use within "
											},
											{
												"kind": "code",
												"text": "`routes.ts`"
											},
											{
												"kind": "text",
												"text": ".\nThis is designed to support resolving file system routes."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 19,
											"character": 16,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L19"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 5406,
							"name": "index",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "config/routes.ts",
									"line": 233,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L233"
								}
							],
							"signatures": [
								{
									"id": 5407,
									"name": "index",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Helper function for creating a route config entry for an index route, for use\nwithin "
											},
											{
												"kind": "code",
												"text": "`routes.ts`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 233,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L233"
										}
									],
									"parameters": [
										{
											"id": 5408,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5409,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router-dev/config/routes.ts",
													"qualifiedName": "CreateIndexOptions"
												},
												"name": "CreateIndexOptions",
												"package": "@react-router/dev"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 5396,
										"name": "RouteConfigEntry",
										"package": "@react-router/dev"
									}
								}
							]
						},
						{
							"id": 5410,
							"name": "layout",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "config/routes.ts",
									"line": 252,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L252"
								},
								{
									"fileName": "config/routes.ts",
									"line": 253,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L253"
								},
								{
									"fileName": "config/routes.ts",
									"line": 258,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L258"
								}
							],
							"signatures": [
								{
									"id": 5411,
									"name": "layout",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Helper function for creating a route config entry for a layout route, for use\nwithin "
											},
											{
												"kind": "code",
												"text": "`routes.ts`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 252,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L252"
										}
									],
									"parameters": [
										{
											"id": 5412,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5413,
											"name": "children",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5396,
													"name": "RouteConfigEntry",
													"package": "@react-router/dev"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 5396,
										"name": "RouteConfigEntry",
										"package": "@react-router/dev"
									}
								},
								{
									"id": 5414,
									"name": "layout",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 253,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L253"
										}
									],
									"parameters": [
										{
											"id": 5415,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5416,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router-dev/config/routes.ts",
													"qualifiedName": "CreateLayoutOptions"
												},
												"name": "CreateLayoutOptions",
												"package": "@react-router/dev"
											}
										},
										{
											"id": 5417,
											"name": "children",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5396,
													"name": "RouteConfigEntry",
													"package": "@react-router/dev"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 5396,
										"name": "RouteConfigEntry",
										"package": "@react-router/dev"
									}
								}
							]
						},
						{
							"id": 5418,
							"name": "prefix",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "config/routes.ts",
									"line": 282,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L282"
								}
							],
							"signatures": [
								{
									"id": 5419,
									"name": "prefix",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Helper function for adding a path prefix to a set of routes without needing\nto introduce a parent route file, for use within "
											},
											{
												"kind": "code",
												"text": "`routes.ts`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 282,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L282"
										}
									],
									"parameters": [
										{
											"id": 5420,
											"name": "prefixPath",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5421,
											"name": "routes",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5396,
													"name": "RouteConfigEntry",
													"package": "@react-router/dev"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5396,
											"name": "RouteConfigEntry",
											"package": "@react-router/dev"
										}
									}
								}
							]
						},
						{
							"id": 5422,
							"name": "relative",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "config/routes.ts",
									"line": 310,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L310"
								}
							],
							"signatures": [
								{
									"id": 5423,
									"name": "relative",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a set of route config helpers that resolve file paths relative to the\ngiven directory, for use within "
											},
											{
												"kind": "code",
												"text": "`routes.ts`"
											},
											{
												"kind": "text",
												"text": ". This is designed to support\nsplitting route config into multiple files within different directories."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 310,
											"character": 16,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L310"
										}
									],
									"parameters": [
										{
											"id": 5424,
											"name": "directory",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router-dev/config/routes.ts",
												"qualifiedName": "helpers"
											},
											"name": "helpers",
											"package": "@react-router/dev",
											"preferValues": true
										}
									}
								}
							]
						},
						{
							"id": 5425,
							"name": "route",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "config/routes.ts",
									"line": 189,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L189"
								},
								{
									"fileName": "config/routes.ts",
									"line": 194,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L194"
								},
								{
									"fileName": "config/routes.ts",
									"line": 200,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L200"
								}
							],
							"signatures": [
								{
									"id": 5426,
									"name": "route",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Helper function for creating a route config entry, for use within\n"
											},
											{
												"kind": "code",
												"text": "`routes.ts`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 189,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L189"
										}
									],
									"parameters": [
										{
											"id": 5427,
											"name": "path",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 5428,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5429,
											"name": "children",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5396,
													"name": "RouteConfigEntry",
													"package": "@react-router/dev"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 5396,
										"name": "RouteConfigEntry",
										"package": "@react-router/dev"
									}
								},
								{
									"id": 5430,
									"name": "route",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "config/routes.ts",
											"line": 194,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/config/routes.ts#L194"
										}
									],
									"parameters": [
										{
											"id": 5431,
											"name": "path",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 5432,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5433,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router-dev/config/routes.ts",
													"qualifiedName": "CreateRouteOptions"
												},
												"name": "CreateRouteOptions",
												"package": "@react-router/dev"
											}
										},
										{
											"id": 5434,
											"name": "children",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 5396,
													"name": "RouteConfigEntry",
													"package": "@react-router/dev"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 5396,
										"name": "RouteConfigEntry",
										"package": "@react-router/dev"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								5396
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								5403
							]
						},
						{
							"title": "Functions",
							"children": [
								5404,
								5406,
								5410,
								5418,
								5422,
								5425
							]
						}
					],
					"sources": [
						{
							"fileName": "routes.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/routes.ts#L1"
						}
					]
				},
				{
					"id": 5435,
					"name": "vite",
					"variant": "declaration",
					"kind": 2,
					"flags": {},
					"children": [
						{
							"id": 5436,
							"name": "reactRouter",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "React Router [Vite plugin.](https://vitejs.dev/guide/using-plugins.html)"
									}
								]
							},
							"sources": [
								{
									"fileName": "vite/plugin.ts",
									"line": 401,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/vite/plugin.ts#L401"
								}
							],
							"signatures": [
								{
									"id": 5437,
									"name": "reactRouter",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "vite/plugin.ts",
											"line": 401,
											"character": 13,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/vite/plugin.ts#L401"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/vite@6.0.2_@types+node@20.11.30_jiti@1.21.0_yaml@2.6.0/node_modules/vite/dist/node/index.d.ts",
												"qualifiedName": "Plugin"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Plugin",
											"package": "vite"
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								5436
							]
						}
					],
					"sources": [
						{
							"fileName": "vite.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/vite.ts#L1"
						}
					]
				},
				{
					"id": 5438,
					"name": "vite/cloudflare",
					"variant": "declaration",
					"kind": 2,
					"flags": {},
					"children": [
						{
							"id": 5439,
							"name": "cloudflareDevProxy",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Vite plugin that provides [Node proxies to local workerd\nbindings](https://developers.cloudflare.com/workers/wrangler/api/#getplatformproxy)\nto "
									},
									{
										"kind": "code",
										"text": "`context.cloudflare`"
									},
									{
										"kind": "text",
										"text": " in your server loaders and server actions during\ndevelopment."
									}
								]
							},
							"sources": [
								{
									"fileName": "vite/cloudflare-dev-proxy.ts",
									"line": 37,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/vite/cloudflare-dev-proxy.ts#L37"
								}
							],
							"signatures": [
								{
									"id": 5440,
									"name": "cloudflareDevProxy",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "vite/cloudflare-dev-proxy.ts",
											"line": 37,
											"character": 44,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/vite/cloudflare-dev-proxy.ts#L37"
										}
									],
									"typeParameters": [
										{
											"id": 5441,
											"name": "Env",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										},
										{
											"id": 5442,
											"name": "Cf",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
													"qualifiedName": "CfProperties"
												},
												"name": "CfProperties",
												"package": "@react-router/dev"
											}
										}
									],
									"parameters": [
										{
											"id": 5443,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 5444,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 5445,
																	"name": "getLoadContext",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "vite/cloudflare-dev-proxy.ts",
																			"line": 39,
																			"character": 4,
																			"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/vite/cloudflare-dev-proxy.ts#L39"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
																			"qualifiedName": "GetLoadContext"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 5441,
																				"name": "Env",
																				"package": "@react-router/dev",
																				"refersToTypeParameter": true
																			},
																			{
																				"type": "reference",
																				"target": 5442,
																				"name": "Cf",
																				"package": "@react-router/dev",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "GetLoadContext",
																		"package": "@react-router/dev"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		5445
																	]
																}
															],
															"sources": [
																{
																	"fileName": "vite/cloudflare-dev-proxy.ts",
																	"line": 38,
																	"character": 11,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/vite/cloudflare-dev-proxy.ts#L38"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/wrangler@3.64.0_@cloudflare+workers-types@4.20240712.0/node_modules/wrangler/wrangler-dist/cli.d.ts",
															"qualifiedName": "GetPlatformProxyOptions"
														},
														"name": "GetPlatformProxyOptions",
														"package": "wrangler"
													}
												]
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/vite@6.0.2_@types+node@20.11.30_jiti@1.21.0_yaml@2.6.0/node_modules/vite/dist/node/index.d.ts",
											"qualifiedName": "Plugin"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Plugin",
										"package": "vite"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								5439
							]
						}
					],
					"sources": [
						{
							"fileName": "vite/cloudflare.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-dev/vite/cloudflare.ts#L1"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"children": [
						5349,
						5395,
						5435,
						5438
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "Dev tools and CLI for React Router that enables framework features through bundler integration like server rendering, code splitting, HMR, etc.\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpm install @react-router/dev\n```"
				}
			]
		},
		{
			"id": 5446,
			"name": "react-router-dom",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"readme": [
				{
					"kind": "text",
					"text": "This package simply re-exports everything from "
				},
				{
					"kind": "code",
					"text": "`react-router`"
				},
				{
					"kind": "text",
					"text": " to smooth the upgrade path for v6 applications. Once upgraded you can change all of your imports and remove it from your dependencies:\n\n"
				},
				{
					"kind": "code",
					"text": "```diff\n-import { Routes } from \"react-router-dom\"\n+import { Routes } from \"react-router\"\n```"
				}
			]
		},
		{
			"id": 5447,
			"name": "@react-router/express",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 5448,
					"name": "GetLoadContextFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that returns the value to use as "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " in route "
							},
							{
								"kind": "code",
								"text": "`loader`"
							},
							{
								"kind": "text",
								"text": " and\n"
							},
							{
								"kind": "code",
								"text": "`action`"
							},
							{
								"kind": "text",
								"text": " functions.\n\nYou can think of this as an escape hatch that allows you to pass\nenvironment/platform-specific values through to your loader/action, such as\nvalues that are generated by Express middleware like "
							},
							{
								"kind": "code",
								"text": "`req.session`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "server.ts",
							"line": 21,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L21"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 5449,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 21,
									"character": 37,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 5450,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5451,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "express.Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 5452,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "express.Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/dist/development/data-CQbyyGzl.d.mts",
															"qualifiedName": "AppLoadContext"
														},
														"name": "AppLoadContext",
														"package": "react-router"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/dist/development/data-CQbyyGzl.d.mts",
													"qualifiedName": "AppLoadContext"
												},
												"name": "AppLoadContext",
												"package": "react-router"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 5453,
					"name": "RequestHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "server.ts",
							"line": 26,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L26"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 5454,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 26,
									"character": 29,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L26"
								}
							],
							"signatures": [
								{
									"id": 5455,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5456,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "express.Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 5457,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "express.Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 5458,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "express.NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 5459,
					"name": "createRequestHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "server.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L35"
						}
					],
					"signatures": [
						{
							"id": 5460,
							"name": "createRequestHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a request handler for Express that serves the response using Remix."
									}
								]
							},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 35,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L35"
								}
							],
							"parameters": [
								{
									"id": 5461,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5462,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5463,
													"name": "build",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "server.ts",
															"line": 40,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L40"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router/dist/development/index.d.mts",
																	"qualifiedName": "ServerBuild"
																},
																"name": "ServerBuild",
																"package": "react-router"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 5464,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "server.ts",
																			"line": 40,
																			"character": 24,
																			"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L40"
																		}
																	],
																	"signatures": [
																		{
																			"id": 5465,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "server.ts",
																					"line": 40,
																					"character": 24,
																					"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L40"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "packages/react-router/dist/development/index.d.mts",
																							"qualifiedName": "ServerBuild"
																						},
																						"name": "ServerBuild",
																						"package": "react-router"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 5466,
													"name": "getLoadContext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "server.ts",
															"line": 41,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L41"
														}
													],
													"type": {
														"type": "reference",
														"target": 5448,
														"name": "GetLoadContextFunction",
														"package": "@react-router/express"
													}
												},
												{
													"id": 5467,
													"name": "mode",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "server.ts",
															"line": 42,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L42"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "process.env.NODE_ENV"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5463,
														5466,
														5467
													]
												}
											],
											"sources": [
												{
													"fileName": "server.ts",
													"line": 39,
													"character": 3,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-express/server.ts#L39"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 5453,
								"name": "RequestHandler",
								"package": "@react-router/express"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						5448,
						5453
					]
				},
				{
					"title": "Functions",
					"children": [
						5459
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "[Express](https://expressjs.com) server request handler for React Router.\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpm install @react-router/express\n```"
				}
			]
		},
		{
			"id": 5468,
			"name": "@react-router/fs-routes",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 5469,
					"name": "flatRoutes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 18,
							"character": 22,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-fs-routes/index.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 5470,
							"name": "flatRoutes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates route config from the file system using a convention that matches\n[Remix v2's route file\nnaming](https://remix.run/docs/en/v2/file-conventions/routes-files), for use\nwithin "
									},
									{
										"kind": "code",
										"text": "`routes.ts`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 18,
									"character": 22,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-fs-routes/index.ts#L18"
								}
							],
							"parameters": [
								{
									"id": 5471,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5472,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5473,
													"name": "ignoredRouteFiles",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An array of [minimatch](https://www.npmjs.com/package/minimatch) globs that match files to ignore.\nDefaults to "
															},
															{
																"kind": "code",
																"text": "`[]`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 24,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-fs-routes/index.ts#L24"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 5474,
													"name": "rootDirectory",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The directory containing file system routes, relative to the app directory.\nDefaults to "
															},
															{
																"kind": "code",
																"text": "`\"./routes\"`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 30,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-fs-routes/index.ts#L30"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5473,
														5474
													]
												}
											],
											"sources": [
												{
													"fileName": "index.ts",
													"line": 19,
													"character": 11,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-fs-routes/index.ts#L19"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router-dev/dist/routes-DHIOx0R9.d.ts",
												"qualifiedName": "RouteConfigEntry"
											},
											"name": "RouteConfigEntry",
											"package": "@react-router/dev"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						5469
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "File system routing conventions for React Router\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpm install @react-router/fs-routes\n```"
				}
			]
		},
		{
			"id": 5475,
			"name": "@react-router/node",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 5476,
					"name": "RequestListenerOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5477,
							"name": "build",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/server.ts#L9"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/dist/development/index.d.ts",
											"qualifiedName": "ServerBuild"
										},
										"name": "ServerBuild",
										"package": "react-router"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5478,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "server.ts",
													"line": 9,
													"character": 24,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/server.ts#L9"
												}
											],
											"signatures": [
												{
													"id": 5479,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "server.ts",
															"line": 9,
															"character": 24,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/server.ts#L9"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router/dist/development/index.d.ts",
																	"qualifiedName": "ServerBuild"
																},
																"name": "ServerBuild",
																"package": "react-router"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router/dist/development/index.d.ts",
																			"qualifiedName": "ServerBuild"
																		},
																		"name": "ServerBuild",
																		"package": "react-router"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 5480,
							"name": "getLoadContext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/server.ts#L10"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5481,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "server.ts",
											"line": 10,
											"character": 19,
											"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/server.ts#L10"
										}
									],
									"signatures": [
										{
											"id": 5482,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "server.ts",
													"line": 10,
													"character": 19,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/server.ts#L10"
												}
											],
											"parameters": [
												{
													"id": 5483,
													"name": "request",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Request"
														},
														"name": "Request",
														"package": "typescript"
													}
												},
												{
													"id": 5484,
													"name": "client",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@mjackson+node-fetch-server@0.2.0/node_modules/@mjackson/node-fetch-server/dist/node-fetch-server.d.cts",
															"qualifiedName": "ClientAddress"
														},
														"name": "ClientAddress",
														"package": "@mjackson/node-fetch-server"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/dist/development/data-CQbyyGzl.d.ts",
															"qualifiedName": "AppLoadContext"
														},
														"name": "AppLoadContext",
														"package": "react-router"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router/dist/development/data-CQbyyGzl.d.ts",
																	"qualifiedName": "AppLoadContext"
																},
																"name": "AppLoadContext",
																"package": "react-router"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 5485,
							"name": "mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/server.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5477,
								5480,
								5485
							]
						}
					],
					"sources": [
						{
							"fileName": "server.ts",
							"line": 8,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/server.ts#L8"
						}
					]
				},
				{
					"id": 5486,
					"name": "createFileSessionStorage",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "sessions/fileStorage.ts",
							"line": 31,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/sessions/fileStorage.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 5487,
							"name": "createFileSessionStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a SessionStorage that stores session data on a filesystem.\n\nThe advantage of using this instead of cookie session storage is that\nfiles may contain much more data than cookies."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://remix.run/utils/sessions#createfilesessionstorage-node"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sessions/fileStorage.ts",
									"line": 31,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/sessions/fileStorage.ts#L31"
								}
							],
							"typeParameters": [
								{
									"id": 5488,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/dist/development/index.d.ts",
											"qualifiedName": "SessionData"
										},
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 5489,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 5488,
										"name": "Data",
										"package": "@react-router/node",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 5490,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
											"qualifiedName": "FileSessionStorageOptions"
										},
										"name": "FileSessionStorageOptions",
										"package": "@react-router/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/dist/development/index.d.ts",
									"qualifiedName": "SessionStorage"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 5488,
										"name": "Data",
										"package": "@react-router/node",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 5489,
										"name": "FlashData",
										"package": "@react-router/node",
										"refersToTypeParameter": true
									}
								],
								"name": "SessionStorage",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 5491,
					"name": "createReadableStreamFromReadable",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "stream.ts",
							"line": 66,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/stream.ts#L66"
						}
					],
					"signatures": [
						{
							"id": 5492,
							"name": "createReadableStreamFromReadable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "stream.ts",
									"line": 66,
									"character": 48,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/stream.ts#L66"
								}
							],
							"parameters": [
								{
									"id": 5493,
									"name": "source",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+node@20.11.30/node_modules/@types/node/stream.d.ts",
													"qualifiedName": "internal.Readable"
												},
												"name": "Readable",
												"package": "@types/node",
												"qualifiedName": "internal.Readable"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 5494,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 5495,
															"name": "readableHighWaterMark",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "stream.ts",
																	"line": 67,
																	"character": 23,
																	"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/stream.ts#L67"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																5495
															]
														}
													],
													"sources": [
														{
															"fileName": "stream.ts",
															"line": 67,
															"character": 21,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/stream.ts#L67"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "ReadableStream"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								],
								"name": "ReadableStream",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5496,
					"name": "createRequestListener",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "server.ts",
							"line": 23,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/server.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 5497,
							"name": "createRequestListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a request listener that handles requests using Node's built-in HTTP server."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A request listener that can be used with "
											},
											{
												"kind": "code",
												"text": "`http.createServer`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 23,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/server.ts#L23"
								}
							],
							"parameters": [
								{
									"id": 5498,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options for creating a request listener."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5476,
										"name": "RequestListenerOptions",
										"package": "@react-router/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+node@20.11.30/node_modules/@types/node/http.d.ts",
									"qualifiedName": "\"http\".RequestListener"
								},
								"name": "RequestListener",
								"package": "@types/node",
								"qualifiedName": "\"http\".RequestListener"
							}
						}
					]
				},
				{
					"id": 5499,
					"name": "readableStreamToString",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "stream.ts",
							"line": 46,
							"character": 22,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/stream.ts#L46"
						}
					],
					"signatures": [
						{
							"id": 5500,
							"name": "readableStreamToString",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "stream.ts",
									"line": 46,
									"character": 22,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/stream.ts#L46"
								}
							],
							"parameters": [
								{
									"id": 5501,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ReadableStream"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "ReadableStream",
										"package": "typescript"
									}
								},
								{
									"id": 5502,
									"name": "encoding",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.11.30/node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.BufferEncoding"
										},
										"name": "BufferEncoding",
										"package": "@types/node",
										"qualifiedName": "__global.BufferEncoding"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5503,
					"name": "writeAsyncIterableToWritable",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "stream.ts",
							"line": 31,
							"character": 22,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/stream.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 5504,
							"name": "writeAsyncIterableToWritable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "stream.ts",
									"line": 31,
									"character": 22,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/stream.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 5505,
									"name": "iterable",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
											"qualifiedName": "AsyncIterable"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "AsyncIterable",
										"package": "typescript"
									}
								},
								{
									"id": 5506,
									"name": "writable",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.11.30/node_modules/@types/node/stream.d.ts",
											"qualifiedName": "internal.Writable"
										},
										"name": "Writable",
										"package": "@types/node",
										"qualifiedName": "internal.Writable"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5507,
					"name": "writeReadableStreamToWritable",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "stream.ts",
							"line": 4,
							"character": 22,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/stream.ts#L4"
						}
					],
					"signatures": [
						{
							"id": 5508,
							"name": "writeReadableStreamToWritable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "stream.ts",
									"line": 4,
									"character": 22,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-node/stream.ts#L4"
								}
							],
							"parameters": [
								{
									"id": 5509,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ReadableStream"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ReadableStream",
										"package": "typescript"
									}
								},
								{
									"id": 5510,
									"name": "writable",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.11.30/node_modules/@types/node/stream.d.ts",
											"qualifiedName": "internal.Writable"
										},
										"name": "Writable",
										"package": "@types/node",
										"qualifiedName": "internal.Writable"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						5476
					]
				},
				{
					"title": "Functions",
					"children": [
						5486,
						5491,
						5496,
						5499,
						5503,
						5507
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "Node.js platform abstractions for React Router\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpm install @react-router/node\n```"
				}
			]
		},
		{
			"id": 5511,
			"name": "@react-router/remix-routes-option-adapter",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 5512,
					"name": "DefineRoutesFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "defineRoutes.ts",
							"line": 4,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-remix-routes-option-adapter/defineRoutes.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 5513,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "defineRoutes.ts",
									"line": 4,
									"character": 35,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-remix-routes-option-adapter/defineRoutes.ts#L4"
								}
							],
							"signatures": [
								{
									"id": 5514,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 5515,
											"name": "callback",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5516,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "defineRoutes.ts",
															"line": 5,
															"character": 12,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-remix-routes-option-adapter/defineRoutes.ts#L5"
														}
													],
													"signatures": [
														{
															"id": 5517,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 5518,
																	"name": "defineRoute",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router-remix-routes-option-adapter/defineRoutes.ts",
																			"qualifiedName": "DefineRouteFunction"
																		},
																		"name": "DefineRouteFunction",
																		"package": "@react-router/remix-routes-option-adapter"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-remix-routes-option-adapter/manifest.ts",
											"qualifiedName": "RouteManifest"
										},
										"name": "RouteManifest",
										"package": "@react-router/remix-routes-option-adapter"
									}
								}
							]
						}
					}
				},
				{
					"id": 5519,
					"name": "remixRoutesOptionAdapter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 13,
							"character": 22,
							"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-remix-routes-option-adapter/index.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 5520,
							"name": "remixRoutesOptionAdapter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adapts routes defined using [Remix's "
									},
									{
										"kind": "code",
										"text": "`routes`"
									},
									{
										"kind": "text",
										"text": " config\noption](https://remix.run/docs/en/v2/file-conventions/vite-config#routes) to\nReact Router's config format, for use within "
									},
									{
										"kind": "code",
										"text": "`routes.ts`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 13,
									"character": 22,
									"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-remix-routes-option-adapter/index.ts#L13"
								}
							],
							"parameters": [
								{
									"id": 5521,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5522,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 14,
													"character": 10,
													"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-remix-routes-option-adapter/index.ts#L14"
												}
											],
											"signatures": [
												{
													"id": 5523,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 14,
															"character": 10,
															"url": "https://github.com/remix-run/react-router/blob/a3e4b8ed875611637357647fcf862c2bc61f4e11/packages/react-router-remix-routes-option-adapter/index.ts#L14"
														}
													],
													"parameters": [
														{
															"id": 5524,
															"name": "defineRoutes",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 5512,
																"name": "DefineRoutesFunction",
																"package": "@react-router/remix-routes-option-adapter"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router-remix-routes-option-adapter/manifest.ts",
																	"qualifiedName": "RouteManifest"
																},
																"name": "RouteManifest",
																"package": "@react-router/remix-routes-option-adapter"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router-remix-routes-option-adapter/manifest.ts",
																			"qualifiedName": "RouteManifest"
																		},
																		"name": "RouteManifest",
																		"package": "@react-router/remix-routes-option-adapter"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router-dev/dist/routes-DHIOx0R9.d.ts",
												"qualifiedName": "RouteConfigEntry"
											},
											"name": "RouteConfigEntry",
											"package": "@react-router/dev"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						5512
					]
				},
				{
					"title": "Functions",
					"children": [
						5519
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "# @react-router/remix-routes-option-adapter\n\nAdapter for [Remix's](https://remix.run) "
				},
				{
					"kind": "code",
					"text": "`routes`"
				},
				{
					"kind": "text",
					"text": " config option, for use within "
				},
				{
					"kind": "code",
					"text": "`routes.ts`"
				},
				{
					"kind": "text",
					"text": ".\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpm install @react-router/remix-routes-option-adapter\n```"
				}
			]
		},
		{
			"id": 5525,
			"name": "@react-router/serve",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"readme": [
				{
					"kind": "text",
					"text": "Node.js application server for React Router\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpm install @react-router/serve\n```"
				}
			]
		}
	],
	"packageName": "@remix-run/react-router",
	"readme": [
		{
			"kind": "text",
			"text": "[![npm package][npm-badge]][npm] [![build][build-badge]][build]\n\n[npm-badge]: https://img.shields.io/npm/v/react-router-dom.svg?style=flat-square\n[npm]: https://www.npmjs.org/package/react-router-dom\n[build-badge]: https://img.shields.io/github/actions/workflow/status/remix-run/react-router/test.yml?branch=dev&style=square\n[build]: https://github.com/remix-run/react-router/actions/workflows/test.yml\n\nReact Router is a multi-strategy router for React bridging the gap from React 18 to React 19. You can use it maximally as a React framework or minimally as a library with your own architecture.\n\n- [Getting Started - Framework](https://reactrouter.com/start/framework/installation)\n- [Getting Started - Library](https://reactrouter.com/start/library/installation)\n- [Upgrade from v6](https://reactrouter.com/upgrading/v6)\n- [Upgrade from Remix](https://reactrouter.com/upgrading/remix)\n- [Changelog](https://github.com/remix-run/react-router/blob/main/CHANGELOG.md)\n\n## Packages\n\n- ["
		},
		{
			"kind": "code",
			"text": "`react-router`"
		},
		{
			"kind": "text",
			"text": "]("
		},
		{
			"kind": "relative-link",
			"text": "./packages/react-router"
		},
		{
			"kind": "text",
			"text": ")\n- ["
		},
		{
			"kind": "code",
			"text": "`@react-router/dev`"
		},
		{
			"kind": "text",
			"text": "]("
		},
		{
			"kind": "relative-link",
			"text": "./packages/react-router-dev"
		},
		{
			"kind": "text",
			"text": ")\n- ["
		},
		{
			"kind": "code",
			"text": "`@react-router/node`"
		},
		{
			"kind": "text",
			"text": "]("
		},
		{
			"kind": "relative-link",
			"text": "./packages/react-router-node"
		},
		{
			"kind": "text",
			"text": ")\n- ["
		},
		{
			"kind": "code",
			"text": "`@react-router/cloudflare`"
		},
		{
			"kind": "text",
			"text": "]("
		},
		{
			"kind": "relative-link",
			"text": "./packages/react-router-cloudflare"
		},
		{
			"kind": "text",
			"text": ")\n- ["
		},
		{
			"kind": "code",
			"text": "`@react-router/serve`"
		},
		{
			"kind": "text",
			"text": "]("
		},
		{
			"kind": "relative-link",
			"text": "./packages/react-router-serve"
		},
		{
			"kind": "text",
			"text": ")\n- ["
		},
		{
			"kind": "code",
			"text": "`@react-router/fs-routes`"
		},
		{
			"kind": "text",
			"text": "]("
		},
		{
			"kind": "relative-link",
			"text": "./packages/react-router-fs-routes"
		},
		{
			"kind": "text",
			"text": ")\n\n## Previous Versions\n\n- [v6](https://reactrouter.com/v6)\n- [v5](https://v5.reactrouter.com/)"
		}
	],
	"symbolIdMap": {
		"2811": {
			"sourceFileName": "packages/react-router/index.ts",
			"qualifiedName": ""
		},
		"2812": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Action"
		},
		"2813": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Action.Pop"
		},
		"2814": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Action.Push"
		},
		"2815": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Action.Replace"
		},
		"2816": {
			"sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
			"qualifiedName": "ServerMode"
		},
		"2817": {
			"sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
			"qualifiedName": "ServerMode.Development"
		},
		"2818": {
			"sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
			"qualifiedName": "ServerMode.Production"
		},
		"2819": {
			"sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
			"qualifiedName": "ServerMode.Test"
		},
		"2820": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataWithResponseInit"
		},
		"2821": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataWithResponseInit.__constructor"
		},
		"2822": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataWithResponseInit"
		},
		"2823": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataWithResponseInit.D"
		},
		"2824": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "data"
		},
		"2825": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"2826": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataWithResponseInit.data"
		},
		"2827": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataWithResponseInit.init"
		},
		"2828": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataWithResponseInit.type"
		},
		"2829": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataWithResponseInit.D"
		},
		"2830": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary"
		},
		"2831": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.__constructor"
		},
		"2832": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary"
		},
		"2833": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "props"
		},
		"2834": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.context"
		},
		"2835": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.props"
		},
		"2836": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.refs"
		},
		"2837": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"2838": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.__index"
		},
		"2840": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.state"
		},
		"2841": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.contextType"
		},
		"2842": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentDidCatch"
		},
		"2843": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentDidCatch"
		},
		"2844": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "error"
		},
		"2845": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "errorInfo"
		},
		"2846": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentDidMount"
		},
		"2847": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentDidMount"
		},
		"2848": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NewLifecycle.componentDidUpdate"
		},
		"2849": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NewLifecycle.componentDidUpdate"
		},
		"2850": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prevProps"
		},
		"2851": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prevState"
		},
		"2852": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "snapshot"
		},
		"2853": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillMount"
		},
		"2854": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillMount"
		},
		"2855": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillReceiveProps"
		},
		"2856": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillReceiveProps"
		},
		"2857": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextProps"
		},
		"2858": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextContext"
		},
		"2859": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentWillUnmount"
		},
		"2860": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentWillUnmount"
		},
		"2861": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillUpdate"
		},
		"2862": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillUpdate"
		},
		"2863": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextProps"
		},
		"2864": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextState"
		},
		"2865": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextContext"
		},
		"2866": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.forceUpdate"
		},
		"2867": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.forceUpdate"
		},
		"2868": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "callback"
		},
		"2869": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"2870": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"2871": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NewLifecycle.getSnapshotBeforeUpdate"
		},
		"2872": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NewLifecycle.getSnapshotBeforeUpdate"
		},
		"2873": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prevProps"
		},
		"2874": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prevState"
		},
		"2875": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.render"
		},
		"2876": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.render"
		},
		"2877": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.setState"
		},
		"2878": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.setState"
		},
		"2879": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "K"
		},
		"2880": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "state"
		},
		"2881": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"2882": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"2883": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prevState"
		},
		"2884": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2885": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "callback"
		},
		"2886": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"2887": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"2888": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.shouldComponentUpdate"
		},
		"2889": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.shouldComponentUpdate"
		},
		"2890": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextProps"
		},
		"2891": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextState"
		},
		"2892": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextContext"
		},
		"2893": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillMount"
		},
		"2894": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillMount"
		},
		"2895": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
		},
		"2896": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
		},
		"2897": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextProps"
		},
		"2898": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextContext"
		},
		"2899": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillUpdate"
		},
		"2900": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillUpdate"
		},
		"2901": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextProps"
		},
		"2902": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextState"
		},
		"2903": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextContext"
		},
		"2904": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.getDerivedStateFromError"
		},
		"2905": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.getDerivedStateFromError"
		},
		"2906": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "error"
		},
		"2907": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "__object"
		},
		"2908": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "__object.error"
		},
		"2909": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.getDerivedStateFromProps"
		},
		"2910": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.getDerivedStateFromProps"
		},
		"2911": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "props"
		},
		"2912": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "state"
		},
		"2913": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "__object"
		},
		"2914": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "__object.error"
		},
		"2915": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "__object.location"
		},
		"2916": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ActionFunction"
		},
		"2917": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ActionFunction.Context"
		},
		"2918": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ActionFunction"
		},
		"2919": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "args"
		},
		"2920": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "handlerCtx"
		},
		"2921": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ActionFunctionArgs"
		},
		"2922": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.context"
		},
		"2923": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.params"
		},
		"2924": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.request"
		},
		"2925": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ActionFunctionArgs.Context"
		},
		"2926": {
			"sourceFileName": "packages/react-router/lib/server-runtime/data.ts",
			"qualifiedName": "AppLoadContext"
		},
		"2927": {
			"sourceFileName": "packages/react-router/lib/server-runtime/data.ts",
			"qualifiedName": "AppLoadContext.__index"
		},
		"2929": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "AwaitProps"
		},
		"2930": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "AwaitProps.children"
		},
		"2931": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "AwaitProps.errorElement"
		},
		"2932": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "AwaitProps.resolve"
		},
		"2933": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "AwaitProps.Resolve"
		},
		"2934": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouterProps"
		},
		"2935": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouterProps.basename"
		},
		"2936": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouterProps.children"
		},
		"2937": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouterProps.window"
		},
		"2938": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie"
		},
		"2939": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.expires"
		},
		"2940": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.isSigned"
		},
		"2941": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.name"
		},
		"2942": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.parse"
		},
		"2943": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.parse"
		},
		"2944": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "cookieHeader"
		},
		"2945": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "options"
		},
		"2946": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.serialize"
		},
		"2947": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.serialize"
		},
		"2948": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "value"
		},
		"2949": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "options"
		},
		"2950": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "ParseOptions"
		},
		"2951": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "ParseOptions.decode"
		},
		"2952": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"2953": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"2954": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "str"
		},
		"2955": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions"
		},
		"2956": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions.domain"
		},
		"2957": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions.encode"
		},
		"2958": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"2959": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"2960": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "str"
		},
		"2961": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions.expires"
		},
		"2962": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions.httpOnly"
		},
		"2963": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions.maxAge"
		},
		"2964": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions.partitioned"
		},
		"2965": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions.path"
		},
		"2966": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions.priority"
		},
		"2967": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions.sameSite"
		},
		"2968": {
			"sourceFileName": "node_modules/.pnpm/cookie@1.0.1/node_modules/cookie/dist/index.d.ts",
			"qualifiedName": "SerializeOptions.secure"
		},
		"2969": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "CookieSignatureOptions"
		},
		"2970": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "CookieSignatureOptions.secrets"
		},
		"2971": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "DataRouteMatch"
		},
		"2972": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.params"
		},
		"2973": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathname"
		},
		"2974": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathnameBase"
		},
		"2975": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.route"
		},
		"2976": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router"
		},
		"2977": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunction"
		},
		"2978": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunction"
		},
		"2979": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "args"
		},
		"2980": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunctionArgs"
		},
		"2981": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.context"
		},
		"2982": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunctionArgs.fetcherKey"
		},
		"2983": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunctionArgs.matches"
		},
		"2984": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.params"
		},
		"2985": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.request"
		},
		"2986": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunctionArgs.Context"
		},
		"2987": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyMatch"
		},
		"2988": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.params"
		},
		"2989": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathname"
		},
		"2990": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathnameBase"
		},
		"2991": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyMatch.resolve"
		},
		"2992": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2993": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2994": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "handlerOverride"
		},
		"2995": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2996": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2997": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "handler"
		},
		"2998": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2999": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"3000": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ctx"
		},
		"3001": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.route"
		},
		"3002": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyMatch.shouldLoad"
		},
		"3003": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyResult"
		},
		"3004": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyResult.result"
		},
		"3005": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyResult.type"
		},
		"3006": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "EntryContext"
		},
		"3007": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.criticalCss"
		},
		"3008": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.future"
		},
		"3009": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.isSpaMode"
		},
		"3010": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.manifest"
		},
		"3011": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.renderMeta"
		},
		"3012": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type"
		},
		"3013": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.didRenderScripts"
		},
		"3014": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.streamCache"
		},
		"3015": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type"
		},
		"3016": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.error"
		},
		"3017": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.result"
		},
		"3018": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type"
		},
		"3019": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.done"
		},
		"3020": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.value"
		},
		"3021": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.routeModules"
		},
		"3022": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "EntryContext.serverHandoffStream"
		},
		"3023": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.serverHandoffString"
		},
		"3024": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "EntryContext.staticHandlerContext"
		},
		"3025": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.serializeError"
		},
		"3026": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.serializeError"
		},
		"3027": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "error"
		},
		"3028": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FetcherFormProps"
		},
		"3029": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.about"
		},
		"3030": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.acceptCharset"
		},
		"3031": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.accessKey"
		},
		"3032": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.action"
		},
		"3033": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-activedescendant"
		},
		"3034": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-atomic"
		},
		"3035": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-autocomplete"
		},
		"3036": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-braillelabel"
		},
		"3037": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-brailleroledescription"
		},
		"3038": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-busy"
		},
		"3039": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-checked"
		},
		"3040": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colcount"
		},
		"3041": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colindex"
		},
		"3042": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colindextext"
		},
		"3043": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colspan"
		},
		"3044": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-controls"
		},
		"3045": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-current"
		},
		"3046": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-describedby"
		},
		"3047": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-description"
		},
		"3048": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-details"
		},
		"3049": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-disabled"
		},
		"3050": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-dropeffect"
		},
		"3051": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-errormessage"
		},
		"3052": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-expanded"
		},
		"3053": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-flowto"
		},
		"3054": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-grabbed"
		},
		"3055": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-haspopup"
		},
		"3056": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-hidden"
		},
		"3057": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-invalid"
		},
		"3058": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-keyshortcuts"
		},
		"3059": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-label"
		},
		"3060": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-labelledby"
		},
		"3061": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-level"
		},
		"3062": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-live"
		},
		"3063": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-modal"
		},
		"3064": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-multiline"
		},
		"3065": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-multiselectable"
		},
		"3066": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-orientation"
		},
		"3067": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-owns"
		},
		"3068": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-placeholder"
		},
		"3069": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-posinset"
		},
		"3070": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-pressed"
		},
		"3071": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-readonly"
		},
		"3072": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-relevant"
		},
		"3073": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-required"
		},
		"3074": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-roledescription"
		},
		"3075": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowcount"
		},
		"3076": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowindex"
		},
		"3077": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowindextext"
		},
		"3078": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowspan"
		},
		"3079": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-selected"
		},
		"3080": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-setsize"
		},
		"3081": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-sort"
		},
		"3082": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuemax"
		},
		"3083": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuemin"
		},
		"3084": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuenow"
		},
		"3085": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuetext"
		},
		"3086": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoCapitalize"
		},
		"3087": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.autoComplete"
		},
		"3088": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoCorrect"
		},
		"3089": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoFocus"
		},
		"3090": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoSave"
		},
		"3091": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.children"
		},
		"3092": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.className"
		},
		"3093": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.color"
		},
		"3094": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.content"
		},
		"3095": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.contentEditable"
		},
		"3096": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.contextMenu"
		},
		"3097": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.dangerouslySetInnerHTML"
		},
		"3098": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"3099": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.__html"
		},
		"3100": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.datatype"
		},
		"3101": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.defaultChecked"
		},
		"3102": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.defaultValue"
		},
		"3103": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.dir"
		},
		"3104": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.draggable"
		},
		"3105": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.encType"
		},
		"3106": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.hidden"
		},
		"3107": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.id"
		},
		"3108": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.inlist"
		},
		"3109": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.inputMode"
		},
		"3110": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.is"
		},
		"3111": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemID"
		},
		"3112": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemProp"
		},
		"3113": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemRef"
		},
		"3114": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemScope"
		},
		"3115": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemType"
		},
		"3116": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.lang"
		},
		"3117": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.method"
		},
		"3118": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.name"
		},
		"3119": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.nonce"
		},
		"3120": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.noValidate"
		},
		"3121": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAbort"
		},
		"3122": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAbortCapture"
		},
		"3123": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationEnd"
		},
		"3124": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationEndCapture"
		},
		"3125": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationIteration"
		},
		"3126": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationIterationCapture"
		},
		"3127": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationStart"
		},
		"3128": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationStartCapture"
		},
		"3129": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAuxClick"
		},
		"3130": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAuxClickCapture"
		},
		"3131": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBeforeInput"
		},
		"3132": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBeforeInputCapture"
		},
		"3133": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBlur"
		},
		"3134": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBlurCapture"
		},
		"3135": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlay"
		},
		"3136": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayCapture"
		},
		"3137": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayThrough"
		},
		"3138": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayThroughCapture"
		},
		"3139": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onChange"
		},
		"3140": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onChangeCapture"
		},
		"3141": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onClick"
		},
		"3142": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onClickCapture"
		},
		"3143": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionEnd"
		},
		"3144": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionEndCapture"
		},
		"3145": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionStart"
		},
		"3146": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionStartCapture"
		},
		"3147": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionUpdate"
		},
		"3148": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionUpdateCapture"
		},
		"3149": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onContextMenu"
		},
		"3150": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onContextMenuCapture"
		},
		"3151": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCopy"
		},
		"3152": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCopyCapture"
		},
		"3153": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCut"
		},
		"3154": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCutCapture"
		},
		"3155": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDoubleClick"
		},
		"3156": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDoubleClickCapture"
		},
		"3157": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDrag"
		},
		"3158": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragCapture"
		},
		"3159": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnd"
		},
		"3160": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEndCapture"
		},
		"3161": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnter"
		},
		"3162": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnterCapture"
		},
		"3163": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragExit"
		},
		"3164": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragExitCapture"
		},
		"3165": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragLeave"
		},
		"3166": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragLeaveCapture"
		},
		"3167": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragOver"
		},
		"3168": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragOverCapture"
		},
		"3169": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragStart"
		},
		"3170": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragStartCapture"
		},
		"3171": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDrop"
		},
		"3172": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDropCapture"
		},
		"3173": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDurationChange"
		},
		"3174": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDurationChangeCapture"
		},
		"3175": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEmptied"
		},
		"3176": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEmptiedCapture"
		},
		"3177": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEncrypted"
		},
		"3178": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEncryptedCapture"
		},
		"3179": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEnded"
		},
		"3180": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEndedCapture"
		},
		"3181": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onError"
		},
		"3182": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onErrorCapture"
		},
		"3183": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onFocus"
		},
		"3184": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onFocusCapture"
		},
		"3185": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onGotPointerCapture"
		},
		"3186": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onGotPointerCaptureCapture"
		},
		"3187": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInput"
		},
		"3188": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInputCapture"
		},
		"3189": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInvalid"
		},
		"3190": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInvalidCapture"
		},
		"3191": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyDown"
		},
		"3192": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyDownCapture"
		},
		"3193": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyPress"
		},
		"3194": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyPressCapture"
		},
		"3195": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyUp"
		},
		"3196": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyUpCapture"
		},
		"3197": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoad"
		},
		"3198": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadCapture"
		},
		"3199": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedData"
		},
		"3200": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedDataCapture"
		},
		"3201": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedMetadata"
		},
		"3202": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedMetadataCapture"
		},
		"3203": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadStart"
		},
		"3204": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadStartCapture"
		},
		"3205": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLostPointerCapture"
		},
		"3206": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLostPointerCaptureCapture"
		},
		"3207": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseDown"
		},
		"3208": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseDownCapture"
		},
		"3209": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseEnter"
		},
		"3210": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseLeave"
		},
		"3211": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseMove"
		},
		"3212": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseMoveCapture"
		},
		"3213": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOut"
		},
		"3214": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOutCapture"
		},
		"3215": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOver"
		},
		"3216": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOverCapture"
		},
		"3217": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseUp"
		},
		"3218": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseUpCapture"
		},
		"3219": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPaste"
		},
		"3220": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPasteCapture"
		},
		"3221": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPause"
		},
		"3222": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPauseCapture"
		},
		"3223": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlay"
		},
		"3224": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlayCapture"
		},
		"3225": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlaying"
		},
		"3226": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlayingCapture"
		},
		"3227": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerCancel"
		},
		"3228": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerCancelCapture"
		},
		"3229": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerDown"
		},
		"3230": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerDownCapture"
		},
		"3231": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerEnter"
		},
		"3232": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerEnterCapture"
		},
		"3233": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerLeave"
		},
		"3234": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerLeaveCapture"
		},
		"3235": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerMove"
		},
		"3236": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerMoveCapture"
		},
		"3237": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOut"
		},
		"3238": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOutCapture"
		},
		"3239": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOver"
		},
		"3240": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOverCapture"
		},
		"3241": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerUp"
		},
		"3242": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerUpCapture"
		},
		"3243": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onProgress"
		},
		"3244": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onProgressCapture"
		},
		"3245": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onRateChange"
		},
		"3246": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onRateChangeCapture"
		},
		"3247": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onReset"
		},
		"3248": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResetCapture"
		},
		"3249": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResize"
		},
		"3250": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResizeCapture"
		},
		"3251": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onScroll"
		},
		"3252": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onScrollCapture"
		},
		"3253": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeeked"
		},
		"3254": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeekedCapture"
		},
		"3255": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeeking"
		},
		"3256": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeekingCapture"
		},
		"3257": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSelect"
		},
		"3258": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSelectCapture"
		},
		"3259": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onStalled"
		},
		"3260": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onStalledCapture"
		},
		"3261": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.onSubmit"
		},
		"3262": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSubmitCapture"
		},
		"3263": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSuspend"
		},
		"3264": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSuspendCapture"
		},
		"3265": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTimeUpdate"
		},
		"3266": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTimeUpdateCapture"
		},
		"3267": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchCancel"
		},
		"3268": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchCancelCapture"
		},
		"3269": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchEnd"
		},
		"3270": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchEndCapture"
		},
		"3271": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchMove"
		},
		"3272": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchMoveCapture"
		},
		"3273": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchStart"
		},
		"3274": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchStartCapture"
		},
		"3275": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTransitionEnd"
		},
		"3276": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTransitionEndCapture"
		},
		"3277": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onVolumeChange"
		},
		"3278": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onVolumeChangeCapture"
		},
		"3279": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWaiting"
		},
		"3280": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWaitingCapture"
		},
		"3281": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWheel"
		},
		"3282": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWheelCapture"
		},
		"3283": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.placeholder"
		},
		"3284": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.prefix"
		},
		"3285": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.preventScrollReset"
		},
		"3286": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.property"
		},
		"3287": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.radioGroup"
		},
		"3288": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.rel"
		},
		"3289": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.relative"
		},
		"3290": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.resource"
		},
		"3291": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.results"
		},
		"3292": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.rev"
		},
		"3293": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.role"
		},
		"3294": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.security"
		},
		"3295": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.slot"
		},
		"3296": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.spellCheck"
		},
		"3297": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.style"
		},
		"3298": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.suppressContentEditableWarning"
		},
		"3299": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.suppressHydrationWarning"
		},
		"3300": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.tabIndex"
		},
		"3301": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.target"
		},
		"3302": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.title"
		},
		"3303": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.translate"
		},
		"3304": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.typeof"
		},
		"3305": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.unselectable"
		},
		"3306": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.vocab"
		},
		"3307": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FetcherSubmitFunction"
		},
		"3308": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FetcherSubmitFunction"
		},
		"3309": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "target"
		},
		"3310": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "options"
		},
		"3311": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "FetcherSubmitOptions"
		},
		"3312": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.action"
		},
		"3313": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.encType"
		},
		"3314": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.flushSync"
		},
		"3315": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.method"
		},
		"3316": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.preventScrollReset"
		},
		"3317": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.relative"
		},
		"3318": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps"
		},
		"3319": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.about"
		},
		"3320": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.acceptCharset"
		},
		"3321": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.accessKey"
		},
		"3322": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.action"
		},
		"3323": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-activedescendant"
		},
		"3324": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-atomic"
		},
		"3325": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-autocomplete"
		},
		"3326": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-braillelabel"
		},
		"3327": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-brailleroledescription"
		},
		"3328": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-busy"
		},
		"3329": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-checked"
		},
		"3330": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colcount"
		},
		"3331": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colindex"
		},
		"3332": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colindextext"
		},
		"3333": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colspan"
		},
		"3334": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-controls"
		},
		"3335": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-current"
		},
		"3336": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-describedby"
		},
		"3337": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-description"
		},
		"3338": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-details"
		},
		"3339": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-disabled"
		},
		"3340": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-dropeffect"
		},
		"3341": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-errormessage"
		},
		"3342": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-expanded"
		},
		"3343": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-flowto"
		},
		"3344": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-grabbed"
		},
		"3345": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-haspopup"
		},
		"3346": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-hidden"
		},
		"3347": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-invalid"
		},
		"3348": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-keyshortcuts"
		},
		"3349": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-label"
		},
		"3350": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-labelledby"
		},
		"3351": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-level"
		},
		"3352": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-live"
		},
		"3353": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-modal"
		},
		"3354": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-multiline"
		},
		"3355": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-multiselectable"
		},
		"3356": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-orientation"
		},
		"3357": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-owns"
		},
		"3358": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-placeholder"
		},
		"3359": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-posinset"
		},
		"3360": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-pressed"
		},
		"3361": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-readonly"
		},
		"3362": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-relevant"
		},
		"3363": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-required"
		},
		"3364": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-roledescription"
		},
		"3365": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowcount"
		},
		"3366": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowindex"
		},
		"3367": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowindextext"
		},
		"3368": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowspan"
		},
		"3369": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-selected"
		},
		"3370": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-setsize"
		},
		"3371": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-sort"
		},
		"3372": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuemax"
		},
		"3373": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuemin"
		},
		"3374": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuenow"
		},
		"3375": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuetext"
		},
		"3376": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoCapitalize"
		},
		"3377": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.autoComplete"
		},
		"3378": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoCorrect"
		},
		"3379": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoFocus"
		},
		"3380": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoSave"
		},
		"3381": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.children"
		},
		"3382": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.className"
		},
		"3383": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.color"
		},
		"3384": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.content"
		},
		"3385": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.contentEditable"
		},
		"3386": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.contextMenu"
		},
		"3387": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.dangerouslySetInnerHTML"
		},
		"3388": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"3389": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.__html"
		},
		"3390": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.datatype"
		},
		"3391": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.defaultChecked"
		},
		"3392": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.defaultValue"
		},
		"3393": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.dir"
		},
		"3394": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.discover"
		},
		"3395": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.draggable"
		},
		"3396": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.encType"
		},
		"3397": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.fetcherKey"
		},
		"3398": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.hidden"
		},
		"3399": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.id"
		},
		"3400": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.inlist"
		},
		"3401": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.inputMode"
		},
		"3402": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.is"
		},
		"3403": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemID"
		},
		"3404": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemProp"
		},
		"3405": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemRef"
		},
		"3406": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemScope"
		},
		"3407": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemType"
		},
		"3408": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.lang"
		},
		"3409": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.method"
		},
		"3410": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.name"
		},
		"3411": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.navigate"
		},
		"3412": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.nonce"
		},
		"3413": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.noValidate"
		},
		"3414": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAbort"
		},
		"3415": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAbortCapture"
		},
		"3416": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationEnd"
		},
		"3417": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationEndCapture"
		},
		"3418": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationIteration"
		},
		"3419": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationIterationCapture"
		},
		"3420": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationStart"
		},
		"3421": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationStartCapture"
		},
		"3422": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAuxClick"
		},
		"3423": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAuxClickCapture"
		},
		"3424": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBeforeInput"
		},
		"3425": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBeforeInputCapture"
		},
		"3426": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBlur"
		},
		"3427": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBlurCapture"
		},
		"3428": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlay"
		},
		"3429": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayCapture"
		},
		"3430": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayThrough"
		},
		"3431": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayThroughCapture"
		},
		"3432": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onChange"
		},
		"3433": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onChangeCapture"
		},
		"3434": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onClick"
		},
		"3435": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onClickCapture"
		},
		"3436": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionEnd"
		},
		"3437": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionEndCapture"
		},
		"3438": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionStart"
		},
		"3439": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionStartCapture"
		},
		"3440": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionUpdate"
		},
		"3441": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionUpdateCapture"
		},
		"3442": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onContextMenu"
		},
		"3443": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onContextMenuCapture"
		},
		"3444": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCopy"
		},
		"3445": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCopyCapture"
		},
		"3446": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCut"
		},
		"3447": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCutCapture"
		},
		"3448": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDoubleClick"
		},
		"3449": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDoubleClickCapture"
		},
		"3450": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDrag"
		},
		"3451": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragCapture"
		},
		"3452": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnd"
		},
		"3453": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEndCapture"
		},
		"3454": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnter"
		},
		"3455": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnterCapture"
		},
		"3456": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragExit"
		},
		"3457": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragExitCapture"
		},
		"3458": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragLeave"
		},
		"3459": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragLeaveCapture"
		},
		"3460": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragOver"
		},
		"3461": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragOverCapture"
		},
		"3462": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragStart"
		},
		"3463": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragStartCapture"
		},
		"3464": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDrop"
		},
		"3465": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDropCapture"
		},
		"3466": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDurationChange"
		},
		"3467": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDurationChangeCapture"
		},
		"3468": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEmptied"
		},
		"3469": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEmptiedCapture"
		},
		"3470": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEncrypted"
		},
		"3471": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEncryptedCapture"
		},
		"3472": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEnded"
		},
		"3473": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEndedCapture"
		},
		"3474": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onError"
		},
		"3475": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onErrorCapture"
		},
		"3476": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onFocus"
		},
		"3477": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onFocusCapture"
		},
		"3478": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onGotPointerCapture"
		},
		"3479": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onGotPointerCaptureCapture"
		},
		"3480": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInput"
		},
		"3481": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInputCapture"
		},
		"3482": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInvalid"
		},
		"3483": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInvalidCapture"
		},
		"3484": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyDown"
		},
		"3485": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyDownCapture"
		},
		"3486": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyPress"
		},
		"3487": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyPressCapture"
		},
		"3488": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyUp"
		},
		"3489": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyUpCapture"
		},
		"3490": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoad"
		},
		"3491": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadCapture"
		},
		"3492": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedData"
		},
		"3493": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedDataCapture"
		},
		"3494": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedMetadata"
		},
		"3495": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedMetadataCapture"
		},
		"3496": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadStart"
		},
		"3497": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadStartCapture"
		},
		"3498": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLostPointerCapture"
		},
		"3499": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLostPointerCaptureCapture"
		},
		"3500": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseDown"
		},
		"3501": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseDownCapture"
		},
		"3502": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseEnter"
		},
		"3503": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseLeave"
		},
		"3504": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseMove"
		},
		"3505": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseMoveCapture"
		},
		"3506": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOut"
		},
		"3507": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOutCapture"
		},
		"3508": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOver"
		},
		"3509": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOverCapture"
		},
		"3510": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseUp"
		},
		"3511": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseUpCapture"
		},
		"3512": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPaste"
		},
		"3513": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPasteCapture"
		},
		"3514": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPause"
		},
		"3515": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPauseCapture"
		},
		"3516": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlay"
		},
		"3517": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlayCapture"
		},
		"3518": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlaying"
		},
		"3519": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlayingCapture"
		},
		"3520": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerCancel"
		},
		"3521": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerCancelCapture"
		},
		"3522": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerDown"
		},
		"3523": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerDownCapture"
		},
		"3524": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerEnter"
		},
		"3525": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerEnterCapture"
		},
		"3526": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerLeave"
		},
		"3527": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerLeaveCapture"
		},
		"3528": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerMove"
		},
		"3529": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerMoveCapture"
		},
		"3530": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOut"
		},
		"3531": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOutCapture"
		},
		"3532": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOver"
		},
		"3533": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOverCapture"
		},
		"3534": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerUp"
		},
		"3535": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerUpCapture"
		},
		"3536": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onProgress"
		},
		"3537": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onProgressCapture"
		},
		"3538": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onRateChange"
		},
		"3539": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onRateChangeCapture"
		},
		"3540": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onReset"
		},
		"3541": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResetCapture"
		},
		"3542": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResize"
		},
		"3543": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResizeCapture"
		},
		"3544": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onScroll"
		},
		"3545": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onScrollCapture"
		},
		"3546": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeeked"
		},
		"3547": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeekedCapture"
		},
		"3548": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeeking"
		},
		"3549": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeekingCapture"
		},
		"3550": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSelect"
		},
		"3551": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSelectCapture"
		},
		"3552": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onStalled"
		},
		"3553": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onStalledCapture"
		},
		"3554": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.onSubmit"
		},
		"3555": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSubmitCapture"
		},
		"3556": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSuspend"
		},
		"3557": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSuspendCapture"
		},
		"3558": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTimeUpdate"
		},
		"3559": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTimeUpdateCapture"
		},
		"3560": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchCancel"
		},
		"3561": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchCancelCapture"
		},
		"3562": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchEnd"
		},
		"3563": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchEndCapture"
		},
		"3564": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchMove"
		},
		"3565": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchMoveCapture"
		},
		"3566": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchStart"
		},
		"3567": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchStartCapture"
		},
		"3568": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTransitionEnd"
		},
		"3569": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTransitionEndCapture"
		},
		"3570": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onVolumeChange"
		},
		"3571": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onVolumeChangeCapture"
		},
		"3572": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWaiting"
		},
		"3573": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWaitingCapture"
		},
		"3574": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWheel"
		},
		"3575": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWheelCapture"
		},
		"3576": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.placeholder"
		},
		"3577": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.prefix"
		},
		"3578": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.preventScrollReset"
		},
		"3579": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.property"
		},
		"3580": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.radioGroup"
		},
		"3581": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.rel"
		},
		"3582": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.relative"
		},
		"3583": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.reloadDocument"
		},
		"3584": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.replace"
		},
		"3585": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.resource"
		},
		"3586": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.results"
		},
		"3587": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.rev"
		},
		"3588": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.role"
		},
		"3589": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.security"
		},
		"3590": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.slot"
		},
		"3591": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.spellCheck"
		},
		"3592": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.state"
		},
		"3593": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.style"
		},
		"3594": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.suppressContentEditableWarning"
		},
		"3595": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.suppressHydrationWarning"
		},
		"3596": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.tabIndex"
		},
		"3597": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.target"
		},
		"3598": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.title"
		},
		"3599": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.translate"
		},
		"3600": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.typeof"
		},
		"3601": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.unselectable"
		},
		"3602": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.viewTransition"
		},
		"3603": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.vocab"
		},
		"3604": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "GetScrollPositionFunction"
		},
		"3605": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "GetScrollPositionFunction"
		},
		"3606": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "GetScrollRestorationKeyFunction"
		},
		"3607": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "GetScrollRestorationKeyFunction"
		},
		"3608": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "location"
		},
		"3609": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "matches"
		},
		"3610": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleDataRequestFunction"
		},
		"3611": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleDataRequestFunction"
		},
		"3612": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "response"
		},
		"3613": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "args"
		},
		"3614": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleDocumentRequestFunction"
		},
		"3615": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleDocumentRequestFunction"
		},
		"3616": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "request"
		},
		"3617": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "responseStatusCode"
		},
		"3618": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "responseHeaders"
		},
		"3619": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "context"
		},
		"3620": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "loadContext"
		},
		"3621": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleErrorFunction"
		},
		"3622": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleErrorFunction"
		},
		"3623": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "error"
		},
		"3624": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "args"
		},
		"3625": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouterProps"
		},
		"3626": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouterProps.basename"
		},
		"3627": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouterProps.children"
		},
		"3628": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouterProps.window"
		},
		"3629": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "HeadersFunction"
		},
		"3630": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "HeadersFunction"
		},
		"3631": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "args"
		},
		"3632": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouterProps"
		},
		"3633": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouterProps.basename"
		},
		"3634": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouterProps.children"
		},
		"3635": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouterProps.history"
		},
		"3636": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject"
		},
		"3637": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.action"
		},
		"3638": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.caseSensitive"
		},
		"3639": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.children"
		},
		"3640": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.Component"
		},
		"3641": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"3642": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.element"
		},
		"3643": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.ErrorBoundary"
		},
		"3644": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"3645": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.errorElement"
		},
		"3646": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.handle"
		},
		"3647": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.hasErrorBoundary"
		},
		"3648": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.HydrateFallback"
		},
		"3649": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"3650": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.hydrateFallbackElement"
		},
		"3651": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.id"
		},
		"3652": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.index"
		},
		"3653": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.lazy"
		},
		"3654": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.loader"
		},
		"3655": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.path"
		},
		"3656": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.shouldRevalidate"
		},
		"3657": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps"
		},
		"3658": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.action"
		},
		"3659": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.caseSensitive"
		},
		"3660": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.children"
		},
		"3661": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.Component"
		},
		"3662": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"3663": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.element"
		},
		"3664": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.ErrorBoundary"
		},
		"3665": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"3666": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.errorElement"
		},
		"3667": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.handle"
		},
		"3668": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.hasErrorBoundary"
		},
		"3669": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.HydrateFallback"
		},
		"3670": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"3671": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.hydrateFallbackElement"
		},
		"3672": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.id"
		},
		"3673": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.index"
		},
		"3674": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.lazy"
		},
		"3675": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.loader"
		},
		"3676": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.path"
		},
		"3677": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.shouldRevalidate"
		},
		"3678": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "LayoutRouteProps"
		},
		"3679": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.action"
		},
		"3680": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.caseSensitive"
		},
		"3681": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.children"
		},
		"3682": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.Component"
		},
		"3683": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"3684": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.element"
		},
		"3685": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.ErrorBoundary"
		},
		"3686": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"3687": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.errorElement"
		},
		"3688": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.handle"
		},
		"3689": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.hasErrorBoundary"
		},
		"3690": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.HydrateFallback"
		},
		"3691": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"3692": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.hydrateFallbackElement"
		},
		"3693": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.id"
		},
		"3694": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.index"
		},
		"3695": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.lazy"
		},
		"3696": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.loader"
		},
		"3697": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.path"
		},
		"3698": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.shouldRevalidate"
		},
		"3699": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LazyRouteFunction"
		},
		"3700": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LazyRouteFunction.R"
		},
		"3701": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LazyRouteFunction"
		},
		"3702": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps"
		},
		"3703": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "about"
		},
		"3704": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "accessKey"
		},
		"3705": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-activedescendant"
		},
		"3706": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-atomic"
		},
		"3707": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-autocomplete"
		},
		"3708": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-braillelabel"
		},
		"3709": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-brailleroledescription"
		},
		"3710": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-busy"
		},
		"3711": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-checked"
		},
		"3712": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colcount"
		},
		"3713": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colindex"
		},
		"3714": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colindextext"
		},
		"3715": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colspan"
		},
		"3716": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-controls"
		},
		"3717": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-current"
		},
		"3718": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-describedby"
		},
		"3719": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-description"
		},
		"3720": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-details"
		},
		"3721": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-disabled"
		},
		"3722": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-dropeffect"
		},
		"3723": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-errormessage"
		},
		"3724": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-expanded"
		},
		"3725": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-flowto"
		},
		"3726": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-grabbed"
		},
		"3727": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-haspopup"
		},
		"3728": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-hidden"
		},
		"3729": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-invalid"
		},
		"3730": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-keyshortcuts"
		},
		"3731": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-label"
		},
		"3732": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-labelledby"
		},
		"3733": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-level"
		},
		"3734": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-live"
		},
		"3735": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-modal"
		},
		"3736": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-multiline"
		},
		"3737": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-multiselectable"
		},
		"3738": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-orientation"
		},
		"3739": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-owns"
		},
		"3740": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-placeholder"
		},
		"3741": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-posinset"
		},
		"3742": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-pressed"
		},
		"3743": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-readonly"
		},
		"3744": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-relevant"
		},
		"3745": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-required"
		},
		"3746": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-roledescription"
		},
		"3747": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowcount"
		},
		"3748": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowindex"
		},
		"3749": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowindextext"
		},
		"3750": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowspan"
		},
		"3751": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-selected"
		},
		"3752": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-setsize"
		},
		"3753": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-sort"
		},
		"3754": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuemax"
		},
		"3755": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuemin"
		},
		"3756": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuenow"
		},
		"3757": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuetext"
		},
		"3758": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoCapitalize"
		},
		"3759": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoCorrect"
		},
		"3760": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoFocus"
		},
		"3761": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoSave"
		},
		"3762": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "children"
		},
		"3763": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "className"
		},
		"3764": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "color"
		},
		"3765": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "content"
		},
		"3766": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "contentEditable"
		},
		"3767": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "contextMenu"
		},
		"3768": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "dangerouslySetInnerHTML"
		},
		"3769": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"3770": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.__html"
		},
		"3771": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "datatype"
		},
		"3772": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "defaultChecked"
		},
		"3773": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "defaultValue"
		},
		"3774": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "dir"
		},
		"3775": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.discover"
		},
		"3776": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "download"
		},
		"3777": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "draggable"
		},
		"3778": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "hidden"
		},
		"3779": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "hrefLang"
		},
		"3780": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "id"
		},
		"3781": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "inlist"
		},
		"3782": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "inputMode"
		},
		"3783": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "is"
		},
		"3784": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemID"
		},
		"3785": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemProp"
		},
		"3786": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemRef"
		},
		"3787": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemScope"
		},
		"3788": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemType"
		},
		"3789": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "lang"
		},
		"3790": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "media"
		},
		"3791": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nonce"
		},
		"3792": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAbort"
		},
		"3793": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAbortCapture"
		},
		"3794": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationEnd"
		},
		"3795": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationEndCapture"
		},
		"3796": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationIteration"
		},
		"3797": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationIterationCapture"
		},
		"3798": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationStart"
		},
		"3799": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationStartCapture"
		},
		"3800": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAuxClick"
		},
		"3801": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAuxClickCapture"
		},
		"3802": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBeforeInput"
		},
		"3803": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBeforeInputCapture"
		},
		"3804": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBlur"
		},
		"3805": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBlurCapture"
		},
		"3806": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlay"
		},
		"3807": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayCapture"
		},
		"3808": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayThrough"
		},
		"3809": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayThroughCapture"
		},
		"3810": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onChange"
		},
		"3811": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onChangeCapture"
		},
		"3812": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onClick"
		},
		"3813": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onClickCapture"
		},
		"3814": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionEnd"
		},
		"3815": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionEndCapture"
		},
		"3816": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionStart"
		},
		"3817": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionStartCapture"
		},
		"3818": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionUpdate"
		},
		"3819": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionUpdateCapture"
		},
		"3820": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onContextMenu"
		},
		"3821": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onContextMenuCapture"
		},
		"3822": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCopy"
		},
		"3823": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCopyCapture"
		},
		"3824": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCut"
		},
		"3825": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCutCapture"
		},
		"3826": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDoubleClick"
		},
		"3827": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDoubleClickCapture"
		},
		"3828": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDrag"
		},
		"3829": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragCapture"
		},
		"3830": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnd"
		},
		"3831": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEndCapture"
		},
		"3832": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnter"
		},
		"3833": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnterCapture"
		},
		"3834": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragExit"
		},
		"3835": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragExitCapture"
		},
		"3836": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragLeave"
		},
		"3837": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragLeaveCapture"
		},
		"3838": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragOver"
		},
		"3839": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragOverCapture"
		},
		"3840": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragStart"
		},
		"3841": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragStartCapture"
		},
		"3842": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDrop"
		},
		"3843": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDropCapture"
		},
		"3844": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDurationChange"
		},
		"3845": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDurationChangeCapture"
		},
		"3846": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEmptied"
		},
		"3847": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEmptiedCapture"
		},
		"3848": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEncrypted"
		},
		"3849": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEncryptedCapture"
		},
		"3850": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEnded"
		},
		"3851": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEndedCapture"
		},
		"3852": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onError"
		},
		"3853": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onErrorCapture"
		},
		"3854": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onFocus"
		},
		"3855": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onFocusCapture"
		},
		"3856": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onGotPointerCapture"
		},
		"3857": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onGotPointerCaptureCapture"
		},
		"3858": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInput"
		},
		"3859": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInputCapture"
		},
		"3860": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInvalid"
		},
		"3861": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInvalidCapture"
		},
		"3862": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyDown"
		},
		"3863": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyDownCapture"
		},
		"3864": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyPress"
		},
		"3865": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyPressCapture"
		},
		"3866": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyUp"
		},
		"3867": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyUpCapture"
		},
		"3868": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoad"
		},
		"3869": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadCapture"
		},
		"3870": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedData"
		},
		"3871": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedDataCapture"
		},
		"3872": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedMetadata"
		},
		"3873": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedMetadataCapture"
		},
		"3874": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadStart"
		},
		"3875": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadStartCapture"
		},
		"3876": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLostPointerCapture"
		},
		"3877": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLostPointerCaptureCapture"
		},
		"3878": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseDown"
		},
		"3879": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseDownCapture"
		},
		"3880": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseEnter"
		},
		"3881": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseLeave"
		},
		"3882": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseMove"
		},
		"3883": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseMoveCapture"
		},
		"3884": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOut"
		},
		"3885": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOutCapture"
		},
		"3886": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOver"
		},
		"3887": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOverCapture"
		},
		"3888": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseUp"
		},
		"3889": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseUpCapture"
		},
		"3890": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPaste"
		},
		"3891": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPasteCapture"
		},
		"3892": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPause"
		},
		"3893": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPauseCapture"
		},
		"3894": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlay"
		},
		"3895": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlayCapture"
		},
		"3896": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlaying"
		},
		"3897": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlayingCapture"
		},
		"3898": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerCancel"
		},
		"3899": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerCancelCapture"
		},
		"3900": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerDown"
		},
		"3901": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerDownCapture"
		},
		"3902": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerEnter"
		},
		"3903": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerEnterCapture"
		},
		"3904": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerLeave"
		},
		"3905": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerLeaveCapture"
		},
		"3906": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerMove"
		},
		"3907": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerMoveCapture"
		},
		"3908": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOut"
		},
		"3909": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOutCapture"
		},
		"3910": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOver"
		},
		"3911": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOverCapture"
		},
		"3912": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerUp"
		},
		"3913": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerUpCapture"
		},
		"3914": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onProgress"
		},
		"3915": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onProgressCapture"
		},
		"3916": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onRateChange"
		},
		"3917": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onRateChangeCapture"
		},
		"3918": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onReset"
		},
		"3919": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResetCapture"
		},
		"3920": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResize"
		},
		"3921": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResizeCapture"
		},
		"3922": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onScroll"
		},
		"3923": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onScrollCapture"
		},
		"3924": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeeked"
		},
		"3925": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeekedCapture"
		},
		"3926": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeeking"
		},
		"3927": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeekingCapture"
		},
		"3928": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSelect"
		},
		"3929": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSelectCapture"
		},
		"3930": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onStalled"
		},
		"3931": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onStalledCapture"
		},
		"3932": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSubmit"
		},
		"3933": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSubmitCapture"
		},
		"3934": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSuspend"
		},
		"3935": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSuspendCapture"
		},
		"3936": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTimeUpdate"
		},
		"3937": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTimeUpdateCapture"
		},
		"3938": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchCancel"
		},
		"3939": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchCancelCapture"
		},
		"3940": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchEnd"
		},
		"3941": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchEndCapture"
		},
		"3942": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchMove"
		},
		"3943": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchMoveCapture"
		},
		"3944": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchStart"
		},
		"3945": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchStartCapture"
		},
		"3946": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTransitionEnd"
		},
		"3947": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTransitionEndCapture"
		},
		"3948": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onVolumeChange"
		},
		"3949": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onVolumeChangeCapture"
		},
		"3950": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWaiting"
		},
		"3951": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWaitingCapture"
		},
		"3952": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWheel"
		},
		"3953": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWheelCapture"
		},
		"3954": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ping"
		},
		"3955": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "placeholder"
		},
		"3956": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.prefetch"
		},
		"3957": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prefix"
		},
		"3958": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.preventScrollReset"
		},
		"3959": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "property"
		},
		"3960": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "radioGroup"
		},
		"3961": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "referrerPolicy"
		},
		"3962": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "rel"
		},
		"3963": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.relative"
		},
		"3964": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.reloadDocument"
		},
		"3965": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.replace"
		},
		"3966": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "resource"
		},
		"3967": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "results"
		},
		"3968": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "rev"
		},
		"3969": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "role"
		},
		"3970": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "security"
		},
		"3971": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "slot"
		},
		"3972": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "spellCheck"
		},
		"3973": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.state"
		},
		"3974": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "style"
		},
		"3975": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "suppressContentEditableWarning"
		},
		"3976": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "suppressHydrationWarning"
		},
		"3977": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "tabIndex"
		},
		"3978": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "target"
		},
		"3979": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "title"
		},
		"3980": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.to"
		},
		"3981": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "translate"
		},
		"3982": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "type"
		},
		"3983": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "typeof"
		},
		"3984": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "unselectable"
		},
		"3985": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.viewTransition"
		},
		"3986": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "vocab"
		},
		"3987": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "LinksFunction"
		},
		"3988": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "LinksFunction"
		},
		"3989": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LoaderFunctionArgs"
		},
		"3990": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.context"
		},
		"3991": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.params"
		},
		"3992": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.request"
		},
		"3993": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LoaderFunctionArgs.Context"
		},
		"3994": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Location"
		},
		"3995": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.hash"
		},
		"3996": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Location.key"
		},
		"3997": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.pathname"
		},
		"3998": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.search"
		},
		"3999": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Location.state"
		},
		"4000": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Location.State"
		},
		"4001": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouterProps"
		},
		"4002": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouterProps.basename"
		},
		"4003": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouterProps.children"
		},
		"4004": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouterProps.initialEntries"
		},
		"4005": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouterProps.initialIndex"
		},
		"4006": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs"
		},
		"4007": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.data"
		},
		"4008": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.error"
		},
		"4009": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.location"
		},
		"4010": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.matches"
		},
		"4011": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.params"
		},
		"4012": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.Loader"
		},
		"4013": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.MatchLoaders"
		},
		"4014": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaFunction"
		},
		"4015": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaFunction.Loader"
		},
		"4016": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaFunction.MatchLoaders"
		},
		"4017": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaFunction"
		},
		"4018": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "args"
		},
		"4019": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "NavigateFunction"
		},
		"4020": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "NavigateFunction"
		},
		"4021": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "to"
		},
		"4022": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "options"
		},
		"4023": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "NavigateFunction"
		},
		"4024": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "delta"
		},
		"4025": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions"
		},
		"4026": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.flushSync"
		},
		"4027": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.preventScrollReset"
		},
		"4028": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.relative"
		},
		"4029": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.replace"
		},
		"4030": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.state"
		},
		"4031": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.viewTransition"
		},
		"4032": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "NavigateProps"
		},
		"4033": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "NavigateProps.relative"
		},
		"4034": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "NavigateProps.replace"
		},
		"4035": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "NavigateProps.state"
		},
		"4036": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "NavigateProps.to"
		},
		"4037": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator"
		},
		"4038": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.createHref"
		},
		"4039": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.createHref"
		},
		"4040": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.createHref"
		},
		"4041": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "to"
		},
		"4042": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.encodeLocation"
		},
		"4043": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.encodeLocation"
		},
		"4044": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.encodeLocation"
		},
		"4045": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "to"
		},
		"4046": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.go"
		},
		"4047": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.go"
		},
		"4048": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.go"
		},
		"4049": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "delta"
		},
		"4050": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.push"
		},
		"4051": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.push"
		},
		"4052": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "to"
		},
		"4053": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "state"
		},
		"4054": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "opts"
		},
		"4055": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.replace"
		},
		"4056": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.replace"
		},
		"4057": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "to"
		},
		"4058": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "state"
		},
		"4059": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "opts"
		},
		"4060": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps"
		},
		"4061": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "about"
		},
		"4062": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "accessKey"
		},
		"4063": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-activedescendant"
		},
		"4064": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-atomic"
		},
		"4065": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-autocomplete"
		},
		"4066": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-braillelabel"
		},
		"4067": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-brailleroledescription"
		},
		"4068": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-busy"
		},
		"4069": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-checked"
		},
		"4070": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colcount"
		},
		"4071": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colindex"
		},
		"4072": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colindextext"
		},
		"4073": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colspan"
		},
		"4074": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-controls"
		},
		"4075": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-current"
		},
		"4076": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-describedby"
		},
		"4077": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-description"
		},
		"4078": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-details"
		},
		"4079": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-disabled"
		},
		"4080": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-dropeffect"
		},
		"4081": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-errormessage"
		},
		"4082": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-expanded"
		},
		"4083": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-flowto"
		},
		"4084": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-grabbed"
		},
		"4085": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-haspopup"
		},
		"4086": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-hidden"
		},
		"4087": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-invalid"
		},
		"4088": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-keyshortcuts"
		},
		"4089": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-label"
		},
		"4090": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-labelledby"
		},
		"4091": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-level"
		},
		"4092": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-live"
		},
		"4093": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-modal"
		},
		"4094": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-multiline"
		},
		"4095": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-multiselectable"
		},
		"4096": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-orientation"
		},
		"4097": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-owns"
		},
		"4098": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-placeholder"
		},
		"4099": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-posinset"
		},
		"4100": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-pressed"
		},
		"4101": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-readonly"
		},
		"4102": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-relevant"
		},
		"4103": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-required"
		},
		"4104": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-roledescription"
		},
		"4105": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowcount"
		},
		"4106": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowindex"
		},
		"4107": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowindextext"
		},
		"4108": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowspan"
		},
		"4109": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-selected"
		},
		"4110": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-setsize"
		},
		"4111": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-sort"
		},
		"4112": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuemax"
		},
		"4113": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuemin"
		},
		"4114": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuenow"
		},
		"4115": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuetext"
		},
		"4116": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoCapitalize"
		},
		"4117": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoCorrect"
		},
		"4118": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoFocus"
		},
		"4119": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoSave"
		},
		"4120": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps.caseSensitive"
		},
		"4121": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps.children"
		},
		"4122": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4123": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4124": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "props"
		},
		"4125": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps.className"
		},
		"4126": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4127": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4128": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "props"
		},
		"4129": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "color"
		},
		"4130": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "content"
		},
		"4131": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "contentEditable"
		},
		"4132": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "contextMenu"
		},
		"4133": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "dangerouslySetInnerHTML"
		},
		"4134": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"4135": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.__html"
		},
		"4136": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "datatype"
		},
		"4137": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "defaultChecked"
		},
		"4138": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "defaultValue"
		},
		"4139": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "dir"
		},
		"4140": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "discover"
		},
		"4141": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "download"
		},
		"4142": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "draggable"
		},
		"4143": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps.end"
		},
		"4144": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "hidden"
		},
		"4145": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "hrefLang"
		},
		"4146": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "id"
		},
		"4147": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "inlist"
		},
		"4148": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "inputMode"
		},
		"4149": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "is"
		},
		"4150": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemID"
		},
		"4151": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemProp"
		},
		"4152": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemRef"
		},
		"4153": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemScope"
		},
		"4154": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemType"
		},
		"4155": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "lang"
		},
		"4156": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "media"
		},
		"4157": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nonce"
		},
		"4158": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAbort"
		},
		"4159": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAbortCapture"
		},
		"4160": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationEnd"
		},
		"4161": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationEndCapture"
		},
		"4162": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationIteration"
		},
		"4163": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationIterationCapture"
		},
		"4164": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationStart"
		},
		"4165": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationStartCapture"
		},
		"4166": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAuxClick"
		},
		"4167": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAuxClickCapture"
		},
		"4168": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBeforeInput"
		},
		"4169": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBeforeInputCapture"
		},
		"4170": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBlur"
		},
		"4171": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBlurCapture"
		},
		"4172": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlay"
		},
		"4173": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayCapture"
		},
		"4174": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayThrough"
		},
		"4175": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayThroughCapture"
		},
		"4176": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onChange"
		},
		"4177": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onChangeCapture"
		},
		"4178": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onClick"
		},
		"4179": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onClickCapture"
		},
		"4180": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionEnd"
		},
		"4181": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionEndCapture"
		},
		"4182": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionStart"
		},
		"4183": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionStartCapture"
		},
		"4184": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionUpdate"
		},
		"4185": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionUpdateCapture"
		},
		"4186": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onContextMenu"
		},
		"4187": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onContextMenuCapture"
		},
		"4188": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCopy"
		},
		"4189": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCopyCapture"
		},
		"4190": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCut"
		},
		"4191": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCutCapture"
		},
		"4192": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDoubleClick"
		},
		"4193": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDoubleClickCapture"
		},
		"4194": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDrag"
		},
		"4195": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragCapture"
		},
		"4196": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnd"
		},
		"4197": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEndCapture"
		},
		"4198": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnter"
		},
		"4199": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnterCapture"
		},
		"4200": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragExit"
		},
		"4201": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragExitCapture"
		},
		"4202": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragLeave"
		},
		"4203": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragLeaveCapture"
		},
		"4204": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragOver"
		},
		"4205": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragOverCapture"
		},
		"4206": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragStart"
		},
		"4207": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragStartCapture"
		},
		"4208": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDrop"
		},
		"4209": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDropCapture"
		},
		"4210": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDurationChange"
		},
		"4211": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDurationChangeCapture"
		},
		"4212": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEmptied"
		},
		"4213": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEmptiedCapture"
		},
		"4214": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEncrypted"
		},
		"4215": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEncryptedCapture"
		},
		"4216": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEnded"
		},
		"4217": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEndedCapture"
		},
		"4218": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onError"
		},
		"4219": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onErrorCapture"
		},
		"4220": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onFocus"
		},
		"4221": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onFocusCapture"
		},
		"4222": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onGotPointerCapture"
		},
		"4223": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onGotPointerCaptureCapture"
		},
		"4224": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInput"
		},
		"4225": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInputCapture"
		},
		"4226": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInvalid"
		},
		"4227": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInvalidCapture"
		},
		"4228": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyDown"
		},
		"4229": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyDownCapture"
		},
		"4230": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyPress"
		},
		"4231": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyPressCapture"
		},
		"4232": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyUp"
		},
		"4233": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyUpCapture"
		},
		"4234": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoad"
		},
		"4235": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadCapture"
		},
		"4236": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedData"
		},
		"4237": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedDataCapture"
		},
		"4238": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedMetadata"
		},
		"4239": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedMetadataCapture"
		},
		"4240": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadStart"
		},
		"4241": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadStartCapture"
		},
		"4242": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLostPointerCapture"
		},
		"4243": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLostPointerCaptureCapture"
		},
		"4244": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseDown"
		},
		"4245": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseDownCapture"
		},
		"4246": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseEnter"
		},
		"4247": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseLeave"
		},
		"4248": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseMove"
		},
		"4249": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseMoveCapture"
		},
		"4250": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOut"
		},
		"4251": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOutCapture"
		},
		"4252": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOver"
		},
		"4253": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOverCapture"
		},
		"4254": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseUp"
		},
		"4255": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseUpCapture"
		},
		"4256": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPaste"
		},
		"4257": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPasteCapture"
		},
		"4258": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPause"
		},
		"4259": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPauseCapture"
		},
		"4260": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlay"
		},
		"4261": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlayCapture"
		},
		"4262": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlaying"
		},
		"4263": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlayingCapture"
		},
		"4264": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerCancel"
		},
		"4265": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerCancelCapture"
		},
		"4266": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerDown"
		},
		"4267": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerDownCapture"
		},
		"4268": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerEnter"
		},
		"4269": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerEnterCapture"
		},
		"4270": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerLeave"
		},
		"4271": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerLeaveCapture"
		},
		"4272": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerMove"
		},
		"4273": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerMoveCapture"
		},
		"4274": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOut"
		},
		"4275": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOutCapture"
		},
		"4276": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOver"
		},
		"4277": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOverCapture"
		},
		"4278": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerUp"
		},
		"4279": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerUpCapture"
		},
		"4280": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onProgress"
		},
		"4281": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onProgressCapture"
		},
		"4282": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onRateChange"
		},
		"4283": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onRateChangeCapture"
		},
		"4284": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onReset"
		},
		"4285": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResetCapture"
		},
		"4286": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResize"
		},
		"4287": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResizeCapture"
		},
		"4288": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onScroll"
		},
		"4289": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onScrollCapture"
		},
		"4290": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeeked"
		},
		"4291": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeekedCapture"
		},
		"4292": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeeking"
		},
		"4293": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeekingCapture"
		},
		"4294": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSelect"
		},
		"4295": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSelectCapture"
		},
		"4296": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onStalled"
		},
		"4297": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onStalledCapture"
		},
		"4298": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSubmit"
		},
		"4299": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSubmitCapture"
		},
		"4300": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSuspend"
		},
		"4301": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSuspendCapture"
		},
		"4302": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTimeUpdate"
		},
		"4303": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTimeUpdateCapture"
		},
		"4304": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchCancel"
		},
		"4305": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchCancelCapture"
		},
		"4306": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchEnd"
		},
		"4307": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchEndCapture"
		},
		"4308": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchMove"
		},
		"4309": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchMoveCapture"
		},
		"4310": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchStart"
		},
		"4311": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchStartCapture"
		},
		"4312": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTransitionEnd"
		},
		"4313": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTransitionEndCapture"
		},
		"4314": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onVolumeChange"
		},
		"4315": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onVolumeChangeCapture"
		},
		"4316": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWaiting"
		},
		"4317": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWaitingCapture"
		},
		"4318": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWheel"
		},
		"4319": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWheelCapture"
		},
		"4320": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ping"
		},
		"4321": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "placeholder"
		},
		"4322": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "prefetch"
		},
		"4323": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prefix"
		},
		"4324": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "preventScrollReset"
		},
		"4325": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "property"
		},
		"4326": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "radioGroup"
		},
		"4327": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "referrerPolicy"
		},
		"4328": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "rel"
		},
		"4329": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "relative"
		},
		"4330": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "reloadDocument"
		},
		"4331": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "replace"
		},
		"4332": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "resource"
		},
		"4333": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "results"
		},
		"4334": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "rev"
		},
		"4335": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "role"
		},
		"4336": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "security"
		},
		"4337": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "slot"
		},
		"4338": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "spellCheck"
		},
		"4339": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "state"
		},
		"4340": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps.style"
		},
		"4341": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4342": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4343": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "props"
		},
		"4344": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "suppressContentEditableWarning"
		},
		"4345": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "suppressHydrationWarning"
		},
		"4346": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "tabIndex"
		},
		"4347": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "target"
		},
		"4348": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "title"
		},
		"4349": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "to"
		},
		"4350": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "translate"
		},
		"4351": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "type"
		},
		"4352": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "typeof"
		},
		"4353": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "unselectable"
		},
		"4354": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "viewTransition"
		},
		"4355": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "vocab"
		},
		"4356": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject"
		},
		"4357": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.action"
		},
		"4358": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.caseSensitive"
		},
		"4359": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.children"
		},
		"4360": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.Component"
		},
		"4361": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"4362": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.element"
		},
		"4363": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.ErrorBoundary"
		},
		"4364": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"4365": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.errorElement"
		},
		"4366": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.handle"
		},
		"4367": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.hasErrorBoundary"
		},
		"4368": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.HydrateFallback"
		},
		"4369": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"4370": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.hydrateFallbackElement"
		},
		"4371": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.id"
		},
		"4372": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.index"
		},
		"4373": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.lazy"
		},
		"4374": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.loader"
		},
		"4375": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.path"
		},
		"4376": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.shouldRevalidate"
		},
		"4377": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "OutletProps"
		},
		"4378": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "OutletProps.context"
		},
		"4379": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "PageLinkDescriptor"
		},
		"4380": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "crossOrigin"
		},
		"4381": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "disabled"
		},
		"4382": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "hrefLang"
		},
		"4383": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "integrity"
		},
		"4384": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "media"
		},
		"4385": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "PageLinkDescriptor.page"
		},
		"4386": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "referrerPolicy"
		},
		"4387": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path"
		},
		"4388": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.hash"
		},
		"4389": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.pathname"
		},
		"4390": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.search"
		},
		"4391": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch"
		},
		"4392": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch.params"
		},
		"4393": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch.pathname"
		},
		"4394": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch.pathnameBase"
		},
		"4395": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch.pattern"
		},
		"4396": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch.ParamKey"
		},
		"4397": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathPattern"
		},
		"4398": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathPattern.caseSensitive"
		},
		"4399": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathPattern.end"
		},
		"4400": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathPattern.path"
		},
		"4401": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathPattern.Path"
		},
		"4402": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps"
		},
		"4403": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.action"
		},
		"4404": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.caseSensitive"
		},
		"4405": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.children"
		},
		"4406": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.Component"
		},
		"4407": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"4408": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.element"
		},
		"4409": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.ErrorBoundary"
		},
		"4410": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"4411": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.errorElement"
		},
		"4412": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.handle"
		},
		"4413": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.hasErrorBoundary"
		},
		"4414": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.HydrateFallback"
		},
		"4415": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"4416": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.hydrateFallbackElement"
		},
		"4417": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.id"
		},
		"4418": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.index"
		},
		"4419": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.lazy"
		},
		"4420": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.loader"
		},
		"4421": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.path"
		},
		"4422": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.shouldRevalidate"
		},
		"4423": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "RouteMatch"
		},
		"4424": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.params"
		},
		"4425": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathname"
		},
		"4426": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathnameBase"
		},
		"4427": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.route"
		},
		"4428": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "RouteMatch.ParamKey"
		},
		"4429": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "RouteMatch.RouteObjectType"
		},
		"4430": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit"
		},
		"4431": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.basename"
		},
		"4432": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.dataStrategy"
		},
		"4433": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.future"
		},
		"4434": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.history"
		},
		"4435": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.hydrationData"
		},
		"4436": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.mapRouteProperties"
		},
		"4437": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.patchRoutesOnNavigation"
		},
		"4438": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.routes"
		},
		"4439": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.window"
		},
		"4440": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps"
		},
		"4441": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.basename"
		},
		"4442": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.children"
		},
		"4443": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.location"
		},
		"4444": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.navigationType"
		},
		"4445": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.navigator"
		},
		"4446": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.static"
		},
		"4447": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProviderProps"
		},
		"4448": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProviderProps.flushSync"
		},
		"4449": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"4450": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"4451": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "fn"
		},
		"4452": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"4453": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"4454": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProviderProps.router"
		},
		"4455": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState"
		},
		"4456": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.actionData"
		},
		"4457": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.blockers"
		},
		"4458": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.errors"
		},
		"4459": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.fetchers"
		},
		"4460": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.historyAction"
		},
		"4461": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.initialized"
		},
		"4462": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.loaderData"
		},
		"4463": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.location"
		},
		"4464": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.matches"
		},
		"4465": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.navigation"
		},
		"4466": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.preventScrollReset"
		},
		"4467": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.restoreScrollPosition"
		},
		"4468": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.revalidation"
		},
		"4469": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterSubscriber"
		},
		"4470": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterSubscriber"
		},
		"4471": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "state"
		},
		"4472": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "opts"
		},
		"4473": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"4474": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.deletedFetchers"
		},
		"4475": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.flushSync"
		},
		"4476": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.viewTransitionOpts"
		},
		"4477": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RoutesProps"
		},
		"4478": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RoutesProps.children"
		},
		"4479": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RoutesProps.location"
		},
		"4480": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStubProps"
		},
		"4481": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStubProps.future"
		},
		"4482": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStubProps.hydrationData"
		},
		"4483": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStubProps.initialEntries"
		},
		"4484": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStubProps.initialIndex"
		},
		"4485": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild"
		},
		"4486": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.assets"
		},
		"4487": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.assetsBuildDirectory"
		},
		"4488": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.basename"
		},
		"4489": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.entry"
		},
		"4490": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "__type"
		},
		"4491": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "__type.module"
		},
		"4492": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.future"
		},
		"4493": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.isSpaMode"
		},
		"4494": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.publicPath"
		},
		"4495": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.routes"
		},
		"4496": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerEntryModule"
		},
		"4497": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerEntryModule.default"
		},
		"4498": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerEntryModule.handleDataRequest"
		},
		"4499": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerEntryModule.handleError"
		},
		"4500": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerEntryModule.streamTimeout"
		},
		"4501": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouterProps"
		},
		"4502": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouterProps.context"
		},
		"4503": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouterProps.nonce"
		},
		"4504": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouterProps.url"
		},
		"4505": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session"
		},
		"4506": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.data"
		},
		"4507": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.id"
		},
		"4508": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.flash"
		},
		"4509": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.flash"
		},
		"4510": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Key"
		},
		"4511": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "name"
		},
		"4512": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "value"
		},
		"4513": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.get"
		},
		"4514": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.get"
		},
		"4515": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Key"
		},
		"4516": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "name"
		},
		"4517": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.has"
		},
		"4518": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.has"
		},
		"4519": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "name"
		},
		"4520": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.set"
		},
		"4521": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.set"
		},
		"4522": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Key"
		},
		"4523": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "name"
		},
		"4524": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "value"
		},
		"4525": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.unset"
		},
		"4526": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.unset"
		},
		"4527": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "name"
		},
		"4528": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.Data"
		},
		"4529": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.FlashData"
		},
		"4530": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionData"
		},
		"4531": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionData.__index"
		},
		"4533": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy"
		},
		"4534": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.cookie"
		},
		"4535": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4536": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type.name"
		},
		"4537": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.createData"
		},
		"4538": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4539": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4540": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "data"
		},
		"4541": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "expires"
		},
		"4542": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.deleteData"
		},
		"4543": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4544": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4545": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "id"
		},
		"4546": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.readData"
		},
		"4547": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4548": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4549": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "id"
		},
		"4550": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.updateData"
		},
		"4551": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4552": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4553": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "id"
		},
		"4554": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "data"
		},
		"4555": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "expires"
		},
		"4556": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.Data"
		},
		"4557": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.FlashData"
		},
		"4558": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage"
		},
		"4559": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage.commitSession"
		},
		"4560": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4561": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4562": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "session"
		},
		"4563": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "options"
		},
		"4564": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage.destroySession"
		},
		"4565": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4566": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4567": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "session"
		},
		"4568": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "options"
		},
		"4569": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage.getSession"
		},
		"4570": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4571": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4572": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "cookieHeader"
		},
		"4573": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "options"
		},
		"4574": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage.Data"
		},
		"4575": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage.FlashData"
		},
		"4576": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunction"
		},
		"4577": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunction"
		},
		"4578": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "args"
		},
		"4579": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs"
		},
		"4580": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.actionResult"
		},
		"4581": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.actionStatus"
		},
		"4582": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.currentParams"
		},
		"4583": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.currentUrl"
		},
		"4584": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.defaultShouldRevalidate"
		},
		"4585": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.formAction"
		},
		"4586": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.formData"
		},
		"4587": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.formEncType"
		},
		"4588": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.formMethod"
		},
		"4589": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.json"
		},
		"4590": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.nextParams"
		},
		"4591": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.nextUrl"
		},
		"4592": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.text"
		},
		"4593": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler"
		},
		"4594": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler.dataRoutes"
		},
		"4595": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler.query"
		},
		"4596": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler.query"
		},
		"4597": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "request"
		},
		"4598": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "opts"
		},
		"4599": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"4600": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.dataStrategy"
		},
		"4601": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.requestContext"
		},
		"4602": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.skipLoaderErrorBubbling"
		},
		"4603": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler.queryRoute"
		},
		"4604": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler.queryRoute"
		},
		"4605": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "request"
		},
		"4606": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "opts"
		},
		"4607": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"4608": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.dataStrategy"
		},
		"4609": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.requestContext"
		},
		"4610": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.routeId"
		},
		"4611": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext"
		},
		"4612": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext._deepestRenderedBoundaryId"
		},
		"4613": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.actionData"
		},
		"4614": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.actionHeaders"
		},
		"4615": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.basename"
		},
		"4616": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.errors"
		},
		"4617": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.loaderData"
		},
		"4618": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.loaderHeaders"
		},
		"4619": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.location"
		},
		"4620": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.matches"
		},
		"4621": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.statusCode"
		},
		"4622": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProps"
		},
		"4623": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProps.basename"
		},
		"4624": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProps.children"
		},
		"4625": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProps.location"
		},
		"4626": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProviderProps"
		},
		"4627": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProviderProps.context"
		},
		"4628": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProviderProps.hydrate"
		},
		"4629": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProviderProps.nonce"
		},
		"4630": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProviderProps.router"
		},
		"4631": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SubmitFunction"
		},
		"4632": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SubmitFunction"
		},
		"4633": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "target"
		},
		"4634": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "options"
		},
		"4635": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions"
		},
		"4636": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.action"
		},
		"4637": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.encType"
		},
		"4638": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions.fetcherKey"
		},
		"4639": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.flushSync"
		},
		"4640": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.method"
		},
		"4641": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions.navigate"
		},
		"4642": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.preventScrollReset"
		},
		"4643": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.relative"
		},
		"4644": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions.replace"
		},
		"4645": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions.state"
		},
		"4646": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions.viewTransition"
		},
		"4647": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch"
		},
		"4648": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.data"
		},
		"4649": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.handle"
		},
		"4650": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.id"
		},
		"4651": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.params"
		},
		"4652": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.pathname"
		},
		"4653": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.Data"
		},
		"4654": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.Handle"
		},
		"4655": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest"
		},
		"4656": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest.entry"
		},
		"4657": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type"
		},
		"4658": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.imports"
		},
		"4659": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.module"
		},
		"4660": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest.hmr"
		},
		"4661": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type"
		},
		"4662": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.runtime"
		},
		"4663": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.timestamp"
		},
		"4664": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest.routes"
		},
		"4665": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest.url"
		},
		"4666": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest.version"
		},
		"4667": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "RouteModules"
		},
		"4668": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "RouteModules.__index"
		},
		"4670": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Blocker"
		},
		"4671": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "BlockerFunction"
		},
		"4672": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"4673": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"4674": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "args"
		},
		"4675": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"4676": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.currentLocation"
		},
		"4677": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.historyAction"
		},
		"4678": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.nextLocation"
		},
		"4679": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "ClientActionFunction"
		},
		"4680": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4681": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4682": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "args"
		},
		"4683": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "ClientActionFunctionArgs"
		},
		"4684": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4685": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.serverAction"
		},
		"4686": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4687": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4688": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "T"
		},
		"4689": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "ClientLoaderFunction"
		},
		"4690": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4691": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4692": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "args"
		},
		"4693": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4694": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.hydrate"
		},
		"4695": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "ClientLoaderFunctionArgs"
		},
		"4696": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4697": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.serverLoader"
		},
		"4698": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4699": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4700": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "T"
		},
		"4701": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "CookieOptions"
		},
		"4702": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "CreateRequestHandlerFunction"
		},
		"4703": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"4704": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"4705": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "build"
		},
		"4706": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"4707": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"4708": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "mode"
		},
		"4709": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "DataRouteObject"
		},
		"4710": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "__type"
		},
		"4711": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "__type.children"
		},
		"4712": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "__type.id"
		},
		"4713": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ErrorResponse"
		},
		"4714": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"4715": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.data"
		},
		"4716": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.status"
		},
		"4717": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.statusText"
		},
		"4718": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Fetcher"
		},
		"4719": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "TData"
		},
		"4720": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FetcherWithComponents"
		},
		"4721": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "TData"
		},
		"4722": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4723": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.Form"
		},
		"4724": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.load"
		},
		"4725": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4726": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4727": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "href"
		},
		"4728": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "opts"
		},
		"4729": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4730": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.flushSync"
		},
		"4731": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.submit"
		},
		"4732": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "FlashSessionData"
		},
		"4733": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Data"
		},
		"4734": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "FlashData"
		},
		"4735": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "FormEncType"
		},
		"4736": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "FormMethod"
		},
		"4737": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "HeadersArgs"
		},
		"4738": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4739": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type.actionHeaders"
		},
		"4740": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type.errorHeaders"
		},
		"4741": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type.loaderHeaders"
		},
		"4742": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type.parentHeaders"
		},
		"4743": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "HTMLFormMethod"
		},
		"4744": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "HtmlLinkDescriptor"
		},
		"4745": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "__type"
		},
		"4746": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "__type.imageSizes"
		},
		"4747": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "HydrationState"
		},
		"4748": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "InitialEntry"
		},
		"4749": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "IsCookieFunction"
		},
		"4750": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "__type"
		},
		"4751": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "__type"
		},
		"4752": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "object"
		},
		"4753": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "IsSessionFunction"
		},
		"4754": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4755": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"4756": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "object"
		},
		"4757": {
			"sourceFileName": "packages/react-router/lib/router/links.ts",
			"qualifiedName": "LinkDescriptor"
		},
		"4758": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LoaderFunction"
		},
		"4759": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Context"
		},
		"4760": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"4761": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"4762": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "args"
		},
		"4763": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "handlerCtx"
		},
		"4764": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"4765": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.hydrate"
		},
		"4766": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaDescriptor"
		},
		"4767": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4768": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.charSet"
		},
		"4769": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4770": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.title"
		},
		"4771": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4772": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.content"
		},
		"4773": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.name"
		},
		"4774": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4775": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.content"
		},
		"4776": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.property"
		},
		"4777": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4778": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.content"
		},
		"4779": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.httpEquiv"
		},
		"4780": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4781": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.script:ld+json"
		},
		"4782": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4783": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.tagName"
		},
		"4784": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.__index"
		},
		"4786": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"4787": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.__index"
		},
		"4789": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Navigation"
		},
		"4790": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "NavigationStates"
		},
		"4791": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"4792": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.Idle"
		},
		"4793": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"4794": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formAction"
		},
		"4795": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formData"
		},
		"4796": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formEncType"
		},
		"4797": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formMethod"
		},
		"4798": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.json"
		},
		"4799": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.location"
		},
		"4800": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.state"
		},
		"4801": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.text"
		},
		"4802": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.Loading"
		},
		"4803": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"4804": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formAction"
		},
		"4805": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formData"
		},
		"4806": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formEncType"
		},
		"4807": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formMethod"
		},
		"4808": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.json"
		},
		"4809": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.location"
		},
		"4810": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.state"
		},
		"4811": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.text"
		},
		"4812": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.Submitting"
		},
		"4813": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"4814": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formAction"
		},
		"4815": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formData"
		},
		"4816": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formEncType"
		},
		"4817": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formMethod"
		},
		"4818": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.json"
		},
		"4819": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.location"
		},
		"4820": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.state"
		},
		"4821": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.text"
		},
		"4822": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkRenderProps"
		},
		"4823": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4824": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.isActive"
		},
		"4825": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.isPending"
		},
		"4826": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.isTransitioning"
		},
		"4827": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "ParamKeyValuePair"
		},
		"4828": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ParamParseKey"
		},
		"4829": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Segment"
		},
		"4830": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Params"
		},
		"4831": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Key"
		},
		"4832": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "PatchRoutesOnNavigationFunction"
		},
		"4833": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "PatchRoutesOnNavigationFunctionArgs"
		},
		"4834": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathParam"
		},
		"4835": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Path"
		},
		"4836": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "RedirectFunction"
		},
		"4837": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"4838": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"4839": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "url"
		},
		"4840": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"4841": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RelativeRoutingType"
		},
		"4842": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "RequestHandler"
		},
		"4843": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"4844": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"4845": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "request"
		},
		"4846": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "loadContext"
		},
		"4847": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RevalidationState"
		},
		"4848": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "RouteObject"
		},
		"4849": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouteProps"
		},
		"4850": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterFetchOptions"
		},
		"4851": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterNavigateOptions"
		},
		"4852": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "ScriptsProps"
		},
		"4853": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "ScrollRestorationProps"
		},
		"4854": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4855": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.getKey"
		},
		"4856": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.storageKey"
		},
		"4857": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SetURLSearchParams"
		},
		"4858": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4859": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4860": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "nextInit"
		},
		"4861": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4862": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"4863": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "prev"
		},
		"4864": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "navigateOpts"
		},
		"4865": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitTarget"
		},
		"4866": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "To"
		},
		"4867": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "URLSearchParamsInit"
		},
		"4868": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "IDLE_BLOCKER"
		},
		"4869": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "IDLE_FETCHER"
		},
		"4870": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "IDLE_NAVIGATION"
		},
		"4871": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "DataRouterContext"
		},
		"4872": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "DataRouterStateContext"
		},
		"4873": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "FetchersContext"
		},
		"4874": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "FrameworkContext"
		},
		"4875": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "LocationContext"
		},
		"4876": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigationContext"
		},
		"4877": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "RouteContext"
		},
		"4878": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "SingleFetchRedirectSymbol"
		},
		"4879": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "ViewTransitionContext"
		},
		"4880": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Await"
		},
		"4881": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Await"
		},
		"4882": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Resolve"
		},
		"4883": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"4884": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouter"
		},
		"4885": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouter"
		},
		"4886": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"4887": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "createBrowserRouter"
		},
		"4888": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "createBrowserRouter"
		},
		"4889": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "routes"
		},
		"4890": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "opts"
		},
		"4891": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "createCookie"
		},
		"4892": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "createCookie"
		},
		"4893": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "name"
		},
		"4894": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "cookieOptions"
		},
		"4895": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "createCookieSessionStorage"
		},
		"4896": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "createCookieSessionStorage"
		},
		"4897": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "Data"
		},
		"4898": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "FlashData"
		},
		"4899": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "__0"
		},
		"4900": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "createHashRouter"
		},
		"4901": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "createHashRouter"
		},
		"4902": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "routes"
		},
		"4903": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "opts"
		},
		"4904": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "createMemoryRouter"
		},
		"4905": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "createMemoryRouter"
		},
		"4906": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "routes"
		},
		"4907": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "opts"
		},
		"4908": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"4909": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.basename"
		},
		"4910": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.dataStrategy"
		},
		"4911": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.future"
		},
		"4912": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.hydrationData"
		},
		"4913": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.initialEntries"
		},
		"4914": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.initialIndex"
		},
		"4915": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.patchRoutesOnNavigation"
		},
		"4916": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "createMemorySessionStorage"
		},
		"4917": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "createMemorySessionStorage"
		},
		"4918": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "Data"
		},
		"4919": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "FlashData"
		},
		"4920": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "__0"
		},
		"4921": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "createPath"
		},
		"4922": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "createPath"
		},
		"4923": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "__0"
		},
		"4924": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "createRequestHandler"
		},
		"4925": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "createRequestHandler"
		},
		"4926": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "build"
		},
		"4927": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"4928": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"4929": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "mode"
		},
		"4930": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "createRoutesFromChildren"
		},
		"4931": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "createRoutesFromChildren"
		},
		"4932": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "children"
		},
		"4933": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "parentPath"
		},
		"4934": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "createRoutesFromElements"
		},
		"4935": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "createRoutesFromElements"
		},
		"4936": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "children"
		},
		"4937": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "parentPath"
		},
		"4938": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "createRoutesStub"
		},
		"4939": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "createRoutesStub"
		},
		"4940": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "routes"
		},
		"4941": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "context"
		},
		"4942": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStub"
		},
		"4943": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStub"
		},
		"4944": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "__0"
		},
		"4945": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "createSearchParams"
		},
		"4946": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "createSearchParams"
		},
		"4947": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "init"
		},
		"4948": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "createSession"
		},
		"4949": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "createSession"
		},
		"4950": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Data"
		},
		"4951": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "FlashData"
		},
		"4952": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "initialData"
		},
		"4953": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "id"
		},
		"4954": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "createSessionStorage"
		},
		"4955": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "createSessionStorage"
		},
		"4956": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Data"
		},
		"4957": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "FlashData"
		},
		"4958": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__0"
		},
		"4959": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "createStaticHandler"
		},
		"4960": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "createStaticHandler"
		},
		"4961": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "routes"
		},
		"4962": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "opts"
		},
		"4963": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "createStaticRouter"
		},
		"4964": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "createStaticRouter"
		},
		"4965": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "routes"
		},
		"4966": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "context"
		},
		"4967": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "opts"
		},
		"4968": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "__type"
		},
		"4969": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "__type.future"
		},
		"4970": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "data"
		},
		"4971": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "data"
		},
		"4972": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "D"
		},
		"4973": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "data"
		},
		"4974": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"4975": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "Form"
		},
		"4976": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ExoticComponent.$$typeof"
		},
		"4977": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.defaultProps"
		},
		"4978": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NamedExoticComponent.displayName"
		},
		"4979": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.propTypes"
		},
		"4980": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "Form"
		},
		"4981": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"4982": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "generatePath"
		},
		"4983": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "generatePath"
		},
		"4984": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Path"
		},
		"4985": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "originalPath"
		},
		"4986": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "params"
		},
		"4987": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouter"
		},
		"4988": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouter"
		},
		"4989": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"4990": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "isCookie"
		},
		"4991": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "isCookie"
		},
		"4992": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "object"
		},
		"4993": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "isRouteErrorResponse"
		},
		"4994": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "isRouteErrorResponse"
		},
		"4995": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "error"
		},
		"4996": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "isSession"
		},
		"4997": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "isSession"
		},
		"4998": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "object"
		},
		"4999": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "Link"
		},
		"5000": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ExoticComponent.$$typeof"
		},
		"5001": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.defaultProps"
		},
		"5002": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NamedExoticComponent.displayName"
		},
		"5003": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.propTypes"
		},
		"5004": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "Link"
		},
		"5005": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"5006": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Links"
		},
		"5007": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Links"
		},
		"5008": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "matchPath"
		},
		"5009": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "matchPath"
		},
		"5010": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ParamKey"
		},
		"5011": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Path"
		},
		"5012": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "pattern"
		},
		"5013": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "pathname"
		},
		"5014": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "matchRoutes"
		},
		"5015": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "matchRoutes"
		},
		"5016": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "RouteObjectType"
		},
		"5017": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "routes"
		},
		"5018": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "locationArg"
		},
		"5019": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "basename"
		},
		"5020": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouter"
		},
		"5021": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouter"
		},
		"5022": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"5023": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Meta"
		},
		"5024": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Meta"
		},
		"5025": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Navigate"
		},
		"5026": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Navigate"
		},
		"5027": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"5028": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLink"
		},
		"5029": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ExoticComponent.$$typeof"
		},
		"5030": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.defaultProps"
		},
		"5031": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NamedExoticComponent.displayName"
		},
		"5032": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.propTypes"
		},
		"5033": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "NavLink"
		},
		"5034": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"5035": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Outlet"
		},
		"5036": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Outlet"
		},
		"5037": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "props"
		},
		"5038": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "parsePath"
		},
		"5039": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "parsePath"
		},
		"5040": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "path"
		},
		"5041": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "PrefetchPageLinks"
		},
		"5042": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "PrefetchPageLinks"
		},
		"5043": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "__0"
		},
		"5044": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "redirect"
		},
		"5045": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "redirect"
		},
		"5046": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "url"
		},
		"5047": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"5048": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "redirectDocument"
		},
		"5049": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "redirectDocument"
		},
		"5050": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "url"
		},
		"5051": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"5052": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "renderMatches"
		},
		"5053": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "renderMatches"
		},
		"5054": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "matches"
		},
		"5055": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "replace"
		},
		"5056": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "replace"
		},
		"5057": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "url"
		},
		"5058": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"5059": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "resolvePath"
		},
		"5060": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "resolvePath"
		},
		"5061": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "to"
		},
		"5062": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "fromPathname"
		},
		"5063": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Route"
		},
		"5064": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Route"
		},
		"5065": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "_props"
		},
		"5066": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Router"
		},
		"5067": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Router"
		},
		"5068": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"5069": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProvider"
		},
		"5070": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProvider"
		},
		"5071": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"5072": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Routes"
		},
		"5073": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Routes"
		},
		"5074": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"5075": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Scripts"
		},
		"5076": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Scripts"
		},
		"5077": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "props"
		},
		"5078": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "ScrollRestoration"
		},
		"5079": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "ScrollRestoration.displayName"
		},
		"5080": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "ScrollRestoration"
		},
		"5081": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"5082": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouter"
		},
		"5083": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouter"
		},
		"5084": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "__0"
		},
		"5085": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouter"
		},
		"5086": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouter"
		},
		"5087": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "__0"
		},
		"5088": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProvider"
		},
		"5089": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProvider"
		},
		"5090": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "__0"
		},
		"5091": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "createBrowserHistory"
		},
		"5092": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "createBrowserHistory"
		},
		"5093": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "options"
		},
		"5094": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "createClientRoutes"
		},
		"5095": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "createClientRoutes"
		},
		"5096": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "manifest"
		},
		"5097": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "routeModulesCache"
		},
		"5098": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "initialState"
		},
		"5099": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "isSpaMode"
		},
		"5100": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "parentId"
		},
		"5101": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "routesByParentId"
		},
		"5102": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "needsRevalidation"
		},
		"5103": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "createClientRoutesWithHMRRevalidationOptOut"
		},
		"5104": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "createClientRoutesWithHMRRevalidationOptOut"
		},
		"5105": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "needsRevalidation"
		},
		"5106": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "manifest"
		},
		"5107": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "routeModulesCache"
		},
		"5108": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "initialState"
		},
		"5109": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "future"
		},
		"5110": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "isSpaMode"
		},
		"5111": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "createRouter"
		},
		"5112": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "createRouter"
		},
		"5113": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "init"
		},
		"5114": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "decodeViaTurboStream"
		},
		"5115": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "decodeViaTurboStream"
		},
		"5116": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "body"
		},
		"5117": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "global"
		},
		"5118": {
			"sourceFileName": "node_modules/.pnpm/turbo-stream@2.4.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
			"qualifiedName": "__type"
		},
		"5119": {
			"sourceFileName": "node_modules/.pnpm/turbo-stream@2.4.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
			"qualifiedName": "__type.done"
		},
		"5120": {
			"sourceFileName": "node_modules/.pnpm/turbo-stream@2.4.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
			"qualifiedName": "__type.value"
		},
		"5121": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errors.ts",
			"qualifiedName": "deserializeErrors"
		},
		"5122": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errors.ts",
			"qualifiedName": "deserializeErrors"
		},
		"5123": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errors.ts",
			"qualifiedName": "errors"
		},
		"5124": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "getPatchRoutesOnNavigationFunction"
		},
		"5125": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "getPatchRoutesOnNavigationFunction"
		},
		"5126": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "manifest"
		},
		"5127": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "routeModules"
		},
		"5128": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "isSpaMode"
		},
		"5129": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "basename"
		},
		"5130": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "getSingleFetchDataStrategy"
		},
		"5131": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "getSingleFetchDataStrategy"
		},
		"5132": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "manifest"
		},
		"5133": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "routeModules"
		},
		"5134": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "getRouter"
		},
		"5135": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "__type"
		},
		"5136": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "__type"
		},
		"5137": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "shouldHydrateRouteLoader"
		},
		"5138": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "shouldHydrateRouteLoader"
		},
		"5139": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "route"
		},
		"5140": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "routeModule"
		},
		"5141": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "isSpaMode"
		},
		"5142": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "useFogOFWarDiscovery"
		},
		"5143": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "useFogOFWarDiscovery"
		},
		"5144": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "router"
		},
		"5145": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "manifest"
		},
		"5146": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "routeModules"
		},
		"5147": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "isSpaMode"
		},
		"5148": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useScrollRestoration"
		},
		"5149": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useScrollRestoration"
		},
		"5150": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"5151": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5152": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.getKey"
		},
		"5153": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.storageKey"
		},
		"5154": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouter"
		},
		"5155": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouter.displayName"
		},
		"5156": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouter"
		},
		"5157": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"5158": {
			"sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
			"qualifiedName": "setDevServerHooks"
		},
		"5159": {
			"sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
			"qualifiedName": "setDevServerHooks"
		},
		"5160": {
			"sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
			"qualifiedName": "devServerHooks"
		},
		"5161": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "usePrompt"
		},
		"5162": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "usePrompt"
		},
		"5163": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"5164": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5165": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.message"
		},
		"5166": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.when"
		},
		"5167": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useActionData"
		},
		"5168": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useActionData"
		},
		"5169": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "T"
		},
		"5170": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useAsyncError"
		},
		"5171": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useAsyncError"
		},
		"5172": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useAsyncValue"
		},
		"5173": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useAsyncValue"
		},
		"5174": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useBeforeUnload"
		},
		"5175": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useBeforeUnload"
		},
		"5176": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "callback"
		},
		"5177": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5178": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5179": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "event"
		},
		"5180": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "options"
		},
		"5181": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5182": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.capture"
		},
		"5183": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useBlocker"
		},
		"5184": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useBlocker"
		},
		"5185": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "shouldBlock"
		},
		"5186": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFetcher"
		},
		"5187": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFetcher"
		},
		"5188": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "T"
		},
		"5189": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"5190": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5191": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.key"
		},
		"5192": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFetchers"
		},
		"5193": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFetchers"
		},
		"5194": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5195": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.key"
		},
		"5196": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFormAction"
		},
		"5197": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFormAction"
		},
		"5198": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "action"
		},
		"5199": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__1"
		},
		"5200": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5201": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.relative"
		},
		"5202": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useHref"
		},
		"5203": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useHref"
		},
		"5204": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "to"
		},
		"5205": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__1"
		},
		"5206": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__type"
		},
		"5207": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__type.relative"
		},
		"5208": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useInRouterContext"
		},
		"5209": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useInRouterContext"
		},
		"5210": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useLinkClickHandler"
		},
		"5211": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useLinkClickHandler"
		},
		"5212": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "E"
		},
		"5213": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "to"
		},
		"5214": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__1"
		},
		"5215": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5216": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.preventScrollReset"
		},
		"5217": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.relative"
		},
		"5218": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.replace"
		},
		"5219": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.state"
		},
		"5220": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.target"
		},
		"5221": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.viewTransition"
		},
		"5222": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5223": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5224": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "event"
		},
		"5225": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useLoaderData"
		},
		"5226": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useLoaderData"
		},
		"5227": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "T"
		},
		"5228": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useLocation"
		},
		"5229": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useLocation"
		},
		"5230": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useMatch"
		},
		"5231": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useMatch"
		},
		"5232": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "ParamKey"
		},
		"5233": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "Path"
		},
		"5234": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "pattern"
		},
		"5235": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useMatches"
		},
		"5236": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useMatches"
		},
		"5237": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigate"
		},
		"5238": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigate"
		},
		"5239": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigation"
		},
		"5240": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigation"
		},
		"5241": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigationType"
		},
		"5242": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigationType"
		},
		"5243": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useOutlet"
		},
		"5244": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useOutlet"
		},
		"5245": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "context"
		},
		"5246": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useOutletContext"
		},
		"5247": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useOutletContext"
		},
		"5248": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "Context"
		},
		"5249": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useParams"
		},
		"5250": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useParams"
		},
		"5251": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "ParamsOrKey"
		},
		"5252": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useResolvedPath"
		},
		"5253": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useResolvedPath"
		},
		"5254": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "to"
		},
		"5255": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__1"
		},
		"5256": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__type"
		},
		"5257": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__type.relative"
		},
		"5258": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRevalidator"
		},
		"5259": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRevalidator"
		},
		"5260": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__object"
		},
		"5261": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__object.state"
		},
		"5262": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__object.revalidate"
		},
		"5263": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__object.revalidate"
		},
		"5264": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRouteError"
		},
		"5265": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRouteError"
		},
		"5266": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRouteLoaderData"
		},
		"5267": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRouteLoaderData"
		},
		"5268": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "T"
		},
		"5269": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "routeId"
		},
		"5270": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRoutes"
		},
		"5271": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRoutes"
		},
		"5272": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "routes"
		},
		"5273": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "locationArg"
		},
		"5274": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useSearchParams"
		},
		"5275": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useSearchParams"
		},
		"5276": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "defaultInit"
		},
		"5277": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useSubmit"
		},
		"5278": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useSubmit"
		},
		"5279": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useViewTransitionState"
		},
		"5280": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useViewTransitionState"
		},
		"5281": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "to"
		},
		"5282": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "opts"
		},
		"5283": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"5284": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.relative"
		},
		"5285": {
			"sourceFileName": "packages/react-router-architect/index.ts",
			"qualifiedName": ""
		},
		"5286": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "GetLoadContextFunction"
		},
		"5287": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "__type"
		},
		"5288": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "__type"
		},
		"5289": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "event"
		},
		"5290": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "RequestHandler"
		},
		"5291": {
			"sourceFileName": "packages/react-router-architect/sessions/arcTableSessionStorage.ts",
			"qualifiedName": "createArcTableSessionStorage"
		},
		"5292": {
			"sourceFileName": "packages/react-router-architect/sessions/arcTableSessionStorage.ts",
			"qualifiedName": "createArcTableSessionStorage"
		},
		"5293": {
			"sourceFileName": "packages/react-router-architect/sessions/arcTableSessionStorage.ts",
			"qualifiedName": "Data"
		},
		"5294": {
			"sourceFileName": "packages/react-router-architect/sessions/arcTableSessionStorage.ts",
			"qualifiedName": "FlashData"
		},
		"5295": {
			"sourceFileName": "packages/react-router-architect/sessions/arcTableSessionStorage.ts",
			"qualifiedName": "__0"
		},
		"5296": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "createRequestHandler"
		},
		"5297": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "createRequestHandler"
		},
		"5298": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "__0"
		},
		"5299": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "__type"
		},
		"5300": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "__type.build"
		},
		"5301": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "__type.getLoadContext"
		},
		"5302": {
			"sourceFileName": "packages/react-router-architect/server.ts",
			"qualifiedName": "__type.mode"
		},
		"5303": {
			"sourceFileName": "packages/react-router-cloudflare/index.ts",
			"qualifiedName": ""
		},
		"5304": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "createPagesFunctionHandlerParams"
		},
		"5305": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "createPagesFunctionHandlerParams.build"
		},
		"5306": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type"
		},
		"5307": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type"
		},
		"5308": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "createPagesFunctionHandlerParams.getLoadContext"
		},
		"5309": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "createPagesFunctionHandlerParams.mode"
		},
		"5310": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "createPagesFunctionHandlerParams.Env"
		},
		"5311": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "GetLoadContextFunction"
		},
		"5312": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "Env"
		},
		"5313": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "Params"
		},
		"5314": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "Data"
		},
		"5315": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type"
		},
		"5316": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type"
		},
		"5317": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "args"
		},
		"5318": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type"
		},
		"5319": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type.context"
		},
		"5320": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type"
		},
		"5321": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type.cloudflare"
		},
		"5322": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type"
		},
		"5323": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type.caches"
		},
		"5324": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type.cf"
		},
		"5325": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type.ctx"
		},
		"5326": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type"
		},
		"5327": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type.passThroughOnException"
		},
		"5328": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type.waitUntil"
		},
		"5329": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__type.request"
		},
		"5330": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "RequestHandler"
		},
		"5331": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "Env"
		},
		"5332": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "createPagesFunctionHandler"
		},
		"5333": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "createPagesFunctionHandler"
		},
		"5334": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "Env"
		},
		"5335": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__0"
		},
		"5336": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__function"
		},
		"5337": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__function"
		},
		"5338": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "context"
		},
		"5339": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "createRequestHandler"
		},
		"5340": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "createRequestHandler"
		},
		"5341": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "Env"
		},
		"5342": {
			"sourceFileName": "packages/react-router-cloudflare/worker.ts",
			"qualifiedName": "__0"
		},
		"5343": {
			"sourceFileName": "packages/react-router-cloudflare/sessions/workersKVStorage.ts",
			"qualifiedName": "createWorkersKVSessionStorage"
		},
		"5344": {
			"sourceFileName": "packages/react-router-cloudflare/sessions/workersKVStorage.ts",
			"qualifiedName": "createWorkersKVSessionStorage"
		},
		"5345": {
			"sourceFileName": "packages/react-router-cloudflare/sessions/workersKVStorage.ts",
			"qualifiedName": "Data"
		},
		"5346": {
			"sourceFileName": "packages/react-router-cloudflare/sessions/workersKVStorage.ts",
			"qualifiedName": "FlashData"
		},
		"5347": {
			"sourceFileName": "packages/react-router-cloudflare/sessions/workersKVStorage.ts",
			"qualifiedName": "__0"
		},
		"5349": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": ""
		},
		"5350": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "BuildManifest"
		},
		"5351": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "ReactRouterConfig"
		},
		"5352": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5353": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.appDirectory"
		},
		"5354": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.basename"
		},
		"5355": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.buildDirectory"
		},
		"5356": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.buildEnd"
		},
		"5357": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.future"
		},
		"5358": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5359": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.__index"
		},
		"5361": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.prerender"
		},
		"5362": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5363": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5364": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "args"
		},
		"5365": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5366": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.getStaticPaths"
		},
		"5367": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5368": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5369": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.presets"
		},
		"5370": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.serverBuildFile"
		},
		"5371": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.serverBundles"
		},
		"5372": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.serverModuleFormat"
		},
		"5373": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.ssr"
		},
		"5374": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "Preset"
		},
		"5375": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5376": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.name"
		},
		"5377": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.reactRouterConfig"
		},
		"5378": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5379": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5380": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "args"
		},
		"5381": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5382": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.reactRouterUserConfig"
		},
		"5383": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.reactRouterConfigResolved"
		},
		"5384": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5385": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5386": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "args"
		},
		"5387": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5388": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.reactRouterConfig"
		},
		"5389": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "ServerBundlesFunction"
		},
		"5390": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5391": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5392": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "args"
		},
		"5393": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type"
		},
		"5394": {
			"sourceFileName": "packages/react-router-dev/config/config.ts",
			"qualifiedName": "__type.branch"
		},
		"5395": {
			"sourceFileName": "packages/react-router-dev/routes.ts",
			"qualifiedName": ""
		},
		"5396": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "RouteConfigEntry"
		},
		"5397": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "RouteConfigEntry.caseSensitive"
		},
		"5398": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "RouteConfigEntry.children"
		},
		"5399": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "RouteConfigEntry.file"
		},
		"5400": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "RouteConfigEntry.id"
		},
		"5401": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "RouteConfigEntry.index"
		},
		"5402": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "RouteConfigEntry.path"
		},
		"5403": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "RouteConfig"
		},
		"5404": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "getAppDirectory"
		},
		"5405": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "getAppDirectory"
		},
		"5406": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "index"
		},
		"5407": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "index"
		},
		"5408": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "file"
		},
		"5409": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "options"
		},
		"5410": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "layout"
		},
		"5411": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "layout"
		},
		"5412": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "file"
		},
		"5413": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "children"
		},
		"5414": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "layout"
		},
		"5415": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "file"
		},
		"5416": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "options"
		},
		"5417": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "children"
		},
		"5418": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "prefix"
		},
		"5419": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "prefix"
		},
		"5420": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "prefixPath"
		},
		"5421": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "routes"
		},
		"5422": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "relative"
		},
		"5423": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "relative"
		},
		"5424": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "directory"
		},
		"5425": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "route"
		},
		"5426": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "route"
		},
		"5427": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "path"
		},
		"5428": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "file"
		},
		"5429": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "children"
		},
		"5430": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "route"
		},
		"5431": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "path"
		},
		"5432": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "file"
		},
		"5433": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "options"
		},
		"5434": {
			"sourceFileName": "packages/react-router-dev/config/routes.ts",
			"qualifiedName": "children"
		},
		"5435": {
			"sourceFileName": "packages/react-router-dev/vite.ts",
			"qualifiedName": ""
		},
		"5436": {
			"sourceFileName": "packages/react-router-dev/vite/plugin.ts",
			"qualifiedName": "reactRouterVitePlugin"
		},
		"5437": {
			"sourceFileName": "packages/react-router-dev/vite/plugin.ts",
			"qualifiedName": "reactRouterVitePlugin"
		},
		"5438": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare.ts",
			"qualifiedName": ""
		},
		"5439": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "cloudflareDevProxyVitePlugin"
		},
		"5440": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "cloudflareDevProxyVitePlugin"
		},
		"5441": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "Env"
		},
		"5442": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "Cf"
		},
		"5443": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "options"
		},
		"5444": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "__type"
		},
		"5445": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "__type.getLoadContext"
		},
		"5447": {
			"sourceFileName": "packages/react-router-express/index.ts",
			"qualifiedName": ""
		},
		"5448": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "GetLoadContextFunction"
		},
		"5449": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"5450": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"5451": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "req"
		},
		"5452": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "res"
		},
		"5453": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "RequestHandler"
		},
		"5454": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"5455": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"5456": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "req"
		},
		"5457": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "res"
		},
		"5458": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "next"
		},
		"5459": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "createRequestHandler"
		},
		"5460": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "createRequestHandler"
		},
		"5461": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__0"
		},
		"5462": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"5463": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type.build"
		},
		"5464": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"5465": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"5466": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type.getLoadContext"
		},
		"5467": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type.mode"
		},
		"5468": {
			"sourceFileName": "packages/react-router-fs-routes/index.ts",
			"qualifiedName": ""
		},
		"5469": {
			"sourceFileName": "packages/react-router-fs-routes/index.ts",
			"qualifiedName": "flatRoutes"
		},
		"5470": {
			"sourceFileName": "packages/react-router-fs-routes/index.ts",
			"qualifiedName": "flatRoutes"
		},
		"5471": {
			"sourceFileName": "packages/react-router-fs-routes/index.ts",
			"qualifiedName": "options"
		},
		"5472": {
			"sourceFileName": "packages/react-router-fs-routes/index.ts",
			"qualifiedName": "__type"
		},
		"5473": {
			"sourceFileName": "packages/react-router-fs-routes/index.ts",
			"qualifiedName": "__type.ignoredRouteFiles"
		},
		"5474": {
			"sourceFileName": "packages/react-router-fs-routes/index.ts",
			"qualifiedName": "__type.rootDirectory"
		},
		"5475": {
			"sourceFileName": "packages/react-router-node/index.ts",
			"qualifiedName": ""
		},
		"5476": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "RequestListenerOptions"
		},
		"5477": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "RequestListenerOptions.build"
		},
		"5478": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "__type"
		},
		"5479": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "__type"
		},
		"5480": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "RequestListenerOptions.getLoadContext"
		},
		"5481": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "__type"
		},
		"5482": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "__type"
		},
		"5483": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "request"
		},
		"5484": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "client"
		},
		"5485": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "RequestListenerOptions.mode"
		},
		"5486": {
			"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
			"qualifiedName": "createFileSessionStorage"
		},
		"5487": {
			"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
			"qualifiedName": "createFileSessionStorage"
		},
		"5488": {
			"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
			"qualifiedName": "Data"
		},
		"5489": {
			"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
			"qualifiedName": "FlashData"
		},
		"5490": {
			"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
			"qualifiedName": "__0"
		},
		"5491": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "createReadableStreamFromReadable"
		},
		"5492": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "createReadableStreamFromReadable"
		},
		"5493": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "source"
		},
		"5494": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "__type"
		},
		"5495": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "__type.readableHighWaterMark"
		},
		"5496": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "createRequestListener"
		},
		"5497": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "createRequestListener"
		},
		"5498": {
			"sourceFileName": "packages/react-router-node/server.ts",
			"qualifiedName": "options"
		},
		"5499": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "readableStreamToString"
		},
		"5500": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "readableStreamToString"
		},
		"5501": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "stream"
		},
		"5502": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "encoding"
		},
		"5503": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writeAsyncIterableToWritable"
		},
		"5504": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writeAsyncIterableToWritable"
		},
		"5505": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "iterable"
		},
		"5506": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writable"
		},
		"5507": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writeReadableStreamToWritable"
		},
		"5508": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writeReadableStreamToWritable"
		},
		"5509": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "stream"
		},
		"5510": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writable"
		},
		"5511": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/index.ts",
			"qualifiedName": ""
		},
		"5512": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/defineRoutes.ts",
			"qualifiedName": "DefineRoutesFunction"
		},
		"5513": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/defineRoutes.ts",
			"qualifiedName": "__type"
		},
		"5514": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/defineRoutes.ts",
			"qualifiedName": "__type"
		},
		"5515": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/defineRoutes.ts",
			"qualifiedName": "callback"
		},
		"5516": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/defineRoutes.ts",
			"qualifiedName": "__type"
		},
		"5517": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/defineRoutes.ts",
			"qualifiedName": "__type"
		},
		"5518": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/defineRoutes.ts",
			"qualifiedName": "defineRoute"
		},
		"5519": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/index.ts",
			"qualifiedName": "remixRoutesOptionAdapter"
		},
		"5520": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/index.ts",
			"qualifiedName": "remixRoutesOptionAdapter"
		},
		"5521": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/index.ts",
			"qualifiedName": "routes"
		},
		"5522": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/index.ts",
			"qualifiedName": "__type"
		},
		"5523": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/index.ts",
			"qualifiedName": "__type"
		},
		"5524": {
			"sourceFileName": "packages/react-router-remix-routes-option-adapter/index.ts",
			"qualifiedName": "defineRoutes"
		},
		"5525": {
			"sourceFileName": "packages/react-router-serve/cli.ts",
			"qualifiedName": ""
		}
	},
	"files": {
		"entries": {
			"1": "packages/react-router/index.ts",
			"2": "packages/react-router-architect/index.ts",
			"3": "packages/react-router-cloudflare/index.ts",
			"4": "packages/react-router-dev/config.ts",
			"5": "packages/react-router-dev/routes.ts",
			"6": "packages/react-router-dev/vite.ts",
			"7": "packages/react-router-dev/vite/cloudflare.ts",
			"8": "packages/react-router-express/index.ts",
			"9": "packages/react-router-fs-routes/index.ts",
			"10": "packages/react-router-node/index.ts",
			"11": "packages/react-router-remix-routes-option-adapter/index.ts",
			"12": "packages/react-router-serve/cli.ts"
		},
		"reflections": {
			"1": 2811,
			"2": 5285,
			"3": 5303,
			"4": 5349,
			"5": 5395,
			"6": 5435,
			"7": 5438,
			"8": 5447,
			"9": 5468,
			"10": 5475,
			"11": 5511,
			"12": 5525
		}
	}
}
